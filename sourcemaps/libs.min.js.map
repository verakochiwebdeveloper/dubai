{"version":3,"sources":["swiper-bundle.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","Swiper","this","isObject$1","obj","constructor","Object","extend$1","target","src","keys","forEach","key","length","ssrDocument","body","[object Object]","activeElement","nodeName","querySelector","querySelectorAll","getElementById","createEvent","createElement","children","childNodes","style","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","getDocument","doc","document","ssrWindow","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","screen","matchMedia","requestAnimationFrame","callback","setTimeout","id","clearTimeout","getWindow","win","window","nextTick","delay","now","Date","getTranslate","el","axis","matrix","curTransform","transformMatrix","curStyle","currentStyle","getComputedStyle$1","WebKitCSSMatrix","transform","webkitTransform","split","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","parseFloat","m42","isObject","o","prototype","call","slice","isNode","node","HTMLElement","nodeType","extend","to","arguments","undefined","noExtend","i","nextSource","keysArray","filter","indexOf","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","__swiper__","setCSSProperty","varName","varValue","setProperty","animateCSSModeScroll","_ref","swiper","targetPosition","side","startPosition","translate","time","startTime","duration","params","speed","wrapperEl","scrollSnapType","cancelAnimationFrame","cssModeFrameID","dir","isOutOfBound","current","animate","getTime","progress","Math","max","min","easeProgress","cos","PI","currentPosition","scrollTo","overflow","getSlideTransformEl","slideEl","shadowEl","elementChildren","element","selector","matches","tag","classes","classList","add","Array","isArray","elementOffset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","elementStyle","prop","elementIndex","child","previousSibling","elementParents","parents","parent","parentElement","push","elementTransitionEnd","addEventListener","fireCallBack","e","removeEventListener","elementOuterSize","size","includeMargins","offsetWidth","support","deviceCached","browser","getSupport","smoothScroll","documentElement","touch","DocumentTouch","calcSupport","getDevice","overrides","_temp","platform","ua","device","ios","android","screenWidth","width","screenHeight","height","match","ipad","ipod","iphone","windows","macos","os","calcDevice","getBrowser","needPerspectiveFix","isSafari","toLowerCase","String","includes","major","minor","num","Number","isWebView","test","calcBrowser","eventsEmitter","events","handler","priority","eventsListeners","destroyed","method","event","onceHandler","off","__emitterProxy","_len","args","_key","apply","on","eventsAnyListeners","index","splice","eventHandler","data","context","_len2","_key2","unshift","processLazyPreloader","imageEl","closest","isElement","slideClass","lazyEl","lazyPreloaderClass","remove","unlazy","slides","removeAttribute","preload","amount","lazyPreloadPrevNext","slidesPerView","slidesPerViewDynamic","ceil","activeIndex","grid","rows","activeColumn","preloadColumns","from","_","column","slideIndexLastInView","rewind","loop","realIndex","transitionEmit","runCallbacks","direction","step","previousIndex","emit","onTouchStart","touchEventsData","evCache","touches","enabled","simulateTouch","pointerType","animating","preventInteractionOnTransition","cssMode","loopFix","originalEvent","targetEl","touchEventsTarget","contains","which","button","isTouched","isMoved","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","shadowRoot","noSwipingSelector","isTargetShadow","noSwiping","base","__closestFrom","assignedSlot","found","getRootNode","closestElement","allowClick","swipeHandler","currentX","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","assign","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","updateSize","swipeDirection","threshold","allowThresholdMove","focusableElements","blur","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","freeMode","onTouchMove","rtlTranslate","rtl","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","isVertical","maxTranslate","minTranslate","targetTouches","diffX","diffY","sqrt","touchAngle","isHorizontal","atan2","abs","zoom","cancelable","touchMoveStopPropagation","nested","stopPropagation","diff","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","startTranslate","setTransition","evt","bubbles","dispatchEvent","allowMomentumBounce","grabCursor","allowSlideNext","allowSlidePrev","setGrabCursor","loopFixed","setTranslate","currentTranslate","disableParentSwiper","resistanceRatio","centeredSlides","activeSlideIndex","resistance","followFinger","watchSlidesProgress","updateActiveIndex","updateSlidesClasses","updateProgress","onTouchEnd","type","slidesGrid","touchEndTime","timeDiff","pathTree","updateClickedSlide","lastClickTime","currentPos","stopIndex","groupSize","slidesSizesGrid","slidesPerGroupSkip","slidesPerGroup","increment","rewindFirstIndex","rewindLastIndex","isBeginning","virtual","isEnd","ratio","longSwipesMs","longSwipes","slideTo","longSwipesRatio","shortSwipes","navigation","nextEl","prevEl","onResize","breakpoints","setBreakpoint","snapGrid","isVirtual","updateSlides","isVirtualLoop","slideToLoop","autoplay","running","paused","resizeTimeout","resume","watchOverflow","checkOverflow","onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","onScroll","newProgress","previousTranslate","translatesDiff","onLoad","autoHeight","update","dummyEventAttached","dummyEventListener","capture","domMethod","swiperMethod","passive","updateOnWindowResize","isGridEnabled","defaults","init","initialSlide","resizeObserver","createElements","url","setWrapperSize","virtualTranslate","effect","breakpointsBase","spaceBetween","slidesPerGroupAuto","centeredSlidesBounds","slidesOffsetBefore","slidesOffsetAfter","normalizeSlideIndex","centerInsufficientSlides","roundLengths","uniqueNavElements","slideToClickedSlide","loopedSlides","loopPreventsSliding","passiveListeners","maxBackfaceHiddenSlides","containerModifierClass","slideActiveClass","slideVisibleClass","slideNextClass","slidePrevClass","wrapperClass","runCallbacksOnInit","_emitClasses","moduleExtendParams","allModulesParams","moduleParamName","moduleParams","auto","prototypes","clientWidth","clientHeight","parseInt","isNaN","getDirectionLabel","property","margin-top","margin-bottom ","margin-left","margin-right","padding-left","padding-right","marginRight","getDirectionPropertyValue","label","slidesEl","swiperSize","wrongRTL","previousSlidesLength","slidesLength","offsetBefore","offsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","gridEnabled","slideSize","initSlides","shouldResetSlideSize","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","paddingLeft","paddingRight","boxSizing","floor","swiperSlideSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","slidesBefore","slidesAfter","slideIndex","allSlidesSize","slideSizeValue","maxSnap","snap","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","updateSlidesOffset","backFaceHiddenClass","hasClassBackfaceClassAdded","updateAutoHeight","activeSlides","newHeight","getSlideByIndex","getSlideIndexByData","visibleSlides","offsetHeight","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","cssOverflowAdjustment","updateSlidesProgress","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","originalProgress","multiplier","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","firstSlideIndex","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","getFilteredSlide","activeSlide","nextSlide","nextEls","nextElementSibling","next","elementNextAll","prevSlide","prevEls","previousElementSibling","prev","elementPrevAll","emitSlidesClasses","newActiveIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","getActiveIndexByTranslate","skip","getAttribute","initialized","slideFound","clickedSlide","clickedIndex","byController","x","y","translateTo","translateBounds","internal","newTranslate","isH","behavior","onTranslateToWrapperTransitionEnd","transition","transitionDuration","transitionStart","transitionEnd","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","newIndex","slideNext","perGroup","_clientLeft","slidePrev","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","slideReset","slideToClosest","currentSnap","slideToIndex","slideSelector","getSlideIndex","loopCreate","slideRealIndex","setAttribute","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","swiperLoopMoveDOM","prepend","append","recalcSlides","currentSlideTranslate","controller","control","loopParams","c","loopDestroy","newSlidesOrder","swiperSlideIndex","moving","isLocked","__preventObserver__","cursor","unsetGrabCursor","attachEvents","bind","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointParams","originalParams","wasMultiRow","isMultiRow","wasEnabled","emitContainerClasses","fill","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","containerEl","currentHeight","innerHeight","points","point","minRatio","substr","value","sort","b","wasLocked","lastSlideRightEdge","addClasses","classNames","suffixes","entries","prefix","resultClasses","item","prepareClasses","free-mode","autoheight","grid-column","css-mode","centered","watch-progress","removeClasses","extendedDefaults","swipers","newParams","modules","__modules__","mod","extendParams","once","swiperParams","passedParams","eventName","onAny","velocity","trunc","clickTimeout","velocities","imagesToLoad","imagesLoaded","cls","className","updates","getSlideClasses","view","exact","spv","breakLoop","translateValue","translated","complete","newDirection","needUpdate","currentDirection","mounted","getWrapperSelector","trim","getWrapper","mount","deleteInstance","cleanStyles","object","deleteProps","newDefaults","m","installModule","createElementIfNotDefined","checkProps","classesToSelector","appendSlide","appendElement","tempDOM","innerHTML","observer","prependSlide","prependElement","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","effectInit","overwriteParams","perspective","recreateShadows","getEffectParams","requireUpdateOnVirtual","overwriteParamsResult","_s","slideShadows","effectTarget","effectParams","transformEl","backfaceVisibility","effectVirtualTransitionEnd","transformElements","allSlides","transitionEndTarget","eventTriggered","parentNode","getSlide","createShadow","shadowClass","shadowContainer","prototypeGroup","protoMethod","use","animationFrame","resizeHandler","orientationChangeHandler","ResizeObserver","newWidth","_ref2","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","observers","attach","options","MutationObserver","WebkitMutationObserver","mutations","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","disconnect","cssModeTimeout","cache","renderSlide","renderExternal","renderExternalUpdate","addSlidesBefore","addSlidesAfter","offset","force","previousFrom","previousTo","previousSlidesGrid","previousOffset","offsetProp","onRendered","slidesToRender","prependIndexes","appendIndexes","loopFrom","loopTo","domSlidesAssigned","numberOfNewSlides","newCache","cachedIndex","cachedEl","cachedElIndex","handle","kc","keyCode","charCode","pageUpDown","keyboard","isPageUp","isPageDown","isArrowLeft","isArrowRight","isArrowUp","isArrowDown","shiftKey","altKey","ctrlKey","metaKey","onlyInViewport","inView","swiperWidth","swiperHeight","windowWidth","windowHeight","swiperOffset","swiperCoord","returnValue","timeout","mousewheel","releaseOnEdges","invert","forceToAxis","sensitivity","eventsTarget","thresholdDelta","thresholdTime","noMousewheelClass","lastEventBeforeSnap","lastScrollTime","recentWheelEvents","handleMouseEnter","mouseEntered","handleMouseLeave","animateSlider","newEvent","delta","raw","targetElContainsTarget","rtlFactor","sX","sY","pX","pY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","positions","sign","ignoreWheelEvents","position","sticky","shift","prevEvent","firstEvent","snapToThreshold","autoplayDisableOnInteraction","stop","releaseScroll","hideOnClick","disabledClass","hiddenClass","lockClass","navigationDisabledClass","makeElementsArray","getEl","res","toggleEl","disabled","subEl","tagName","onPrevClick","onNextClick","initButton","destroy","destroyButton","pagination","clickable","isHidden","toggle","pfx","bulletSize","bulletElement","renderBullet","renderProgressbar","renderFraction","renderCustom","progressbarOpposite","dynamicBullets","dynamicMainBullets","formatFractionCurrent","number","formatFractionTotal","bulletClass","bulletActiveClass","modifierClass","currentClass","totalClass","progressbarFillClass","progressbarOppositeClass","clickableClass","horizontalClass","verticalClass","paginationDisabledClass","bullets","dynamicBulletIndex","isPaginationDisabled","setSideBullets","bulletEl","onBulletClick","newSlideIndex","currentSlideIndex","total","firstIndex","midIndex","classesToRemove","suffix","s","flat","bullet","bulletIndex","firstDisplayedBullet","lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","subElIndex","fractionEl","textContent","totalEl","progressbarDirection","scale","scaleX","scaleY","progressEl","render","paginationHTML","numberOfBullets","dragStartPos","dragSize","trackSize","divider","dragTimeout","scrollbar","dragEl","newSize","newPos","hide","opacity","display","getPointerPosition","clientX","clientY","setDragPosition","positionRatio","onDragStart","onDragMove","onDragEnd","snapOnRelease","activeListener","passiveListener","eventMethod","swiperEl","dragClass","draggable","scrollbarDisabledClass","parallax","setTransform","p","rotate","currentOpacity","_swiper","parallaxEl","parallaxDuration","maxRatio","containerClass","zoomedSlideClass","fakeGestureTouched","fakeGestureMoved","currentScale","isScaling","gesture","originX","originY","slideWidth","slideHeight","imageWrapEl","image","minX","minY","maxX","maxY","touchesStart","touchesCurrent","prevPositionX","prevPositionY","prevTime","getDistanceBetweenTouches","x1","y1","x2","y2","eventWithinSlide","onGestureStart","scaleStart","getScaleOrigin","onGestureChange","scaleMove","onGestureEnd","eventWithinZoomContainer","scaledWidth","scaledHeight","scaleRatio","onTransitionEnd","zoomIn","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","touchAction","forceZoomRatio","zoomOut","zoomToggle","getListeners","activeListenerWithCapture","defineProperty","get","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","momentumDuration","in","out","LinearSpline","binarySearch","maxIndex","minIndex","guess","array","i1","i3","interpolate","removeSpline","spline","inverse","by","controlElement","onControllerSwiper","_t","controlled","controlledTranslate","setControlledTranslate","getInterpolateFunction","isFinite","setControlledTransition","a11y","notificationClass","prevSlideMessage","nextSlideMessage","firstSlideMessage","lastSlideMessage","paginationBulletMessage","slideLabelMessage","containerMessage","containerRoleDescriptionMessage","itemRoleDescriptionMessage","slideRole","clicked","liveRegion","notify","message","notification","makeElFocusable","makeElNotFocusable","addElRole","role","addElRoleDescription","description","addElLabel","disableEl","enableEl","onEnterOrSpaceKey","click","hasPagination","hasClickablePagination","initNavEl","wrapperId","controls","addElControls","handlePointerDown","handlePointerUp","handleFocus","isActive","isVisible","sourceCapabilities","firesTouchEvents","repeat","round","random","live","addElLive","updateNavigation","updatePagination","root","replaceState","keepQuery","paths","slugify","text","getPathValues","urlOverride","URL","pathArray","part","setHistory","currentState","state","pushState","scrollToSlide","setHistoryPopState","hashNavigation","watchState","slideWithHash","onHashChange","newHash","activeSlideEl","setHash","activeSlideHash","raf","timeLeft","waitForTransition","disableOnInteraction","stopOnLastSlide","reverseDirection","pauseOnMouseEnter","autoplayTimeLeft","wasPaused","pausedByTouch","touchStartTimeout","slideChanged","pausedByInteraction","autoplayDelayTotal","autoplayDelayCurrent","autoplayStartTime","calcTimeLeft","run","delayForce","currentSlideDelay","getSlideDelay","proceed","start","pause","reset","onVisibilityChange","visibilityState","onPointerEnter","onPointerLeave","thumbs","multipleActiveThumbs","autoScrollOffset","slideThumbActiveClass","thumbsContainerClass","swiperCreated","onThumbClick","thumbsSwiper","thumbsParams","SwiperClass","thumbsSwiperParams","thumbsToActivate","thumbActiveClass","useOffset","currentThumbsIndex","newThumbsIndex","newThumbsSlide","getThumbsElementAndInit","thumbsElement","onThumbsSwiper","watchForThumbsToAppear","momentum","momentumRatio","momentumBounce","momentumBounceRatio","momentumVelocityRatio","minimumVelocity","lastMoveEvent","pop","velocityEvent","distance","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","j","moveDistance","currentSlideSize","slidesNumberEvenToRows","slidesPerRow","numFullColumns","getSpaceBetween","newSlideOrderIndex","row","groupIndex","slideIndexInGroup","columnsInGroup","order","fadeEffect","crossFade","tx","ty","slideOpacity","cubeEffect","shadow","shadowOffset","shadowScale","createSlideShadows","shadowBefore","shadowAfter","cubeShadowEl","wrapperRotate","slideAngle","tz","transformOrigin","shadowAngle","sin","scale1","scale2","zFactor","flipEffect","limitRotation","rotateY","rotateX","zIndex","coverflowEffect","stretch","depth","modifier","center","centerOffset","offsetMultiplier","translateZ","slideTransform","shadowBeforeEl","shadowAfterEl","creativeEffect","limitProgress","shadowPerProgress","progressMultiplier","getTranslateValue","isCenteredSlides","margin","r","custom","translateString","rotateString","scaleString","opacityString","shadowOpacity","cardsEffect","perSlideRotate","perSlideOffset","tX","tY","tZ","tXAdd","isSwipeToNext","isSwipeToPrev","subProgress"],"mappings":"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","file":"../swiper/libs.min.js","sourcesContent":["/**\n * Swiper 9.4.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: June 13, 2023\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Swiper = factory());\n})(this, (function () { 'use strict';\n\n    /**\n     * SSR Window 4.0.2\n     * Better handling for window object in SSR environment\n     * https://github.com/nolimits4web/ssr-window\n     *\n     * Copyright 2021, Vladimir Kharlampidi\n     *\n     * Licensed under MIT\n     *\n     * Released on: December 13, 2021\n     */\n    /* eslint-disable no-param-reassign */\n    function isObject$1(obj) {\n      return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\n    }\n    function extend$1(target, src) {\n      if (target === void 0) {\n        target = {};\n      }\n      if (src === void 0) {\n        src = {};\n      }\n      Object.keys(src).forEach(key => {\n        if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject$1(src[key]) && isObject$1(target[key]) && Object.keys(src[key]).length > 0) {\n          extend$1(target[key], src[key]);\n        }\n      });\n    }\n    const ssrDocument = {\n      body: {},\n      addEventListener() {},\n      removeEventListener() {},\n      activeElement: {\n        blur() {},\n        nodeName: ''\n      },\n      querySelector() {\n        return null;\n      },\n      querySelectorAll() {\n        return [];\n      },\n      getElementById() {\n        return null;\n      },\n      createEvent() {\n        return {\n          initEvent() {}\n        };\n      },\n      createElement() {\n        return {\n          children: [],\n          childNodes: [],\n          style: {},\n          setAttribute() {},\n          getElementsByTagName() {\n            return [];\n          }\n        };\n      },\n      createElementNS() {\n        return {};\n      },\n      importNode() {\n        return null;\n      },\n      location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: ''\n      }\n    };\n    function getDocument() {\n      const doc = typeof document !== 'undefined' ? document : {};\n      extend$1(doc, ssrDocument);\n      return doc;\n    }\n    const ssrWindow = {\n      document: ssrDocument,\n      navigator: {\n        userAgent: ''\n      },\n      location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: ''\n      },\n      history: {\n        replaceState() {},\n        pushState() {},\n        go() {},\n        back() {}\n      },\n      CustomEvent: function CustomEvent() {\n        return this;\n      },\n      addEventListener() {},\n      removeEventListener() {},\n      getComputedStyle() {\n        return {\n          getPropertyValue() {\n            return '';\n          }\n        };\n      },\n      Image() {},\n      Date() {},\n      screen: {},\n      setTimeout() {},\n      clearTimeout() {},\n      matchMedia() {\n        return {};\n      },\n      requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n          callback();\n          return null;\n        }\n        return setTimeout(callback, 0);\n      },\n      cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n          return;\n        }\n        clearTimeout(id);\n      }\n    };\n    function getWindow() {\n      const win = typeof window !== 'undefined' ? window : {};\n      extend$1(win, ssrWindow);\n      return win;\n    }\n\n    function deleteProps(obj) {\n      const object = obj;\n      Object.keys(object).forEach(key => {\n        try {\n          object[key] = null;\n        } catch (e) {\n          // no getter for object\n        }\n        try {\n          delete object[key];\n        } catch (e) {\n          // something got wrong\n        }\n      });\n    }\n    function nextTick(callback, delay) {\n      if (delay === void 0) {\n        delay = 0;\n      }\n      return setTimeout(callback, delay);\n    }\n    function now() {\n      return Date.now();\n    }\n    function getComputedStyle$1(el) {\n      const window = getWindow();\n      let style;\n      if (window.getComputedStyle) {\n        style = window.getComputedStyle(el, null);\n      }\n      if (!style && el.currentStyle) {\n        style = el.currentStyle;\n      }\n      if (!style) {\n        style = el.style;\n      }\n      return style;\n    }\n    function getTranslate(el, axis) {\n      if (axis === void 0) {\n        axis = 'x';\n      }\n      const window = getWindow();\n      let matrix;\n      let curTransform;\n      let transformMatrix;\n      const curStyle = getComputedStyle$1(el);\n      if (window.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(',').length > 6) {\n          curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n        }\n        // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n      } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n        matrix = transformMatrix.toString().split(',');\n      }\n      if (axis === 'x') {\n        // Latest Chrome and webkits Fix\n        if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n        // Normal Browsers\n        else curTransform = parseFloat(matrix[4]);\n      }\n      if (axis === 'y') {\n        // Latest Chrome and webkits Fix\n        if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n        // Crazy IE10 Matrix\n        else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n        // Normal Browsers\n        else curTransform = parseFloat(matrix[5]);\n      }\n      return curTransform || 0;\n    }\n    function isObject(o) {\n      return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n    }\n    function isNode(node) {\n      // eslint-disable-next-line\n      if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n        return node instanceof HTMLElement;\n      }\n      return node && (node.nodeType === 1 || node.nodeType === 11);\n    }\n    function extend() {\n      const to = Object(arguments.length <= 0 ? undefined : arguments[0]);\n      const noExtend = ['__proto__', 'constructor', 'prototype'];\n      for (let i = 1; i < arguments.length; i += 1) {\n        const nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];\n        if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n          const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n          for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n            const nextKey = keysArray[nextIndex];\n            const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n            if (desc !== undefined && desc.enumerable) {\n              if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n                if (nextSource[nextKey].__swiper__) {\n                  to[nextKey] = nextSource[nextKey];\n                } else {\n                  extend(to[nextKey], nextSource[nextKey]);\n                }\n              } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n                to[nextKey] = {};\n                if (nextSource[nextKey].__swiper__) {\n                  to[nextKey] = nextSource[nextKey];\n                } else {\n                  extend(to[nextKey], nextSource[nextKey]);\n                }\n              } else {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n      }\n      return to;\n    }\n    function setCSSProperty(el, varName, varValue) {\n      el.style.setProperty(varName, varValue);\n    }\n    function animateCSSModeScroll(_ref) {\n      let {\n        swiper,\n        targetPosition,\n        side\n      } = _ref;\n      const window = getWindow();\n      const startPosition = -swiper.translate;\n      let startTime = null;\n      let time;\n      const duration = swiper.params.speed;\n      swiper.wrapperEl.style.scrollSnapType = 'none';\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      const dir = targetPosition > startPosition ? 'next' : 'prev';\n      const isOutOfBound = (current, target) => {\n        return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n      };\n      const animate = () => {\n        time = new Date().getTime();\n        if (startTime === null) {\n          startTime = time;\n        }\n        const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n        const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n        let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n        if (isOutOfBound(currentPosition, targetPosition)) {\n          currentPosition = targetPosition;\n        }\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n        if (isOutOfBound(currentPosition, targetPosition)) {\n          swiper.wrapperEl.style.overflow = 'hidden';\n          swiper.wrapperEl.style.scrollSnapType = '';\n          setTimeout(() => {\n            swiper.wrapperEl.style.overflow = '';\n            swiper.wrapperEl.scrollTo({\n              [side]: currentPosition\n            });\n          });\n          window.cancelAnimationFrame(swiper.cssModeFrameID);\n          return;\n        }\n        swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n      };\n      animate();\n    }\n    function getSlideTransformEl(slideEl) {\n      return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n    }\n    function elementChildren(element, selector) {\n      if (selector === void 0) {\n        selector = '';\n      }\n      return [...element.children].filter(el => el.matches(selector));\n    }\n    function createElement(tag, classes) {\n      if (classes === void 0) {\n        classes = [];\n      }\n      const el = document.createElement(tag);\n      el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n      return el;\n    }\n    function elementOffset(el) {\n      const window = getWindow();\n      const document = getDocument();\n      const box = el.getBoundingClientRect();\n      const body = document.body;\n      const clientTop = el.clientTop || body.clientTop || 0;\n      const clientLeft = el.clientLeft || body.clientLeft || 0;\n      const scrollTop = el === window ? window.scrollY : el.scrollTop;\n      const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n      return {\n        top: box.top + scrollTop - clientTop,\n        left: box.left + scrollLeft - clientLeft\n      };\n    }\n    function elementPrevAll(el, selector) {\n      const prevEls = [];\n      while (el.previousElementSibling) {\n        const prev = el.previousElementSibling; // eslint-disable-line\n        if (selector) {\n          if (prev.matches(selector)) prevEls.push(prev);\n        } else prevEls.push(prev);\n        el = prev;\n      }\n      return prevEls;\n    }\n    function elementNextAll(el, selector) {\n      const nextEls = [];\n      while (el.nextElementSibling) {\n        const next = el.nextElementSibling; // eslint-disable-line\n        if (selector) {\n          if (next.matches(selector)) nextEls.push(next);\n        } else nextEls.push(next);\n        el = next;\n      }\n      return nextEls;\n    }\n    function elementStyle(el, prop) {\n      const window = getWindow();\n      return window.getComputedStyle(el, null).getPropertyValue(prop);\n    }\n    function elementIndex(el) {\n      let child = el;\n      let i;\n      if (child) {\n        i = 0;\n        // eslint-disable-next-line\n        while ((child = child.previousSibling) !== null) {\n          if (child.nodeType === 1) i += 1;\n        }\n        return i;\n      }\n      return undefined;\n    }\n    function elementParents(el, selector) {\n      const parents = []; // eslint-disable-line\n      let parent = el.parentElement; // eslint-disable-line\n      while (parent) {\n        if (selector) {\n          if (parent.matches(selector)) parents.push(parent);\n        } else {\n          parents.push(parent);\n        }\n        parent = parent.parentElement;\n      }\n      return parents;\n    }\n    function elementTransitionEnd(el, callback) {\n      function fireCallBack(e) {\n        if (e.target !== el) return;\n        callback.call(el, e);\n        el.removeEventListener('transitionend', fireCallBack);\n      }\n      if (callback) {\n        el.addEventListener('transitionend', fireCallBack);\n      }\n    }\n    function elementOuterSize(el, size, includeMargins) {\n      const window = getWindow();\n      if (includeMargins) {\n        return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n      }\n      return el.offsetWidth;\n    }\n\n    let support;\n    function calcSupport() {\n      const window = getWindow();\n      const document = getDocument();\n      return {\n        smoothScroll: document.documentElement && document.documentElement.style && 'scrollBehavior' in document.documentElement.style,\n        touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n      };\n    }\n    function getSupport() {\n      if (!support) {\n        support = calcSupport();\n      }\n      return support;\n    }\n\n    let deviceCached;\n    function calcDevice(_temp) {\n      let {\n        userAgent\n      } = _temp === void 0 ? {} : _temp;\n      const support = getSupport();\n      const window = getWindow();\n      const platform = window.navigator.platform;\n      const ua = userAgent || window.navigator.userAgent;\n      const device = {\n        ios: false,\n        android: false\n      };\n      const screenWidth = window.screen.width;\n      const screenHeight = window.screen.height;\n      const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n      let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n      const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n      const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n      const windows = platform === 'Win32';\n      let macos = platform === 'MacIntel';\n\n      // iPadOs 13 fix\n      const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n      if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n        ipad = ua.match(/(Version)\\/([\\d.]+)/);\n        if (!ipad) ipad = [0, 1, '13_0_0'];\n        macos = false;\n      }\n\n      // Android\n      if (android && !windows) {\n        device.os = 'android';\n        device.android = true;\n      }\n      if (ipad || iphone || ipod) {\n        device.os = 'ios';\n        device.ios = true;\n      }\n\n      // Export object\n      return device;\n    }\n    function getDevice(overrides) {\n      if (overrides === void 0) {\n        overrides = {};\n      }\n      if (!deviceCached) {\n        deviceCached = calcDevice(overrides);\n      }\n      return deviceCached;\n    }\n\n    let browser;\n    function calcBrowser() {\n      const window = getWindow();\n      let needPerspectiveFix = false;\n      function isSafari() {\n        const ua = window.navigator.userAgent.toLowerCase();\n        return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n      }\n      if (isSafari()) {\n        const ua = String(window.navigator.userAgent);\n        if (ua.includes('Version/')) {\n          const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n          needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n        }\n      }\n      return {\n        isSafari: needPerspectiveFix || isSafari(),\n        needPerspectiveFix,\n        isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n      };\n    }\n    function getBrowser() {\n      if (!browser) {\n        browser = calcBrowser();\n      }\n      return browser;\n    }\n\n    function Resize(_ref) {\n      let {\n        swiper,\n        on,\n        emit\n      } = _ref;\n      const window = getWindow();\n      let observer = null;\n      let animationFrame = null;\n      const resizeHandler = () => {\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n        emit('beforeResize');\n        emit('resize');\n      };\n      const createObserver = () => {\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n        observer = new ResizeObserver(entries => {\n          animationFrame = window.requestAnimationFrame(() => {\n            const {\n              width,\n              height\n            } = swiper;\n            let newWidth = width;\n            let newHeight = height;\n            entries.forEach(_ref2 => {\n              let {\n                contentBoxSize,\n                contentRect,\n                target\n              } = _ref2;\n              if (target && target !== swiper.el) return;\n              newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n              newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n            });\n            if (newWidth !== width || newHeight !== height) {\n              resizeHandler();\n            }\n          });\n        });\n        observer.observe(swiper.el);\n      };\n      const removeObserver = () => {\n        if (animationFrame) {\n          window.cancelAnimationFrame(animationFrame);\n        }\n        if (observer && observer.unobserve && swiper.el) {\n          observer.unobserve(swiper.el);\n          observer = null;\n        }\n      };\n      const orientationChangeHandler = () => {\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n        emit('orientationchange');\n      };\n      on('init', () => {\n        if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n          createObserver();\n          return;\n        }\n        window.addEventListener('resize', resizeHandler);\n        window.addEventListener('orientationchange', orientationChangeHandler);\n      });\n      on('destroy', () => {\n        removeObserver();\n        window.removeEventListener('resize', resizeHandler);\n        window.removeEventListener('orientationchange', orientationChangeHandler);\n      });\n    }\n\n    function Observer(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit\n      } = _ref;\n      const observers = [];\n      const window = getWindow();\n      const attach = function (target, options) {\n        if (options === void 0) {\n          options = {};\n        }\n        const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n        const observer = new ObserverFunc(mutations => {\n          // The observerUpdate event should only be triggered\n          // once despite the number of mutations.  Additional\n          // triggers are redundant and are very costly\n          if (swiper.__preventObserver__) return;\n          if (mutations.length === 1) {\n            emit('observerUpdate', mutations[0]);\n            return;\n          }\n          const observerUpdate = function observerUpdate() {\n            emit('observerUpdate', mutations[0]);\n          };\n          if (window.requestAnimationFrame) {\n            window.requestAnimationFrame(observerUpdate);\n          } else {\n            window.setTimeout(observerUpdate, 0);\n          }\n        });\n        observer.observe(target, {\n          attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n          childList: typeof options.childList === 'undefined' ? true : options.childList,\n          characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n        });\n        observers.push(observer);\n      };\n      const init = () => {\n        if (!swiper.params.observer) return;\n        if (swiper.params.observeParents) {\n          const containerParents = elementParents(swiper.el);\n          for (let i = 0; i < containerParents.length; i += 1) {\n            attach(containerParents[i]);\n          }\n        }\n        // Observe container\n        attach(swiper.el, {\n          childList: swiper.params.observeSlideChildren\n        });\n\n        // Observe wrapper\n        attach(swiper.wrapperEl, {\n          attributes: false\n        });\n      };\n      const destroy = () => {\n        observers.forEach(observer => {\n          observer.disconnect();\n        });\n        observers.splice(0, observers.length);\n      };\n      extendParams({\n        observer: false,\n        observeParents: false,\n        observeSlideChildren: false\n      });\n      on('init', init);\n      on('destroy', destroy);\n    }\n\n    /* eslint-disable no-underscore-dangle */\n\n    var eventsEmitter = {\n      on(events, handler, priority) {\n        const self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (typeof handler !== 'function') return self;\n        const method = priority ? 'unshift' : 'push';\n        events.split(' ').forEach(event => {\n          if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n          self.eventsListeners[event][method](handler);\n        });\n        return self;\n      },\n      once(events, handler, priority) {\n        const self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (typeof handler !== 'function') return self;\n        function onceHandler() {\n          self.off(events, onceHandler);\n          if (onceHandler.__emitterProxy) {\n            delete onceHandler.__emitterProxy;\n          }\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          handler.apply(self, args);\n        }\n        onceHandler.__emitterProxy = handler;\n        return self.on(events, onceHandler, priority);\n      },\n      onAny(handler, priority) {\n        const self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (typeof handler !== 'function') return self;\n        const method = priority ? 'unshift' : 'push';\n        if (self.eventsAnyListeners.indexOf(handler) < 0) {\n          self.eventsAnyListeners[method](handler);\n        }\n        return self;\n      },\n      offAny(handler) {\n        const self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (!self.eventsAnyListeners) return self;\n        const index = self.eventsAnyListeners.indexOf(handler);\n        if (index >= 0) {\n          self.eventsAnyListeners.splice(index, 1);\n        }\n        return self;\n      },\n      off(events, handler) {\n        const self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (!self.eventsListeners) return self;\n        events.split(' ').forEach(event => {\n          if (typeof handler === 'undefined') {\n            self.eventsListeners[event] = [];\n          } else if (self.eventsListeners[event]) {\n            self.eventsListeners[event].forEach((eventHandler, index) => {\n              if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n                self.eventsListeners[event].splice(index, 1);\n              }\n            });\n          }\n        });\n        return self;\n      },\n      emit() {\n        const self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (!self.eventsListeners) return self;\n        let events;\n        let data;\n        let context;\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n          events = args[0];\n          data = args.slice(1, args.length);\n          context = self;\n        } else {\n          events = args[0].events;\n          data = args[0].data;\n          context = args[0].context || self;\n        }\n        data.unshift(context);\n        const eventsArray = Array.isArray(events) ? events : events.split(' ');\n        eventsArray.forEach(event => {\n          if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n            self.eventsAnyListeners.forEach(eventHandler => {\n              eventHandler.apply(context, [event, ...data]);\n            });\n          }\n          if (self.eventsListeners && self.eventsListeners[event]) {\n            self.eventsListeners[event].forEach(eventHandler => {\n              eventHandler.apply(context, data);\n            });\n          }\n        });\n        return self;\n      }\n    };\n\n    function updateSize() {\n      const swiper = this;\n      let width;\n      let height;\n      const el = swiper.el;\n      if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n        width = swiper.params.width;\n      } else {\n        width = el.clientWidth;\n      }\n      if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n        height = swiper.params.height;\n      } else {\n        height = el.clientHeight;\n      }\n      if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n        return;\n      }\n\n      // Subtract paddings\n      width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n      height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n      if (Number.isNaN(width)) width = 0;\n      if (Number.isNaN(height)) height = 0;\n      Object.assign(swiper, {\n        width,\n        height,\n        size: swiper.isHorizontal() ? width : height\n      });\n    }\n\n    function updateSlides() {\n      const swiper = this;\n      function getDirectionLabel(property) {\n        if (swiper.isHorizontal()) {\n          return property;\n        }\n        // prettier-ignore\n        return {\n          'width': 'height',\n          'margin-top': 'margin-left',\n          'margin-bottom ': 'margin-right',\n          'margin-left': 'margin-top',\n          'margin-right': 'margin-bottom',\n          'padding-left': 'padding-top',\n          'padding-right': 'padding-bottom',\n          'marginRight': 'marginBottom'\n        }[property];\n      }\n      function getDirectionPropertyValue(node, label) {\n        return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n      }\n      const params = swiper.params;\n      const {\n        wrapperEl,\n        slidesEl,\n        size: swiperSize,\n        rtlTranslate: rtl,\n        wrongRTL\n      } = swiper;\n      const isVirtual = swiper.virtual && params.virtual.enabled;\n      const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n      const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n      const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n      let snapGrid = [];\n      const slidesGrid = [];\n      const slidesSizesGrid = [];\n      let offsetBefore = params.slidesOffsetBefore;\n      if (typeof offsetBefore === 'function') {\n        offsetBefore = params.slidesOffsetBefore.call(swiper);\n      }\n      let offsetAfter = params.slidesOffsetAfter;\n      if (typeof offsetAfter === 'function') {\n        offsetAfter = params.slidesOffsetAfter.call(swiper);\n      }\n      const previousSnapGridLength = swiper.snapGrid.length;\n      const previousSlidesGridLength = swiper.slidesGrid.length;\n      let spaceBetween = params.spaceBetween;\n      let slidePosition = -offsetBefore;\n      let prevSlideSize = 0;\n      let index = 0;\n      if (typeof swiperSize === 'undefined') {\n        return;\n      }\n      if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n        spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n      } else if (typeof spaceBetween === 'string') {\n        spaceBetween = parseFloat(spaceBetween);\n      }\n      swiper.virtualSize = -spaceBetween;\n\n      // reset margins\n      slides.forEach(slideEl => {\n        if (rtl) {\n          slideEl.style.marginLeft = '';\n        } else {\n          slideEl.style.marginRight = '';\n        }\n        slideEl.style.marginBottom = '';\n        slideEl.style.marginTop = '';\n      });\n\n      // reset cssMode offsets\n      if (params.centeredSlides && params.cssMode) {\n        setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n        setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n      }\n      const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n      if (gridEnabled) {\n        swiper.grid.initSlides(slidesLength);\n      }\n\n      // Calc slides\n      let slideSize;\n      const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n        return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n      }).length > 0;\n      for (let i = 0; i < slidesLength; i += 1) {\n        slideSize = 0;\n        let slide;\n        if (slides[i]) slide = slides[i];\n        if (gridEnabled) {\n          swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n        }\n        if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n        if (params.slidesPerView === 'auto') {\n          if (shouldResetSlideSize) {\n            slides[i].style[getDirectionLabel('width')] = ``;\n          }\n          const slideStyles = getComputedStyle(slide);\n          const currentTransform = slide.style.transform;\n          const currentWebKitTransform = slide.style.webkitTransform;\n          if (currentTransform) {\n            slide.style.transform = 'none';\n          }\n          if (currentWebKitTransform) {\n            slide.style.webkitTransform = 'none';\n          }\n          if (params.roundLengths) {\n            slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n          } else {\n            // eslint-disable-next-line\n            const width = getDirectionPropertyValue(slideStyles, 'width');\n            const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n            const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n            const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n            const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n            const boxSizing = slideStyles.getPropertyValue('box-sizing');\n            if (boxSizing && boxSizing === 'border-box') {\n              slideSize = width + marginLeft + marginRight;\n            } else {\n              const {\n                clientWidth,\n                offsetWidth\n              } = slide;\n              slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n            }\n          }\n          if (currentTransform) {\n            slide.style.transform = currentTransform;\n          }\n          if (currentWebKitTransform) {\n            slide.style.webkitTransform = currentWebKitTransform;\n          }\n          if (params.roundLengths) slideSize = Math.floor(slideSize);\n        } else {\n          slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n          if (params.roundLengths) slideSize = Math.floor(slideSize);\n          if (slides[i]) {\n            slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n          }\n        }\n        if (slides[i]) {\n          slides[i].swiperSlideSize = slideSize;\n        }\n        slidesSizesGrid.push(slideSize);\n        if (params.centeredSlides) {\n          slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n          if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n          if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n          if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n          if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n          if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n          slidesGrid.push(slidePosition);\n        } else {\n          if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n          if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n          slidesGrid.push(slidePosition);\n          slidePosition = slidePosition + slideSize + spaceBetween;\n        }\n        swiper.virtualSize += slideSize + spaceBetween;\n        prevSlideSize = slideSize;\n        index += 1;\n      }\n      swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n      if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n        wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n      }\n      if (params.setWrapperSize) {\n        wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n      }\n      if (gridEnabled) {\n        swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n      }\n\n      // Remove last grid elements depending on width\n      if (!params.centeredSlides) {\n        const newSlidesGrid = [];\n        for (let i = 0; i < snapGrid.length; i += 1) {\n          let slidesGridItem = snapGrid[i];\n          if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n          if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n            newSlidesGrid.push(slidesGridItem);\n          }\n        }\n        snapGrid = newSlidesGrid;\n        if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n          snapGrid.push(swiper.virtualSize - swiperSize);\n        }\n      }\n      if (isVirtual && params.loop) {\n        const size = slidesSizesGrid[0] + spaceBetween;\n        if (params.slidesPerGroup > 1) {\n          const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n          const groupSize = size * params.slidesPerGroup;\n          for (let i = 0; i < groups; i += 1) {\n            snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n          }\n        }\n        for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n          if (params.slidesPerGroup === 1) {\n            snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n          }\n          slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n          swiper.virtualSize += size;\n        }\n      }\n      if (snapGrid.length === 0) snapGrid = [0];\n      if (spaceBetween !== 0) {\n        const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n        slides.filter((_, slideIndex) => {\n          if (!params.cssMode || params.loop) return true;\n          if (slideIndex === slides.length - 1) {\n            return false;\n          }\n          return true;\n        }).forEach(slideEl => {\n          slideEl.style[key] = `${spaceBetween}px`;\n        });\n      }\n      if (params.centeredSlides && params.centeredSlidesBounds) {\n        let allSlidesSize = 0;\n        slidesSizesGrid.forEach(slideSizeValue => {\n          allSlidesSize += slideSizeValue + (spaceBetween || 0);\n        });\n        allSlidesSize -= spaceBetween;\n        const maxSnap = allSlidesSize - swiperSize;\n        snapGrid = snapGrid.map(snap => {\n          if (snap <= 0) return -offsetBefore;\n          if (snap > maxSnap) return maxSnap + offsetAfter;\n          return snap;\n        });\n      }\n      if (params.centerInsufficientSlides) {\n        let allSlidesSize = 0;\n        slidesSizesGrid.forEach(slideSizeValue => {\n          allSlidesSize += slideSizeValue + (spaceBetween || 0);\n        });\n        allSlidesSize -= spaceBetween;\n        if (allSlidesSize < swiperSize) {\n          const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n          snapGrid.forEach((snap, snapIndex) => {\n            snapGrid[snapIndex] = snap - allSlidesOffset;\n          });\n          slidesGrid.forEach((snap, snapIndex) => {\n            slidesGrid[snapIndex] = snap + allSlidesOffset;\n          });\n        }\n      }\n      Object.assign(swiper, {\n        slides,\n        snapGrid,\n        slidesGrid,\n        slidesSizesGrid\n      });\n      if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n        setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n        setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n        const addToSnapGrid = -swiper.snapGrid[0];\n        const addToSlidesGrid = -swiper.slidesGrid[0];\n        swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n        swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n      }\n      if (slidesLength !== previousSlidesLength) {\n        swiper.emit('slidesLengthChange');\n      }\n      if (snapGrid.length !== previousSnapGridLength) {\n        if (swiper.params.watchOverflow) swiper.checkOverflow();\n        swiper.emit('snapGridLengthChange');\n      }\n      if (slidesGrid.length !== previousSlidesGridLength) {\n        swiper.emit('slidesGridLengthChange');\n      }\n      if (params.watchSlidesProgress) {\n        swiper.updateSlidesOffset();\n      }\n      if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n        const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n        const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n        if (slidesLength <= params.maxBackfaceHiddenSlides) {\n          if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n        } else if (hasClassBackfaceClassAdded) {\n          swiper.el.classList.remove(backFaceHiddenClass);\n        }\n      }\n    }\n\n    function updateAutoHeight(speed) {\n      const swiper = this;\n      const activeSlides = [];\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      let newHeight = 0;\n      let i;\n      if (typeof speed === 'number') {\n        swiper.setTransition(speed);\n      } else if (speed === true) {\n        swiper.setTransition(swiper.params.speed);\n      }\n      const getSlideByIndex = index => {\n        if (isVirtual) {\n          return swiper.slides[swiper.getSlideIndexByData(index)];\n        }\n        return swiper.slides[index];\n      };\n      // Find slides currently in view\n      if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n        if (swiper.params.centeredSlides) {\n          (swiper.visibleSlides || []).forEach(slide => {\n            activeSlides.push(slide);\n          });\n        } else {\n          for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n            const index = swiper.activeIndex + i;\n            if (index > swiper.slides.length && !isVirtual) break;\n            activeSlides.push(getSlideByIndex(index));\n          }\n        }\n      } else {\n        activeSlides.push(getSlideByIndex(swiper.activeIndex));\n      }\n\n      // Find new height from highest slide in view\n      for (i = 0; i < activeSlides.length; i += 1) {\n        if (typeof activeSlides[i] !== 'undefined') {\n          const height = activeSlides[i].offsetHeight;\n          newHeight = height > newHeight ? height : newHeight;\n        }\n      }\n\n      // Update Height\n      if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n    }\n\n    function updateSlidesOffset() {\n      const swiper = this;\n      const slides = swiper.slides;\n      // eslint-disable-next-line\n      const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n      for (let i = 0; i < slides.length; i += 1) {\n        slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n      }\n    }\n\n    function updateSlidesProgress(translate) {\n      if (translate === void 0) {\n        translate = this && this.translate || 0;\n      }\n      const swiper = this;\n      const params = swiper.params;\n      const {\n        slides,\n        rtlTranslate: rtl,\n        snapGrid\n      } = swiper;\n      if (slides.length === 0) return;\n      if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n      let offsetCenter = -translate;\n      if (rtl) offsetCenter = translate;\n\n      // Visible Slides\n      slides.forEach(slideEl => {\n        slideEl.classList.remove(params.slideVisibleClass);\n      });\n      swiper.visibleSlidesIndexes = [];\n      swiper.visibleSlides = [];\n      let spaceBetween = params.spaceBetween;\n      if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n        spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n      } else if (typeof spaceBetween === 'string') {\n        spaceBetween = parseFloat(spaceBetween);\n      }\n      for (let i = 0; i < slides.length; i += 1) {\n        const slide = slides[i];\n        let slideOffset = slide.swiperSlideOffset;\n        if (params.cssMode && params.centeredSlides) {\n          slideOffset -= slides[0].swiperSlideOffset;\n        }\n        const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n        const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n        const slideBefore = -(offsetCenter - slideOffset);\n        const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n        if (isVisible) {\n          swiper.visibleSlides.push(slide);\n          swiper.visibleSlidesIndexes.push(i);\n          slides[i].classList.add(params.slideVisibleClass);\n        }\n        slide.progress = rtl ? -slideProgress : slideProgress;\n        slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n      }\n    }\n\n    function updateProgress(translate) {\n      const swiper = this;\n      if (typeof translate === 'undefined') {\n        const multiplier = swiper.rtlTranslate ? -1 : 1;\n        // eslint-disable-next-line\n        translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n      }\n      const params = swiper.params;\n      const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n      let {\n        progress,\n        isBeginning,\n        isEnd,\n        progressLoop\n      } = swiper;\n      const wasBeginning = isBeginning;\n      const wasEnd = isEnd;\n      if (translatesDiff === 0) {\n        progress = 0;\n        isBeginning = true;\n        isEnd = true;\n      } else {\n        progress = (translate - swiper.minTranslate()) / translatesDiff;\n        const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n        const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n        isBeginning = isBeginningRounded || progress <= 0;\n        isEnd = isEndRounded || progress >= 1;\n        if (isBeginningRounded) progress = 0;\n        if (isEndRounded) progress = 1;\n      }\n      if (params.loop) {\n        const firstSlideIndex = swiper.getSlideIndexByData(0);\n        const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n        const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n        const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n        const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n        const translateAbs = Math.abs(translate);\n        if (translateAbs >= firstSlideTranslate) {\n          progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n        } else {\n          progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n        }\n        if (progressLoop > 1) progressLoop -= 1;\n      }\n      Object.assign(swiper, {\n        progress,\n        progressLoop,\n        isBeginning,\n        isEnd\n      });\n      if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n      if (isBeginning && !wasBeginning) {\n        swiper.emit('reachBeginning toEdge');\n      }\n      if (isEnd && !wasEnd) {\n        swiper.emit('reachEnd toEdge');\n      }\n      if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n        swiper.emit('fromEdge');\n      }\n      swiper.emit('progress', progress);\n    }\n\n    function updateSlidesClasses() {\n      const swiper = this;\n      const {\n        slides,\n        params,\n        slidesEl,\n        activeIndex\n      } = swiper;\n      const isVirtual = swiper.virtual && params.virtual.enabled;\n      const getFilteredSlide = selector => {\n        return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n      };\n      slides.forEach(slideEl => {\n        slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n      });\n      let activeSlide;\n      if (isVirtual) {\n        if (params.loop) {\n          let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n          if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n          if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n          activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n        } else {\n          activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n        }\n      } else {\n        activeSlide = slides[activeIndex];\n      }\n      if (activeSlide) {\n        // Active classes\n        activeSlide.classList.add(params.slideActiveClass);\n\n        // Next Slide\n        let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n        if (params.loop && !nextSlide) {\n          nextSlide = slides[0];\n        }\n        if (nextSlide) {\n          nextSlide.classList.add(params.slideNextClass);\n        }\n        // Prev Slide\n        let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n        if (params.loop && !prevSlide === 0) {\n          prevSlide = slides[slides.length - 1];\n        }\n        if (prevSlide) {\n          prevSlide.classList.add(params.slidePrevClass);\n        }\n      }\n      swiper.emitSlidesClasses();\n    }\n\n    const processLazyPreloader = (swiper, imageEl) => {\n      if (!swiper || swiper.destroyed || !swiper.params) return;\n      const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n      const slideEl = imageEl.closest(slideSelector());\n      if (slideEl) {\n        const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n        if (lazyEl) lazyEl.remove();\n      }\n    };\n    const unlazy = (swiper, index) => {\n      if (!swiper.slides[index]) return;\n      const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n      if (imageEl) imageEl.removeAttribute('loading');\n    };\n    const preload = swiper => {\n      if (!swiper || swiper.destroyed || !swiper.params) return;\n      let amount = swiper.params.lazyPreloadPrevNext;\n      const len = swiper.slides.length;\n      if (!len || !amount || amount < 0) return;\n      amount = Math.min(amount, len);\n      const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n      const activeIndex = swiper.activeIndex;\n      if (swiper.params.grid && swiper.params.grid.rows > 1) {\n        const activeColumn = activeIndex;\n        const preloadColumns = [activeColumn - amount];\n        preloadColumns.push(...Array.from({\n          length: amount\n        }).map((_, i) => {\n          return activeColumn + slidesPerView + i;\n        }));\n        swiper.slides.forEach((slideEl, i) => {\n          if (preloadColumns.includes(slideEl.column)) unlazy(swiper, i);\n        });\n        return;\n      }\n      const slideIndexLastInView = activeIndex + slidesPerView - 1;\n      if (swiper.params.rewind || swiper.params.loop) {\n        for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n          const realIndex = (i % len + len) % len;\n          if (realIndex < activeIndex || realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n        }\n      } else {\n        for (let i = Math.max(activeIndex - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n          if (i !== activeIndex && (i > slideIndexLastInView || i < activeIndex)) {\n            unlazy(swiper, i);\n          }\n        }\n      }\n    };\n\n    function getActiveIndexByTranslate(swiper) {\n      const {\n        slidesGrid,\n        params\n      } = swiper;\n      const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n      let activeIndex;\n      for (let i = 0; i < slidesGrid.length; i += 1) {\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n            activeIndex = i;\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n            activeIndex = i + 1;\n          }\n        } else if (translate >= slidesGrid[i]) {\n          activeIndex = i;\n        }\n      }\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n      }\n      return activeIndex;\n    }\n    function updateActiveIndex(newActiveIndex) {\n      const swiper = this;\n      const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n      const {\n        snapGrid,\n        params,\n        activeIndex: previousIndex,\n        realIndex: previousRealIndex,\n        snapIndex: previousSnapIndex\n      } = swiper;\n      let activeIndex = newActiveIndex;\n      let snapIndex;\n      const getVirtualRealIndex = aIndex => {\n        let realIndex = aIndex - swiper.virtual.slidesBefore;\n        if (realIndex < 0) {\n          realIndex = swiper.virtual.slides.length + realIndex;\n        }\n        if (realIndex >= swiper.virtual.slides.length) {\n          realIndex -= swiper.virtual.slides.length;\n        }\n        return realIndex;\n      };\n      if (typeof activeIndex === 'undefined') {\n        activeIndex = getActiveIndexByTranslate(swiper);\n      }\n      if (snapGrid.indexOf(translate) >= 0) {\n        snapIndex = snapGrid.indexOf(translate);\n      } else {\n        const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n        snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n      }\n      if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n      if (activeIndex === previousIndex) {\n        if (snapIndex !== previousSnapIndex) {\n          swiper.snapIndex = snapIndex;\n          swiper.emit('snapIndexChange');\n        }\n        if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n          swiper.realIndex = getVirtualRealIndex(activeIndex);\n        }\n        return;\n      }\n      // Get real index\n      let realIndex;\n      if (swiper.virtual && params.virtual.enabled && params.loop) {\n        realIndex = getVirtualRealIndex(activeIndex);\n      } else if (swiper.slides[activeIndex]) {\n        realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n      } else {\n        realIndex = activeIndex;\n      }\n      Object.assign(swiper, {\n        previousSnapIndex,\n        snapIndex,\n        previousRealIndex,\n        realIndex,\n        previousIndex,\n        activeIndex\n      });\n      if (swiper.initialized) {\n        preload(swiper);\n      }\n      swiper.emit('activeIndexChange');\n      swiper.emit('snapIndexChange');\n      if (previousRealIndex !== realIndex) {\n        swiper.emit('realIndexChange');\n      }\n      if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n        swiper.emit('slideChange');\n      }\n    }\n\n    function updateClickedSlide(e) {\n      const swiper = this;\n      const params = swiper.params;\n      const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n      let slideFound = false;\n      let slideIndex;\n      if (slide) {\n        for (let i = 0; i < swiper.slides.length; i += 1) {\n          if (swiper.slides[i] === slide) {\n            slideFound = true;\n            slideIndex = i;\n            break;\n          }\n        }\n      }\n      if (slide && slideFound) {\n        swiper.clickedSlide = slide;\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n        } else {\n          swiper.clickedIndex = slideIndex;\n        }\n      } else {\n        swiper.clickedSlide = undefined;\n        swiper.clickedIndex = undefined;\n        return;\n      }\n      if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n        swiper.slideToClickedSlide();\n      }\n    }\n\n    var update = {\n      updateSize,\n      updateSlides,\n      updateAutoHeight,\n      updateSlidesOffset,\n      updateSlidesProgress,\n      updateProgress,\n      updateSlidesClasses,\n      updateActiveIndex,\n      updateClickedSlide\n    };\n\n    function getSwiperTranslate(axis) {\n      if (axis === void 0) {\n        axis = this.isHorizontal() ? 'x' : 'y';\n      }\n      const swiper = this;\n      const {\n        params,\n        rtlTranslate: rtl,\n        translate,\n        wrapperEl\n      } = swiper;\n      if (params.virtualTranslate) {\n        return rtl ? -translate : translate;\n      }\n      if (params.cssMode) {\n        return translate;\n      }\n      let currentTranslate = getTranslate(wrapperEl, axis);\n      currentTranslate += swiper.cssOverflowAdjustment();\n      if (rtl) currentTranslate = -currentTranslate;\n      return currentTranslate || 0;\n    }\n\n    function setTranslate(translate, byController) {\n      const swiper = this;\n      const {\n        rtlTranslate: rtl,\n        params,\n        wrapperEl,\n        progress\n      } = swiper;\n      let x = 0;\n      let y = 0;\n      const z = 0;\n      if (swiper.isHorizontal()) {\n        x = rtl ? -translate : translate;\n      } else {\n        y = translate;\n      }\n      if (params.roundLengths) {\n        x = Math.floor(x);\n        y = Math.floor(y);\n      }\n      swiper.previousTranslate = swiper.translate;\n      swiper.translate = swiper.isHorizontal() ? x : y;\n      if (params.cssMode) {\n        wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n      } else if (!params.virtualTranslate) {\n        if (swiper.isHorizontal()) {\n          x -= swiper.cssOverflowAdjustment();\n        } else {\n          y -= swiper.cssOverflowAdjustment();\n        }\n        wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n      }\n\n      // Check if we need to update progress\n      let newProgress;\n      const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n      if (translatesDiff === 0) {\n        newProgress = 0;\n      } else {\n        newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n      }\n      if (newProgress !== progress) {\n        swiper.updateProgress(translate);\n      }\n      swiper.emit('setTranslate', swiper.translate, byController);\n    }\n\n    function minTranslate() {\n      return -this.snapGrid[0];\n    }\n\n    function maxTranslate() {\n      return -this.snapGrid[this.snapGrid.length - 1];\n    }\n\n    function translateTo(translate, speed, runCallbacks, translateBounds, internal) {\n      if (translate === void 0) {\n        translate = 0;\n      }\n      if (speed === void 0) {\n        speed = this.params.speed;\n      }\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      if (translateBounds === void 0) {\n        translateBounds = true;\n      }\n      const swiper = this;\n      const {\n        params,\n        wrapperEl\n      } = swiper;\n      if (swiper.animating && params.preventInteractionOnTransition) {\n        return false;\n      }\n      const minTranslate = swiper.minTranslate();\n      const maxTranslate = swiper.maxTranslate();\n      let newTranslate;\n      if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n      // Update progress\n      swiper.updateProgress(newTranslate);\n      if (params.cssMode) {\n        const isH = swiper.isHorizontal();\n        if (speed === 0) {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n        } else {\n          if (!swiper.support.smoothScroll) {\n            animateCSSModeScroll({\n              swiper,\n              targetPosition: -newTranslate,\n              side: isH ? 'left' : 'top'\n            });\n            return true;\n          }\n          wrapperEl.scrollTo({\n            [isH ? 'left' : 'top']: -newTranslate,\n            behavior: 'smooth'\n          });\n        }\n        return true;\n      }\n      if (speed === 0) {\n        swiper.setTransition(0);\n        swiper.setTranslate(newTranslate);\n        if (runCallbacks) {\n          swiper.emit('beforeTransitionStart', speed, internal);\n          swiper.emit('transitionEnd');\n        }\n      } else {\n        swiper.setTransition(speed);\n        swiper.setTranslate(newTranslate);\n        if (runCallbacks) {\n          swiper.emit('beforeTransitionStart', speed, internal);\n          swiper.emit('transitionStart');\n        }\n        if (!swiper.animating) {\n          swiper.animating = true;\n          if (!swiper.onTranslateToWrapperTransitionEnd) {\n            swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n              if (!swiper || swiper.destroyed) return;\n              if (e.target !== this) return;\n              swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n              swiper.onTranslateToWrapperTransitionEnd = null;\n              delete swiper.onTranslateToWrapperTransitionEnd;\n              if (runCallbacks) {\n                swiper.emit('transitionEnd');\n              }\n            };\n          }\n          swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n        }\n      }\n      return true;\n    }\n\n    var translate = {\n      getTranslate: getSwiperTranslate,\n      setTranslate,\n      minTranslate,\n      maxTranslate,\n      translateTo\n    };\n\n    function setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.params.cssMode) {\n        swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n      }\n      swiper.emit('setTransition', duration, byController);\n    }\n\n    function transitionEmit(_ref) {\n      let {\n        swiper,\n        runCallbacks,\n        direction,\n        step\n      } = _ref;\n      const {\n        activeIndex,\n        previousIndex\n      } = swiper;\n      let dir = direction;\n      if (!dir) {\n        if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n      }\n      swiper.emit(`transition${step}`);\n      if (runCallbacks && activeIndex !== previousIndex) {\n        if (dir === 'reset') {\n          swiper.emit(`slideResetTransition${step}`);\n          return;\n        }\n        swiper.emit(`slideChangeTransition${step}`);\n        if (dir === 'next') {\n          swiper.emit(`slideNextTransition${step}`);\n        } else {\n          swiper.emit(`slidePrevTransition${step}`);\n        }\n      }\n    }\n\n    function transitionStart(runCallbacks, direction) {\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      const swiper = this;\n      const {\n        params\n      } = swiper;\n      if (params.cssMode) return;\n      if (params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n      transitionEmit({\n        swiper,\n        runCallbacks,\n        direction,\n        step: 'Start'\n      });\n    }\n\n    function transitionEnd(runCallbacks, direction) {\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      const swiper = this;\n      const {\n        params\n      } = swiper;\n      swiper.animating = false;\n      if (params.cssMode) return;\n      swiper.setTransition(0);\n      transitionEmit({\n        swiper,\n        runCallbacks,\n        direction,\n        step: 'End'\n      });\n    }\n\n    var transition = {\n      setTransition,\n      transitionStart,\n      transitionEnd\n    };\n\n    function slideTo(index, speed, runCallbacks, internal, initial) {\n      if (index === void 0) {\n        index = 0;\n      }\n      if (speed === void 0) {\n        speed = this.params.speed;\n      }\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      if (typeof index === 'string') {\n        index = parseInt(index, 10);\n      }\n      const swiper = this;\n      let slideIndex = index;\n      if (slideIndex < 0) slideIndex = 0;\n      const {\n        params,\n        snapGrid,\n        slidesGrid,\n        previousIndex,\n        activeIndex,\n        rtlTranslate: rtl,\n        wrapperEl,\n        enabled\n      } = swiper;\n      if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n        return false;\n      }\n      const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n      let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n      if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n      const translate = -snapGrid[snapIndex];\n      // Normalize slideIndex\n      if (params.normalizeSlideIndex) {\n        for (let i = 0; i < slidesGrid.length; i += 1) {\n          const normalizedTranslate = -Math.floor(translate * 100);\n          const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n          const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n          if (typeof slidesGrid[i + 1] !== 'undefined') {\n            if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n              slideIndex = i;\n            } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n              slideIndex = i + 1;\n            }\n          } else if (normalizedTranslate >= normalizedGrid) {\n            slideIndex = i;\n          }\n        }\n      }\n      // Directions locks\n      if (swiper.initialized && slideIndex !== activeIndex) {\n        if (!swiper.allowSlideNext && (rtl ? translate > swiper.translate && translate > swiper.minTranslate() : translate < swiper.translate && translate < swiper.minTranslate())) {\n          return false;\n        }\n        if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n          if ((activeIndex || 0) !== slideIndex) {\n            return false;\n          }\n        }\n      }\n      if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n        swiper.emit('beforeSlideChangeStart');\n      }\n\n      // Update progress\n      swiper.updateProgress(translate);\n      let direction;\n      if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n      // Update Index\n      if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n        swiper.updateActiveIndex(slideIndex);\n        // Update Height\n        if (params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n        swiper.updateSlidesClasses();\n        if (params.effect !== 'slide') {\n          swiper.setTranslate(translate);\n        }\n        if (direction !== 'reset') {\n          swiper.transitionStart(runCallbacks, direction);\n          swiper.transitionEnd(runCallbacks, direction);\n        }\n        return false;\n      }\n      if (params.cssMode) {\n        const isH = swiper.isHorizontal();\n        const t = rtl ? translate : -translate;\n        if (speed === 0) {\n          const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n          if (isVirtual) {\n            swiper.wrapperEl.style.scrollSnapType = 'none';\n            swiper._immediateVirtual = true;\n          }\n          if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n            swiper._cssModeVirtualInitialSet = true;\n            requestAnimationFrame(() => {\n              wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n            });\n          } else {\n            wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n          }\n          if (isVirtual) {\n            requestAnimationFrame(() => {\n              swiper.wrapperEl.style.scrollSnapType = '';\n              swiper._immediateVirtual = false;\n            });\n          }\n        } else {\n          if (!swiper.support.smoothScroll) {\n            animateCSSModeScroll({\n              swiper,\n              targetPosition: t,\n              side: isH ? 'left' : 'top'\n            });\n            return true;\n          }\n          wrapperEl.scrollTo({\n            [isH ? 'left' : 'top']: t,\n            behavior: 'smooth'\n          });\n        }\n        return true;\n      }\n      swiper.setTransition(speed);\n      swiper.setTranslate(translate);\n      swiper.updateActiveIndex(slideIndex);\n      swiper.updateSlidesClasses();\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.transitionStart(runCallbacks, direction);\n      if (speed === 0) {\n        swiper.transitionEnd(runCallbacks, direction);\n      } else if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) {\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) return;\n            if (e.target !== this) return;\n            swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n          };\n        }\n        swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      }\n      return true;\n    }\n\n    function slideToLoop(index, speed, runCallbacks, internal) {\n      if (index === void 0) {\n        index = 0;\n      }\n      if (speed === void 0) {\n        speed = this.params.speed;\n      }\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      if (typeof index === 'string') {\n        const indexAsNumber = parseInt(index, 10);\n        index = indexAsNumber;\n      }\n      const swiper = this;\n      let newIndex = index;\n      if (swiper.params.loop) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          // eslint-disable-next-line\n          newIndex = newIndex + swiper.virtual.slidesBefore;\n        } else {\n          newIndex = swiper.getSlideIndexByData(newIndex);\n        }\n      }\n      return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n    }\n\n    /* eslint no-unused-vars: \"off\" */\n    function slideNext(speed, runCallbacks, internal) {\n      if (speed === void 0) {\n        speed = this.params.speed;\n      }\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      const swiper = this;\n      const {\n        enabled,\n        params,\n        animating\n      } = swiper;\n      if (!enabled) return swiper;\n      let perGroup = params.slidesPerGroup;\n      if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n        perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n      }\n      const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n      const isVirtual = swiper.virtual && params.virtual.enabled;\n      if (params.loop) {\n        if (animating && !isVirtual && params.loopPreventsSliding) return false;\n        swiper.loopFix({\n          direction: 'next'\n        });\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.wrapperEl.clientLeft;\n      }\n      if (params.rewind && swiper.isEnd) {\n        return swiper.slideTo(0, speed, runCallbacks, internal);\n      }\n      return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n    }\n\n    /* eslint no-unused-vars: \"off\" */\n    function slidePrev(speed, runCallbacks, internal) {\n      if (speed === void 0) {\n        speed = this.params.speed;\n      }\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      const swiper = this;\n      const {\n        params,\n        snapGrid,\n        slidesGrid,\n        rtlTranslate,\n        enabled,\n        animating\n      } = swiper;\n      if (!enabled) return swiper;\n      const isVirtual = swiper.virtual && params.virtual.enabled;\n      if (params.loop) {\n        if (animating && !isVirtual && params.loopPreventsSliding) return false;\n        swiper.loopFix({\n          direction: 'prev'\n        });\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.wrapperEl.clientLeft;\n      }\n      const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n      function normalize(val) {\n        if (val < 0) return -Math.floor(Math.abs(val));\n        return Math.floor(val);\n      }\n      const normalizedTranslate = normalize(translate);\n      const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n      let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n      if (typeof prevSnap === 'undefined' && params.cssMode) {\n        let prevSnapIndex;\n        snapGrid.forEach((snap, snapIndex) => {\n          if (normalizedTranslate >= snap) {\n            // prevSnap = snap;\n            prevSnapIndex = snapIndex;\n          }\n        });\n        if (typeof prevSnapIndex !== 'undefined') {\n          prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n        }\n      }\n      let prevIndex = 0;\n      if (typeof prevSnap !== 'undefined') {\n        prevIndex = slidesGrid.indexOf(prevSnap);\n        if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n        if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n          prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n          prevIndex = Math.max(prevIndex, 0);\n        }\n      }\n      if (params.rewind && swiper.isBeginning) {\n        const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n        return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n      }\n      return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n    }\n\n    /* eslint no-unused-vars: \"off\" */\n    function slideReset(speed, runCallbacks, internal) {\n      if (speed === void 0) {\n        speed = this.params.speed;\n      }\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      const swiper = this;\n      return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n    }\n\n    /* eslint no-unused-vars: \"off\" */\n    function slideToClosest(speed, runCallbacks, internal, threshold) {\n      if (speed === void 0) {\n        speed = this.params.speed;\n      }\n      if (runCallbacks === void 0) {\n        runCallbacks = true;\n      }\n      if (threshold === void 0) {\n        threshold = 0.5;\n      }\n      const swiper = this;\n      let index = swiper.activeIndex;\n      const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n      const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n      const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n      if (translate >= swiper.snapGrid[snapIndex]) {\n        // The current translate is on or after the current snap index, so the choice\n        // is between the current index and the one after it.\n        const currentSnap = swiper.snapGrid[snapIndex];\n        const nextSnap = swiper.snapGrid[snapIndex + 1];\n        if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n          index += swiper.params.slidesPerGroup;\n        }\n      } else {\n        // The current translate is before the current snap index, so the choice\n        // is between the current index and the one before it.\n        const prevSnap = swiper.snapGrid[snapIndex - 1];\n        const currentSnap = swiper.snapGrid[snapIndex];\n        if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n          index -= swiper.params.slidesPerGroup;\n        }\n      }\n      index = Math.max(index, 0);\n      index = Math.min(index, swiper.slidesGrid.length - 1);\n      return swiper.slideTo(index, speed, runCallbacks, internal);\n    }\n\n    function slideToClickedSlide() {\n      const swiper = this;\n      const {\n        params,\n        slidesEl\n      } = swiper;\n      const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n      let slideToIndex = swiper.clickedIndex;\n      let realIndex;\n      const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n      if (params.loop) {\n        if (swiper.animating) return;\n        realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n        if (params.centeredSlides) {\n          if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n            swiper.loopFix();\n            slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n            nextTick(() => {\n              swiper.slideTo(slideToIndex);\n            });\n          } else {\n            swiper.slideTo(slideToIndex);\n          }\n        } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n          swiper.loopFix();\n          slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n          nextTick(() => {\n            swiper.slideTo(slideToIndex);\n          });\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    }\n\n    var slide = {\n      slideTo,\n      slideToLoop,\n      slideNext,\n      slidePrev,\n      slideReset,\n      slideToClosest,\n      slideToClickedSlide\n    };\n\n    function loopCreate(slideRealIndex) {\n      const swiper = this;\n      const {\n        params,\n        slidesEl\n      } = swiper;\n      if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n      const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n      slides.forEach((el, index) => {\n        el.setAttribute('data-swiper-slide-index', index);\n      });\n      swiper.loopFix({\n        slideRealIndex,\n        direction: params.centeredSlides ? undefined : 'next'\n      });\n    }\n\n    function loopFix(_temp) {\n      let {\n        slideRealIndex,\n        slideTo = true,\n        direction,\n        setTranslate,\n        activeSlideIndex,\n        byController,\n        byMousewheel\n      } = _temp === void 0 ? {} : _temp;\n      const swiper = this;\n      if (!swiper.params.loop) return;\n      swiper.emit('beforeLoopFix');\n      const {\n        slides,\n        allowSlidePrev,\n        allowSlideNext,\n        slidesEl,\n        params\n      } = swiper;\n      swiper.allowSlidePrev = true;\n      swiper.allowSlideNext = true;\n      if (swiper.virtual && params.virtual.enabled) {\n        if (slideTo) {\n          if (!params.centeredSlides && swiper.snapIndex === 0) {\n            swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n          } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n            swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n          } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n            swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n          }\n        }\n        swiper.allowSlidePrev = allowSlidePrev;\n        swiper.allowSlideNext = allowSlideNext;\n        swiper.emit('loopFix');\n        return;\n      }\n      const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n      let loopedSlides = params.loopedSlides || slidesPerView;\n      if (loopedSlides % params.slidesPerGroup !== 0) {\n        loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n      }\n      swiper.loopedSlides = loopedSlides;\n      const prependSlidesIndexes = [];\n      const appendSlidesIndexes = [];\n      let activeIndex = swiper.activeIndex;\n      if (typeof activeSlideIndex === 'undefined') {\n        activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n      } else {\n        activeIndex = activeSlideIndex;\n      }\n      const isNext = direction === 'next' || !direction;\n      const isPrev = direction === 'prev' || !direction;\n      let slidesPrepended = 0;\n      let slidesAppended = 0;\n      // prepend last slides before start\n      if (activeSlideIndex < loopedSlides) {\n        slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n        for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n          const index = i - Math.floor(i / slides.length) * slides.length;\n          prependSlidesIndexes.push(slides.length - index - 1);\n        }\n      } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n        slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n        for (let i = 0; i < slidesAppended; i += 1) {\n          const index = i - Math.floor(i / slides.length) * slides.length;\n          appendSlidesIndexes.push(index);\n        }\n      }\n      if (isPrev) {\n        prependSlidesIndexes.forEach(index => {\n          swiper.slides[index].swiperLoopMoveDOM = true;\n          slidesEl.prepend(swiper.slides[index]);\n          swiper.slides[index].swiperLoopMoveDOM = false;\n        });\n      }\n      if (isNext) {\n        appendSlidesIndexes.forEach(index => {\n          swiper.slides[index].swiperLoopMoveDOM = true;\n          slidesEl.append(swiper.slides[index]);\n          swiper.slides[index].swiperLoopMoveDOM = false;\n        });\n      }\n      swiper.recalcSlides();\n      if (params.slidesPerView === 'auto') {\n        swiper.updateSlides();\n      }\n      if (params.watchSlidesProgress) {\n        swiper.updateSlidesOffset();\n      }\n      if (slideTo) {\n        if (prependSlidesIndexes.length > 0 && isPrev) {\n          if (typeof slideRealIndex === 'undefined') {\n            const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n            const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n            const diff = newSlideTranslate - currentSlideTranslate;\n            if (byMousewheel) {\n              swiper.setTranslate(swiper.translate - diff);\n            } else {\n              swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n              if (setTranslate) {\n                swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n              }\n            }\n          } else {\n            if (setTranslate) {\n              swiper.slideToLoop(slideRealIndex, 0, false, true);\n            }\n          }\n        } else if (appendSlidesIndexes.length > 0 && isNext) {\n          if (typeof slideRealIndex === 'undefined') {\n            const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n            const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n            const diff = newSlideTranslate - currentSlideTranslate;\n            if (byMousewheel) {\n              swiper.setTranslate(swiper.translate - diff);\n            } else {\n              swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n              if (setTranslate) {\n                swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n              }\n            }\n          } else {\n            swiper.slideToLoop(slideRealIndex, 0, false, true);\n          }\n        }\n      }\n      swiper.allowSlidePrev = allowSlidePrev;\n      swiper.allowSlideNext = allowSlideNext;\n      if (swiper.controller && swiper.controller.control && !byController) {\n        const loopParams = {\n          slideRealIndex,\n          slideTo: false,\n          direction,\n          setTranslate,\n          activeSlideIndex,\n          byController: true\n        };\n        if (Array.isArray(swiper.controller.control)) {\n          swiper.controller.control.forEach(c => {\n            if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n          });\n        } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n          swiper.controller.control.loopFix(loopParams);\n        }\n      }\n      swiper.emit('loopFix');\n    }\n\n    function loopDestroy() {\n      const swiper = this;\n      const {\n        params,\n        slidesEl\n      } = swiper;\n      if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n      swiper.recalcSlides();\n      const newSlidesOrder = [];\n      swiper.slides.forEach(slideEl => {\n        const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n        newSlidesOrder[index] = slideEl;\n      });\n      swiper.slides.forEach(slideEl => {\n        slideEl.removeAttribute('data-swiper-slide-index');\n      });\n      newSlidesOrder.forEach(slideEl => {\n        slidesEl.append(slideEl);\n      });\n      swiper.recalcSlides();\n      swiper.slideTo(swiper.realIndex, 0);\n    }\n\n    var loop = {\n      loopCreate,\n      loopFix,\n      loopDestroy\n    };\n\n    function setGrabCursor(moving) {\n      const swiper = this;\n      if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n      const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n      if (swiper.isElement) {\n        swiper.__preventObserver__ = true;\n      }\n      el.style.cursor = 'move';\n      el.style.cursor = moving ? 'grabbing' : 'grab';\n      if (swiper.isElement) {\n        requestAnimationFrame(() => {\n          swiper.__preventObserver__ = false;\n        });\n      }\n    }\n\n    function unsetGrabCursor() {\n      const swiper = this;\n      if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n        return;\n      }\n      if (swiper.isElement) {\n        swiper.__preventObserver__ = true;\n      }\n      swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n      if (swiper.isElement) {\n        requestAnimationFrame(() => {\n          swiper.__preventObserver__ = false;\n        });\n      }\n    }\n\n    var grabCursor = {\n      setGrabCursor,\n      unsetGrabCursor\n    };\n\n    // Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\n    function closestElement(selector, base) {\n      if (base === void 0) {\n        base = this;\n      }\n      function __closestFrom(el) {\n        if (!el || el === getDocument() || el === getWindow()) return null;\n        if (el.assignedSlot) el = el.assignedSlot;\n        const found = el.closest(selector);\n        if (!found && !el.getRootNode) {\n          return null;\n        }\n        return found || __closestFrom(el.getRootNode().host);\n      }\n      return __closestFrom(base);\n    }\n    function onTouchStart(event) {\n      const swiper = this;\n      const document = getDocument();\n      const window = getWindow();\n      const data = swiper.touchEventsData;\n      data.evCache.push(event);\n      const {\n        params,\n        touches,\n        enabled\n      } = swiper;\n      if (!enabled) return;\n      if (!params.simulateTouch && event.pointerType === 'mouse') return;\n      if (swiper.animating && params.preventInteractionOnTransition) {\n        return;\n      }\n      if (!swiper.animating && params.cssMode && params.loop) {\n        swiper.loopFix();\n      }\n      let e = event;\n      if (e.originalEvent) e = e.originalEvent;\n      let targetEl = e.target;\n      if (params.touchEventsTarget === 'wrapper') {\n        if (!swiper.wrapperEl.contains(targetEl)) return;\n      }\n      if ('which' in e && e.which === 3) return;\n      if ('button' in e && e.button > 0) return;\n      if (data.isTouched && data.isMoved) return;\n\n      // change target el for shadow root component\n      const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n      // eslint-disable-next-line\n      const eventPath = event.composedPath ? event.composedPath() : event.path;\n      if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n        targetEl = eventPath[0];\n      }\n      const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n      const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n      // use closestElement for shadow root element to get the actual closest for nested shadow root element\n      if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n        swiper.allowClick = true;\n        return;\n      }\n      if (params.swipeHandler) {\n        if (!targetEl.closest(params.swipeHandler)) return;\n      }\n      touches.currentX = e.pageX;\n      touches.currentY = e.pageY;\n      const startX = touches.currentX;\n      const startY = touches.currentY;\n\n      // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n      const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n      const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n      if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n        if (edgeSwipeDetection === 'prevent') {\n          event.preventDefault();\n        } else {\n          return;\n        }\n      }\n      Object.assign(data, {\n        isTouched: true,\n        isMoved: false,\n        allowTouchCallbacks: true,\n        isScrolling: undefined,\n        startMoving: undefined\n      });\n      touches.startX = startX;\n      touches.startY = startY;\n      data.touchStartTime = now();\n      swiper.allowClick = true;\n      swiper.updateSize();\n      swiper.swipeDirection = undefined;\n      if (params.threshold > 0) data.allowThresholdMove = false;\n      let preventDefault = true;\n      if (targetEl.matches(data.focusableElements)) {\n        preventDefault = false;\n        if (targetEl.nodeName === 'SELECT') {\n          data.isTouched = false;\n        }\n      }\n      if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n        document.activeElement.blur();\n      }\n      const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n      if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n        e.preventDefault();\n      }\n      if (params.freeMode && params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n        swiper.freeMode.onTouchStart();\n      }\n      swiper.emit('touchStart', e);\n    }\n\n    function onTouchMove(event) {\n      const document = getDocument();\n      const swiper = this;\n      const data = swiper.touchEventsData;\n      const {\n        params,\n        touches,\n        rtlTranslate: rtl,\n        enabled\n      } = swiper;\n      if (!enabled) return;\n      if (!params.simulateTouch && event.pointerType === 'mouse') return;\n      let e = event;\n      if (e.originalEvent) e = e.originalEvent;\n      if (!data.isTouched) {\n        if (data.startMoving && data.isScrolling) {\n          swiper.emit('touchMoveOpposite', e);\n        }\n        return;\n      }\n      const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n      if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n      const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n      const pageX = targetTouch.pageX;\n      const pageY = targetTouch.pageY;\n      if (e.preventedByNestedSwiper) {\n        touches.startX = pageX;\n        touches.startY = pageY;\n        return;\n      }\n      if (!swiper.allowTouchMove) {\n        if (!e.target.matches(data.focusableElements)) {\n          swiper.allowClick = false;\n        }\n        if (data.isTouched) {\n          Object.assign(touches, {\n            startX: pageX,\n            startY: pageY,\n            prevX: swiper.touches.currentX,\n            prevY: swiper.touches.currentY,\n            currentX: pageX,\n            currentY: pageY\n          });\n          data.touchStartTime = now();\n        }\n        return;\n      }\n      if (params.touchReleaseOnEdges && !params.loop) {\n        if (swiper.isVertical()) {\n          // Vertical\n          if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n            data.isTouched = false;\n            data.isMoved = false;\n            return;\n          }\n        } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n          return;\n        }\n      }\n      if (document.activeElement) {\n        if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n          data.isMoved = true;\n          swiper.allowClick = false;\n          return;\n        }\n      }\n      if (data.allowTouchCallbacks) {\n        swiper.emit('touchMove', e);\n      }\n      if (e.targetTouches && e.targetTouches.length > 1) return;\n      touches.currentX = pageX;\n      touches.currentY = pageY;\n      const diffX = touches.currentX - touches.startX;\n      const diffY = touches.currentY - touches.startY;\n      if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n      if (typeof data.isScrolling === 'undefined') {\n        let touchAngle;\n        if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n          data.isScrolling = false;\n        } else {\n          // eslint-disable-next-line\n          if (diffX * diffX + diffY * diffY >= 25) {\n            touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n            data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n          }\n        }\n      }\n      if (data.isScrolling) {\n        swiper.emit('touchMoveOpposite', e);\n      }\n      if (typeof data.startMoving === 'undefined') {\n        if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n          data.startMoving = true;\n        }\n      }\n      if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n        data.isTouched = false;\n        return;\n      }\n      if (!data.startMoving) {\n        return;\n      }\n      swiper.allowClick = false;\n      if (!params.cssMode && e.cancelable) {\n        e.preventDefault();\n      }\n      if (params.touchMoveStopPropagation && !params.nested) {\n        e.stopPropagation();\n      }\n      let diff = swiper.isHorizontal() ? diffX : diffY;\n      let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n      if (params.oneWayMovement) {\n        diff = Math.abs(diff) * (rtl ? 1 : -1);\n        touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n      }\n      touches.diff = diff;\n      diff *= params.touchRatio;\n      if (rtl) {\n        diff = -diff;\n        touchesDiff = -touchesDiff;\n      }\n      const prevTouchesDirection = swiper.touchesDirection;\n      swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n      swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n      const isLoop = swiper.params.loop && !params.cssMode;\n      if (!data.isMoved) {\n        if (isLoop) {\n          swiper.loopFix({\n            direction: swiper.swipeDirection\n          });\n        }\n        data.startTranslate = swiper.getTranslate();\n        swiper.setTransition(0);\n        if (swiper.animating) {\n          const evt = new window.CustomEvent('transitionend', {\n            bubbles: true,\n            cancelable: true\n          });\n          swiper.wrapperEl.dispatchEvent(evt);\n        }\n        data.allowMomentumBounce = false;\n        // Grab Cursor\n        if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n          swiper.setGrabCursor(true);\n        }\n        swiper.emit('sliderFirstMove', e);\n      }\n      let loopFixed;\n      if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n        // need another loop fix\n        swiper.loopFix({\n          direction: swiper.swipeDirection,\n          setTranslate: true\n        });\n        loopFixed = true;\n      }\n      swiper.emit('sliderMove', e);\n      data.isMoved = true;\n      data.currentTranslate = diff + data.startTranslate;\n      let disableParentSwiper = true;\n      let resistanceRatio = params.resistanceRatio;\n      if (params.touchReleaseOnEdges) {\n        resistanceRatio = 0;\n      }\n      if (diff > 0) {\n        if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n          swiper.loopFix({\n            direction: 'prev',\n            setTranslate: true,\n            activeSlideIndex: 0\n          });\n        }\n        if (data.currentTranslate > swiper.minTranslate()) {\n          disableParentSwiper = false;\n          if (params.resistance) {\n            data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n          }\n        }\n      } else if (diff < 0) {\n        if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n          swiper.loopFix({\n            direction: 'next',\n            setTranslate: true,\n            activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n          });\n        }\n        if (data.currentTranslate < swiper.maxTranslate()) {\n          disableParentSwiper = false;\n          if (params.resistance) {\n            data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n          }\n        }\n      }\n      if (disableParentSwiper) {\n        e.preventedByNestedSwiper = true;\n      }\n\n      // Directions locks\n      if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n        data.currentTranslate = data.startTranslate;\n      }\n      if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n        data.currentTranslate = data.startTranslate;\n      }\n      if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n        data.currentTranslate = data.startTranslate;\n      }\n\n      // Threshold\n      if (params.threshold > 0) {\n        if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n          if (!data.allowThresholdMove) {\n            data.allowThresholdMove = true;\n            touches.startX = touches.currentX;\n            touches.startY = touches.currentY;\n            data.currentTranslate = data.startTranslate;\n            touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n            return;\n          }\n        } else {\n          data.currentTranslate = data.startTranslate;\n          return;\n        }\n      }\n      if (!params.followFinger || params.cssMode) return;\n\n      // Update active index in free mode\n      if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      if (params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n        swiper.freeMode.onTouchMove();\n      }\n      // Update progress\n      swiper.updateProgress(data.currentTranslate);\n      // Update translate\n      swiper.setTranslate(data.currentTranslate);\n    }\n\n    function onTouchEnd(event) {\n      const swiper = this;\n      const data = swiper.touchEventsData;\n      const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n      if (pointerIndex >= 0) {\n        data.evCache.splice(pointerIndex, 1);\n      }\n      if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n        const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n        if (!proceed) {\n          return;\n        }\n      }\n      const {\n        params,\n        touches,\n        rtlTranslate: rtl,\n        slidesGrid,\n        enabled\n      } = swiper;\n      if (!enabled) return;\n      if (!params.simulateTouch && event.pointerType === 'mouse') return;\n      let e = event;\n      if (e.originalEvent) e = e.originalEvent;\n      if (data.allowTouchCallbacks) {\n        swiper.emit('touchEnd', e);\n      }\n      data.allowTouchCallbacks = false;\n      if (!data.isTouched) {\n        if (data.isMoved && params.grabCursor) {\n          swiper.setGrabCursor(false);\n        }\n        data.isMoved = false;\n        data.startMoving = false;\n        return;\n      }\n      // Return Grab Cursor\n      if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n        swiper.setGrabCursor(false);\n      }\n\n      // Time diff\n      const touchEndTime = now();\n      const timeDiff = touchEndTime - data.touchStartTime;\n\n      // Tap, doubleTap, Click\n      if (swiper.allowClick) {\n        const pathTree = e.path || e.composedPath && e.composedPath();\n        swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n        swiper.emit('tap click', e);\n        if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n          swiper.emit('doubleTap doubleClick', e);\n        }\n      }\n      data.lastClickTime = now();\n      nextTick(() => {\n        if (!swiper.destroyed) swiper.allowClick = true;\n      });\n      if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n        data.isTouched = false;\n        data.isMoved = false;\n        data.startMoving = false;\n        return;\n      }\n      data.isTouched = false;\n      data.isMoved = false;\n      data.startMoving = false;\n      let currentPos;\n      if (params.followFinger) {\n        currentPos = rtl ? swiper.translate : -swiper.translate;\n      } else {\n        currentPos = -data.currentTranslate;\n      }\n      if (params.cssMode) {\n        return;\n      }\n      if (params.freeMode && params.freeMode.enabled) {\n        swiper.freeMode.onTouchEnd({\n          currentPos\n        });\n        return;\n      }\n\n      // Find current slide\n      let stopIndex = 0;\n      let groupSize = swiper.slidesSizesGrid[0];\n      for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n        const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n        if (typeof slidesGrid[i + increment] !== 'undefined') {\n          if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n            stopIndex = i;\n            groupSize = slidesGrid[i + increment] - slidesGrid[i];\n          }\n        } else if (currentPos >= slidesGrid[i]) {\n          stopIndex = i;\n          groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n        }\n      }\n      let rewindFirstIndex = null;\n      let rewindLastIndex = null;\n      if (params.rewind) {\n        if (swiper.isBeginning) {\n          rewindLastIndex = params.virtual && params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n        } else if (swiper.isEnd) {\n          rewindFirstIndex = 0;\n        }\n      }\n      // Find current slide size\n      const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n      const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n      if (timeDiff > params.longSwipesMs) {\n        // Long touches\n        if (!params.longSwipes) {\n          swiper.slideTo(swiper.activeIndex);\n          return;\n        }\n        if (swiper.swipeDirection === 'next') {\n          if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n        }\n        if (swiper.swipeDirection === 'prev') {\n          if (ratio > 1 - params.longSwipesRatio) {\n            swiper.slideTo(stopIndex + increment);\n          } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n            swiper.slideTo(rewindLastIndex);\n          } else {\n            swiper.slideTo(stopIndex);\n          }\n        }\n      } else {\n        // Short swipes\n        if (!params.shortSwipes) {\n          swiper.slideTo(swiper.activeIndex);\n          return;\n        }\n        const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n        if (!isNavButtonTarget) {\n          if (swiper.swipeDirection === 'next') {\n            swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n          }\n          if (swiper.swipeDirection === 'prev') {\n            swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n          }\n        } else if (e.target === swiper.navigation.nextEl) {\n          swiper.slideTo(stopIndex + increment);\n        } else {\n          swiper.slideTo(stopIndex);\n        }\n      }\n    }\n\n    function onResize() {\n      const swiper = this;\n      const {\n        params,\n        el\n      } = swiper;\n      if (el && el.offsetWidth === 0) return;\n\n      // Breakpoints\n      if (params.breakpoints) {\n        swiper.setBreakpoint();\n      }\n\n      // Save locks\n      const {\n        allowSlideNext,\n        allowSlidePrev,\n        snapGrid\n      } = swiper;\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      // Disable locks on resize\n      swiper.allowSlideNext = true;\n      swiper.allowSlidePrev = true;\n      swiper.updateSize();\n      swiper.updateSlides();\n      swiper.updateSlidesClasses();\n      const isVirtualLoop = isVirtual && params.loop;\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        if (swiper.params.loop && !isVirtual) {\n          swiper.slideToLoop(swiper.realIndex, 0, false, true);\n        } else {\n          swiper.slideTo(swiper.activeIndex, 0, false, true);\n        }\n      }\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        clearTimeout(swiper.autoplay.resizeTimeout);\n        swiper.autoplay.resizeTimeout = setTimeout(() => {\n          if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n            swiper.autoplay.resume();\n          }\n        }, 500);\n      }\n      // Return locks after resize\n      swiper.allowSlidePrev = allowSlidePrev;\n      swiper.allowSlideNext = allowSlideNext;\n      if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n        swiper.checkOverflow();\n      }\n    }\n\n    function onClick(e) {\n      const swiper = this;\n      if (!swiper.enabled) return;\n      if (!swiper.allowClick) {\n        if (swiper.params.preventClicks) e.preventDefault();\n        if (swiper.params.preventClicksPropagation && swiper.animating) {\n          e.stopPropagation();\n          e.stopImmediatePropagation();\n        }\n      }\n    }\n\n    function onScroll() {\n      const swiper = this;\n      const {\n        wrapperEl,\n        rtlTranslate,\n        enabled\n      } = swiper;\n      if (!enabled) return;\n      swiper.previousTranslate = swiper.translate;\n      if (swiper.isHorizontal()) {\n        swiper.translate = -wrapperEl.scrollLeft;\n      } else {\n        swiper.translate = -wrapperEl.scrollTop;\n      }\n      // eslint-disable-next-line\n      if (swiper.translate === 0) swiper.translate = 0;\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n      let newProgress;\n      const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n      if (translatesDiff === 0) {\n        newProgress = 0;\n      } else {\n        newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n      }\n      if (newProgress !== swiper.progress) {\n        swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n      }\n      swiper.emit('setTranslate', swiper.translate, false);\n    }\n\n    function onLoad(e) {\n      const swiper = this;\n      processLazyPreloader(swiper, e.target);\n      if (swiper.params.cssMode || swiper.params.slidesPerView !== 'auto' && !swiper.params.autoHeight) {\n        return;\n      }\n      swiper.update();\n    }\n\n    let dummyEventAttached = false;\n    function dummyEventListener() {}\n    const events = (swiper, method) => {\n      const document = getDocument();\n      const {\n        params,\n        el,\n        wrapperEl,\n        device\n      } = swiper;\n      const capture = !!params.nested;\n      const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n      const swiperMethod = method;\n\n      // Touch Events\n      el[domMethod]('pointerdown', swiper.onTouchStart, {\n        passive: false\n      });\n      document[domMethod]('pointermove', swiper.onTouchMove, {\n        passive: false,\n        capture\n      });\n      document[domMethod]('pointerup', swiper.onTouchEnd, {\n        passive: true\n      });\n      document[domMethod]('pointercancel', swiper.onTouchEnd, {\n        passive: true\n      });\n      document[domMethod]('pointerout', swiper.onTouchEnd, {\n        passive: true\n      });\n      document[domMethod]('pointerleave', swiper.onTouchEnd, {\n        passive: true\n      });\n\n      // Prevent Links Clicks\n      if (params.preventClicks || params.preventClicksPropagation) {\n        el[domMethod]('click', swiper.onClick, true);\n      }\n      if (params.cssMode) {\n        wrapperEl[domMethod]('scroll', swiper.onScroll);\n      }\n\n      // Resize handler\n      if (params.updateOnWindowResize) {\n        swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n      } else {\n        swiper[swiperMethod]('observerUpdate', onResize, true);\n      }\n\n      // Images loader\n      el[domMethod]('load', swiper.onLoad, {\n        capture: true\n      });\n    };\n    function attachEvents() {\n      const swiper = this;\n      const document = getDocument();\n      const {\n        params\n      } = swiper;\n      swiper.onTouchStart = onTouchStart.bind(swiper);\n      swiper.onTouchMove = onTouchMove.bind(swiper);\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\n      if (params.cssMode) {\n        swiper.onScroll = onScroll.bind(swiper);\n      }\n      swiper.onClick = onClick.bind(swiper);\n      swiper.onLoad = onLoad.bind(swiper);\n      if (!dummyEventAttached) {\n        document.addEventListener('touchstart', dummyEventListener);\n        dummyEventAttached = true;\n      }\n      events(swiper, 'on');\n    }\n    function detachEvents() {\n      const swiper = this;\n      events(swiper, 'off');\n    }\n    var events$1 = {\n      attachEvents,\n      detachEvents\n    };\n\n    const isGridEnabled = (swiper, params) => {\n      return swiper.grid && params.grid && params.grid.rows > 1;\n    };\n    function setBreakpoint() {\n      const swiper = this;\n      const {\n        realIndex,\n        initialized,\n        params,\n        el\n      } = swiper;\n      const breakpoints = params.breakpoints;\n      if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n      // Get breakpoint for window width and update parameters\n      const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n      if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n      const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n      const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n      const wasMultiRow = isGridEnabled(swiper, params);\n      const isMultiRow = isGridEnabled(swiper, breakpointParams);\n      const wasEnabled = params.enabled;\n      if (wasMultiRow && !isMultiRow) {\n        el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n        swiper.emitContainerClasses();\n      } else if (!wasMultiRow && isMultiRow) {\n        el.classList.add(`${params.containerModifierClass}grid`);\n        if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n          el.classList.add(`${params.containerModifierClass}grid-column`);\n        }\n        swiper.emitContainerClasses();\n      }\n\n      // Toggle navigation, pagination, scrollbar\n      ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n        if (typeof breakpointParams[prop] === 'undefined') return;\n        const wasModuleEnabled = params[prop] && params[prop].enabled;\n        const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n        if (wasModuleEnabled && !isModuleEnabled) {\n          swiper[prop].disable();\n        }\n        if (!wasModuleEnabled && isModuleEnabled) {\n          swiper[prop].enable();\n        }\n      });\n      const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n      const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n      if (directionChanged && initialized) {\n        swiper.changeDirection();\n      }\n      extend(swiper.params, breakpointParams);\n      const isEnabled = swiper.params.enabled;\n      Object.assign(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev\n      });\n      if (wasEnabled && !isEnabled) {\n        swiper.disable();\n      } else if (!wasEnabled && isEnabled) {\n        swiper.enable();\n      }\n      swiper.currentBreakpoint = breakpoint;\n      swiper.emit('_beforeBreakpoint', breakpointParams);\n      if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate(realIndex);\n        swiper.updateSlides();\n      }\n      swiper.emit('breakpoint', breakpointParams);\n    }\n\n    function getBreakpoint(breakpoints, base, containerEl) {\n      if (base === void 0) {\n        base = 'window';\n      }\n      if (!breakpoints || base === 'container' && !containerEl) return undefined;\n      let breakpoint = false;\n      const window = getWindow();\n      const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n      const points = Object.keys(breakpoints).map(point => {\n        if (typeof point === 'string' && point.indexOf('@') === 0) {\n          const minRatio = parseFloat(point.substr(1));\n          const value = currentHeight * minRatio;\n          return {\n            value,\n            point\n          };\n        }\n        return {\n          value: point,\n          point\n        };\n      });\n      points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n      for (let i = 0; i < points.length; i += 1) {\n        const {\n          point,\n          value\n        } = points[i];\n        if (base === 'window') {\n          if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n            breakpoint = point;\n          }\n        } else if (value <= containerEl.clientWidth) {\n          breakpoint = point;\n        }\n      }\n      return breakpoint || 'max';\n    }\n\n    var breakpoints = {\n      setBreakpoint,\n      getBreakpoint\n    };\n\n    function prepareClasses(entries, prefix) {\n      const resultClasses = [];\n      entries.forEach(item => {\n        if (typeof item === 'object') {\n          Object.keys(item).forEach(classNames => {\n            if (item[classNames]) {\n              resultClasses.push(prefix + classNames);\n            }\n          });\n        } else if (typeof item === 'string') {\n          resultClasses.push(prefix + item);\n        }\n      });\n      return resultClasses;\n    }\n    function addClasses() {\n      const swiper = this;\n      const {\n        classNames,\n        params,\n        rtl,\n        el,\n        device\n      } = swiper;\n      // prettier-ignore\n      const suffixes = prepareClasses(['initialized', params.direction, {\n        'free-mode': swiper.params.freeMode && params.freeMode.enabled\n      }, {\n        'autoheight': params.autoHeight\n      }, {\n        'rtl': rtl\n      }, {\n        'grid': params.grid && params.grid.rows > 1\n      }, {\n        'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n      }, {\n        'android': device.android\n      }, {\n        'ios': device.ios\n      }, {\n        'css-mode': params.cssMode\n      }, {\n        'centered': params.cssMode && params.centeredSlides\n      }, {\n        'watch-progress': params.watchSlidesProgress\n      }], params.containerModifierClass);\n      classNames.push(...suffixes);\n      el.classList.add(...classNames);\n      swiper.emitContainerClasses();\n    }\n\n    function removeClasses() {\n      const swiper = this;\n      const {\n        el,\n        classNames\n      } = swiper;\n      el.classList.remove(...classNames);\n      swiper.emitContainerClasses();\n    }\n\n    var classes = {\n      addClasses,\n      removeClasses\n    };\n\n    function checkOverflow() {\n      const swiper = this;\n      const {\n        isLocked: wasLocked,\n        params\n      } = swiper;\n      const {\n        slidesOffsetBefore\n      } = params;\n      if (slidesOffsetBefore) {\n        const lastSlideIndex = swiper.slides.length - 1;\n        const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n        swiper.isLocked = swiper.size > lastSlideRightEdge;\n      } else {\n        swiper.isLocked = swiper.snapGrid.length === 1;\n      }\n      if (params.allowSlideNext === true) {\n        swiper.allowSlideNext = !swiper.isLocked;\n      }\n      if (params.allowSlidePrev === true) {\n        swiper.allowSlidePrev = !swiper.isLocked;\n      }\n      if (wasLocked && wasLocked !== swiper.isLocked) {\n        swiper.isEnd = false;\n      }\n      if (wasLocked !== swiper.isLocked) {\n        swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n      }\n    }\n    var checkOverflow$1 = {\n      checkOverflow\n    };\n\n    var defaults = {\n      init: true,\n      direction: 'horizontal',\n      oneWayMovement: false,\n      touchEventsTarget: 'wrapper',\n      initialSlide: 0,\n      speed: 300,\n      cssMode: false,\n      updateOnWindowResize: true,\n      resizeObserver: true,\n      nested: false,\n      createElements: false,\n      enabled: true,\n      focusableElements: 'input, select, option, textarea, button, video, label',\n      // Overrides\n      width: null,\n      height: null,\n      //\n      preventInteractionOnTransition: false,\n      // ssr\n      userAgent: null,\n      url: null,\n      // To support iOS's swipe-to-go-back gesture (when being used in-app).\n      edgeSwipeDetection: false,\n      edgeSwipeThreshold: 20,\n      // Autoheight\n      autoHeight: false,\n      // Set wrapper width\n      setWrapperSize: false,\n      // Virtual Translate\n      virtualTranslate: false,\n      // Effects\n      effect: 'slide',\n      // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n      // Breakpoints\n      breakpoints: undefined,\n      breakpointsBase: 'window',\n      // Slides grid\n      spaceBetween: 0,\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      slidesPerGroupSkip: 0,\n      slidesPerGroupAuto: false,\n      centeredSlides: false,\n      centeredSlidesBounds: false,\n      slidesOffsetBefore: 0,\n      // in px\n      slidesOffsetAfter: 0,\n      // in px\n      normalizeSlideIndex: true,\n      centerInsufficientSlides: false,\n      // Disable swiper and hide navigation when container not overflow\n      watchOverflow: true,\n      // Round length\n      roundLengths: false,\n      // Touches\n      touchRatio: 1,\n      touchAngle: 45,\n      simulateTouch: true,\n      shortSwipes: true,\n      longSwipes: true,\n      longSwipesRatio: 0.5,\n      longSwipesMs: 300,\n      followFinger: true,\n      allowTouchMove: true,\n      threshold: 5,\n      touchMoveStopPropagation: false,\n      touchStartPreventDefault: true,\n      touchStartForcePreventDefault: false,\n      touchReleaseOnEdges: false,\n      // Unique Navigation Elements\n      uniqueNavElements: true,\n      // Resistance\n      resistance: true,\n      resistanceRatio: 0.85,\n      // Progress\n      watchSlidesProgress: false,\n      // Cursor\n      grabCursor: false,\n      // Clicks\n      preventClicks: true,\n      preventClicksPropagation: true,\n      slideToClickedSlide: false,\n      // loop\n      loop: false,\n      loopedSlides: null,\n      loopPreventsSliding: true,\n      // rewind\n      rewind: false,\n      // Swiping/no swiping\n      allowSlidePrev: true,\n      allowSlideNext: true,\n      swipeHandler: null,\n      // '.swipe-handler',\n      noSwiping: true,\n      noSwipingClass: 'swiper-no-swiping',\n      noSwipingSelector: null,\n      // Passive Listeners\n      passiveListeners: true,\n      maxBackfaceHiddenSlides: 10,\n      // NS\n      containerModifierClass: 'swiper-',\n      // NEW\n      slideClass: 'swiper-slide',\n      slideActiveClass: 'swiper-slide-active',\n      slideVisibleClass: 'swiper-slide-visible',\n      slideNextClass: 'swiper-slide-next',\n      slidePrevClass: 'swiper-slide-prev',\n      wrapperClass: 'swiper-wrapper',\n      lazyPreloaderClass: 'swiper-lazy-preloader',\n      lazyPreloadPrevNext: 0,\n      // Callbacks\n      runCallbacksOnInit: true,\n      // Internals\n      _emitClasses: false\n    };\n\n    function moduleExtendParams(params, allModulesParams) {\n      return function extendParams(obj) {\n        if (obj === void 0) {\n          obj = {};\n        }\n        const moduleParamName = Object.keys(obj)[0];\n        const moduleParams = obj[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) {\n          extend(allModulesParams, obj);\n          return;\n        }\n        if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n          params[moduleParamName] = {\n            auto: true\n          };\n        }\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n          extend(allModulesParams, obj);\n          return;\n        }\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = {\n            enabled: true\n          };\n        }\n        if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = {\n          enabled: false\n        };\n        extend(allModulesParams, obj);\n      };\n    }\n\n    /* eslint no-param-reassign: \"off\" */\n    const prototypes = {\n      eventsEmitter,\n      update,\n      translate,\n      transition,\n      slide,\n      loop,\n      grabCursor,\n      events: events$1,\n      breakpoints,\n      checkOverflow: checkOverflow$1,\n      classes\n    };\n    const extendedDefaults = {};\n    class Swiper {\n      constructor() {\n        let el;\n        let params;\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n          params = args[0];\n        } else {\n          [el, params] = args;\n        }\n        if (!params) params = {};\n        params = extend({}, params);\n        if (el && !params.el) params.el = el;\n        const document = getDocument();\n        if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n          const swipers = [];\n          document.querySelectorAll(params.el).forEach(containerEl => {\n            const newParams = extend({}, params, {\n              el: containerEl\n            });\n            swipers.push(new Swiper(newParams));\n          });\n          // eslint-disable-next-line no-constructor-return\n          return swipers;\n        }\n\n        // Swiper Instance\n        const swiper = this;\n        swiper.__swiper__ = true;\n        swiper.support = getSupport();\n        swiper.device = getDevice({\n          userAgent: params.userAgent\n        });\n        swiper.browser = getBrowser();\n        swiper.eventsListeners = {};\n        swiper.eventsAnyListeners = [];\n        swiper.modules = [...swiper.__modules__];\n        if (params.modules && Array.isArray(params.modules)) {\n          swiper.modules.push(...params.modules);\n        }\n        const allModulesParams = {};\n        swiper.modules.forEach(mod => {\n          mod({\n            params,\n            swiper,\n            extendParams: moduleExtendParams(params, allModulesParams),\n            on: swiper.on.bind(swiper),\n            once: swiper.once.bind(swiper),\n            off: swiper.off.bind(swiper),\n            emit: swiper.emit.bind(swiper)\n          });\n        });\n\n        // Extend defaults with modules params\n        const swiperParams = extend({}, defaults, allModulesParams);\n\n        // Extend defaults with passed params\n        swiper.params = extend({}, swiperParams, extendedDefaults, params);\n        swiper.originalParams = extend({}, swiper.params);\n        swiper.passedParams = extend({}, params);\n\n        // add event listeners\n        if (swiper.params && swiper.params.on) {\n          Object.keys(swiper.params.on).forEach(eventName => {\n            swiper.on(eventName, swiper.params.on[eventName]);\n          });\n        }\n        if (swiper.params && swiper.params.onAny) {\n          swiper.onAny(swiper.params.onAny);\n        }\n\n        // Extend Swiper\n        Object.assign(swiper, {\n          enabled: swiper.params.enabled,\n          el,\n          // Classes\n          classNames: [],\n          // Slides\n          slides: [],\n          slidesGrid: [],\n          snapGrid: [],\n          slidesSizesGrid: [],\n          // isDirection\n          isHorizontal() {\n            return swiper.params.direction === 'horizontal';\n          },\n          isVertical() {\n            return swiper.params.direction === 'vertical';\n          },\n          // Indexes\n          activeIndex: 0,\n          realIndex: 0,\n          //\n          isBeginning: true,\n          isEnd: false,\n          // Props\n          translate: 0,\n          previousTranslate: 0,\n          progress: 0,\n          velocity: 0,\n          animating: false,\n          cssOverflowAdjustment() {\n            // Returns 0 unless `translate` is > 2**23\n            // Should be subtracted from css values to prevent overflow\n            return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n          },\n          // Locks\n          allowSlideNext: swiper.params.allowSlideNext,\n          allowSlidePrev: swiper.params.allowSlidePrev,\n          // Touch Events\n          touchEventsData: {\n            isTouched: undefined,\n            isMoved: undefined,\n            allowTouchCallbacks: undefined,\n            touchStartTime: undefined,\n            isScrolling: undefined,\n            currentTranslate: undefined,\n            startTranslate: undefined,\n            allowThresholdMove: undefined,\n            // Form elements to match\n            focusableElements: swiper.params.focusableElements,\n            // Last click time\n            lastClickTime: 0,\n            clickTimeout: undefined,\n            // Velocities\n            velocities: [],\n            allowMomentumBounce: undefined,\n            startMoving: undefined,\n            evCache: []\n          },\n          // Clicks\n          allowClick: true,\n          // Touches\n          allowTouchMove: swiper.params.allowTouchMove,\n          touches: {\n            startX: 0,\n            startY: 0,\n            currentX: 0,\n            currentY: 0,\n            diff: 0\n          },\n          // Images\n          imagesToLoad: [],\n          imagesLoaded: 0\n        });\n        swiper.emit('_swiper');\n\n        // Init\n        if (swiper.params.init) {\n          swiper.init();\n        }\n\n        // Return app instance\n        // eslint-disable-next-line no-constructor-return\n        return swiper;\n      }\n      getSlideIndex(slideEl) {\n        const {\n          slidesEl,\n          params\n        } = this;\n        const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n        const firstSlideIndex = elementIndex(slides[0]);\n        return elementIndex(slideEl) - firstSlideIndex;\n      }\n      getSlideIndexByData(index) {\n        return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n      }\n      recalcSlides() {\n        const swiper = this;\n        const {\n          slidesEl,\n          params\n        } = swiper;\n        swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n      }\n      enable() {\n        const swiper = this;\n        if (swiper.enabled) return;\n        swiper.enabled = true;\n        if (swiper.params.grabCursor) {\n          swiper.setGrabCursor();\n        }\n        swiper.emit('enable');\n      }\n      disable() {\n        const swiper = this;\n        if (!swiper.enabled) return;\n        swiper.enabled = false;\n        if (swiper.params.grabCursor) {\n          swiper.unsetGrabCursor();\n        }\n        swiper.emit('disable');\n      }\n      setProgress(progress, speed) {\n        const swiper = this;\n        progress = Math.min(Math.max(progress, 0), 1);\n        const min = swiper.minTranslate();\n        const max = swiper.maxTranslate();\n        const current = (max - min) * progress + min;\n        swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      emitContainerClasses() {\n        const swiper = this;\n        if (!swiper.params._emitClasses || !swiper.el) return;\n        const cls = swiper.el.className.split(' ').filter(className => {\n          return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n        });\n        swiper.emit('_containerClasses', cls.join(' '));\n      }\n      getSlideClasses(slideEl) {\n        const swiper = this;\n        if (swiper.destroyed) return '';\n        return slideEl.className.split(' ').filter(className => {\n          return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n        }).join(' ');\n      }\n      emitSlidesClasses() {\n        const swiper = this;\n        if (!swiper.params._emitClasses || !swiper.el) return;\n        const updates = [];\n        swiper.slides.forEach(slideEl => {\n          const classNames = swiper.getSlideClasses(slideEl);\n          updates.push({\n            slideEl,\n            classNames\n          });\n          swiper.emit('_slideClass', slideEl, classNames);\n        });\n        swiper.emit('_slideClasses', updates);\n      }\n      slidesPerViewDynamic(view, exact) {\n        if (view === void 0) {\n          view = 'current';\n        }\n        if (exact === void 0) {\n          exact = false;\n        }\n        const swiper = this;\n        const {\n          params,\n          slides,\n          slidesGrid,\n          slidesSizesGrid,\n          size: swiperSize,\n          activeIndex\n        } = swiper;\n        let spv = 1;\n        if (params.centeredSlides) {\n          let slideSize = slides[activeIndex] ? slides[activeIndex].swiperSlideSize : 0;\n          let breakLoop;\n          for (let i = activeIndex + 1; i < slides.length; i += 1) {\n            if (slides[i] && !breakLoop) {\n              slideSize += slides[i].swiperSlideSize;\n              spv += 1;\n              if (slideSize > swiperSize) breakLoop = true;\n            }\n          }\n          for (let i = activeIndex - 1; i >= 0; i -= 1) {\n            if (slides[i] && !breakLoop) {\n              slideSize += slides[i].swiperSlideSize;\n              spv += 1;\n              if (slideSize > swiperSize) breakLoop = true;\n            }\n          }\n        } else {\n          // eslint-disable-next-line\n          if (view === 'current') {\n            for (let i = activeIndex + 1; i < slides.length; i += 1) {\n              const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n              if (slideInView) {\n                spv += 1;\n              }\n            }\n          } else {\n            // previous\n            for (let i = activeIndex - 1; i >= 0; i -= 1) {\n              const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n              if (slideInView) {\n                spv += 1;\n              }\n            }\n          }\n        }\n        return spv;\n      }\n      update() {\n        const swiper = this;\n        if (!swiper || swiper.destroyed) return;\n        const {\n          snapGrid,\n          params\n        } = swiper;\n        // Breakpoints\n        if (params.breakpoints) {\n          swiper.setBreakpoint();\n        }\n        [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n          if (imageEl.complete) {\n            processLazyPreloader(swiper, imageEl);\n          }\n        });\n        swiper.updateSize();\n        swiper.updateSlides();\n        swiper.updateProgress();\n        swiper.updateSlidesClasses();\n        function setTranslate() {\n          const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n          const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n          swiper.setTranslate(newTranslate);\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n        }\n        let translated;\n        if (params.freeMode && params.freeMode.enabled && !params.cssMode) {\n          setTranslate();\n          if (params.autoHeight) {\n            swiper.updateAutoHeight();\n          }\n        } else {\n          if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !params.centeredSlides) {\n            const slides = swiper.virtual && params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n            translated = swiper.slideTo(slides.length - 1, 0, false, true);\n          } else {\n            translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n          }\n          if (!translated) {\n            setTranslate();\n          }\n        }\n        if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n          swiper.checkOverflow();\n        }\n        swiper.emit('update');\n      }\n      changeDirection(newDirection, needUpdate) {\n        if (needUpdate === void 0) {\n          needUpdate = true;\n        }\n        const swiper = this;\n        const currentDirection = swiper.params.direction;\n        if (!newDirection) {\n          // eslint-disable-next-line\n          newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n        }\n        if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n          return swiper;\n        }\n        swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n        swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n        swiper.emitContainerClasses();\n        swiper.params.direction = newDirection;\n        swiper.slides.forEach(slideEl => {\n          if (newDirection === 'vertical') {\n            slideEl.style.width = '';\n          } else {\n            slideEl.style.height = '';\n          }\n        });\n        swiper.emit('changeDirection');\n        if (needUpdate) swiper.update();\n        return swiper;\n      }\n      changeLanguageDirection(direction) {\n        const swiper = this;\n        if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n        swiper.rtl = direction === 'rtl';\n        swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n        if (swiper.rtl) {\n          swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n          swiper.el.dir = 'rtl';\n        } else {\n          swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n          swiper.el.dir = 'ltr';\n        }\n        swiper.update();\n      }\n      mount(element) {\n        const swiper = this;\n        if (swiper.mounted) return true;\n\n        // Find el\n        let el = element || swiper.params.el;\n        if (typeof el === 'string') {\n          el = document.querySelector(el);\n        }\n        if (!el) {\n          return false;\n        }\n        el.swiper = swiper;\n        if (el.shadowEl) {\n          swiper.isElement = true;\n        }\n        const getWrapperSelector = () => {\n          return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n        };\n        const getWrapper = () => {\n          if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n            const res = el.shadowRoot.querySelector(getWrapperSelector());\n            // Children needs to return slot items\n            return res;\n          }\n          return elementChildren(el, getWrapperSelector())[0];\n        };\n        // Find Wrapper\n        let wrapperEl = getWrapper();\n        if (!wrapperEl && swiper.params.createElements) {\n          wrapperEl = createElement('div', swiper.params.wrapperClass);\n          el.append(wrapperEl);\n          elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n            wrapperEl.append(slideEl);\n          });\n        }\n        Object.assign(swiper, {\n          el,\n          wrapperEl,\n          slidesEl: swiper.isElement ? el : wrapperEl,\n          mounted: true,\n          // RTL\n          rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n          rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n          wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n        });\n        return true;\n      }\n      init(el) {\n        const swiper = this;\n        if (swiper.initialized) return swiper;\n        const mounted = swiper.mount(el);\n        if (mounted === false) return swiper;\n        swiper.emit('beforeInit');\n\n        // Set breakpoint\n        if (swiper.params.breakpoints) {\n          swiper.setBreakpoint();\n        }\n\n        // Add Classes\n        swiper.addClasses();\n\n        // Update size\n        swiper.updateSize();\n\n        // Update slides\n        swiper.updateSlides();\n        if (swiper.params.watchOverflow) {\n          swiper.checkOverflow();\n        }\n\n        // Set Grab Cursor\n        if (swiper.params.grabCursor && swiper.enabled) {\n          swiper.setGrabCursor();\n        }\n\n        // Slide To Initial Slide\n        if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n          swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n        } else {\n          swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n        }\n\n        // Create loop\n        if (swiper.params.loop) {\n          swiper.loopCreate();\n        }\n\n        // Attach events\n        swiper.attachEvents();\n        [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n          if (imageEl.complete) {\n            processLazyPreloader(swiper, imageEl);\n          } else {\n            imageEl.addEventListener('load', e => {\n              processLazyPreloader(swiper, e.target);\n            });\n          }\n        });\n        preload(swiper);\n\n        // Init Flag\n        swiper.initialized = true;\n        preload(swiper);\n\n        // Emit\n        swiper.emit('init');\n        swiper.emit('afterInit');\n        return swiper;\n      }\n      destroy(deleteInstance, cleanStyles) {\n        if (deleteInstance === void 0) {\n          deleteInstance = true;\n        }\n        if (cleanStyles === void 0) {\n          cleanStyles = true;\n        }\n        const swiper = this;\n        const {\n          params,\n          el,\n          wrapperEl,\n          slides\n        } = swiper;\n        if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n          return null;\n        }\n        swiper.emit('beforeDestroy');\n\n        // Init Flag\n        swiper.initialized = false;\n\n        // Detach events\n        swiper.detachEvents();\n\n        // Destroy loop\n        if (params.loop) {\n          swiper.loopDestroy();\n        }\n\n        // Cleanup styles\n        if (cleanStyles) {\n          swiper.removeClasses();\n          el.removeAttribute('style');\n          wrapperEl.removeAttribute('style');\n          if (slides && slides.length) {\n            slides.forEach(slideEl => {\n              slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n              slideEl.removeAttribute('style');\n              slideEl.removeAttribute('data-swiper-slide-index');\n            });\n          }\n        }\n        swiper.emit('destroy');\n\n        // Detach emitter events\n        Object.keys(swiper.eventsListeners).forEach(eventName => {\n          swiper.off(eventName);\n        });\n        if (deleteInstance !== false) {\n          swiper.el.swiper = null;\n          deleteProps(swiper);\n        }\n        swiper.destroyed = true;\n        return null;\n      }\n      static extendDefaults(newDefaults) {\n        extend(extendedDefaults, newDefaults);\n      }\n      static get extendedDefaults() {\n        return extendedDefaults;\n      }\n      static get defaults() {\n        return defaults;\n      }\n      static installModule(mod) {\n        if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n        const modules = Swiper.prototype.__modules__;\n        if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n          modules.push(mod);\n        }\n      }\n      static use(module) {\n        if (Array.isArray(module)) {\n          module.forEach(m => Swiper.installModule(m));\n          return Swiper;\n        }\n        Swiper.installModule(module);\n        return Swiper;\n      }\n    }\n    Object.keys(prototypes).forEach(prototypeGroup => {\n      Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n        Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n      });\n    });\n    Swiper.use([Resize, Observer]);\n\n    function Virtual(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit\n      } = _ref;\n      extendParams({\n        virtual: {\n          enabled: false,\n          slides: [],\n          cache: true,\n          renderSlide: null,\n          renderExternal: null,\n          renderExternalUpdate: true,\n          addSlidesBefore: 0,\n          addSlidesAfter: 0\n        }\n      });\n      let cssModeTimeout;\n      const document = getDocument();\n      swiper.virtual = {\n        cache: {},\n        from: undefined,\n        to: undefined,\n        slides: [],\n        offset: 0,\n        slidesGrid: []\n      };\n      const tempDOM = document.createElement('div');\n      function renderSlide(slide, index) {\n        const params = swiper.params.virtual;\n        if (params.cache && swiper.virtual.cache[index]) {\n          return swiper.virtual.cache[index];\n        }\n        // eslint-disable-next-line\n        let slideEl;\n        if (params.renderSlide) {\n          slideEl = params.renderSlide.call(swiper, slide, index);\n          if (typeof slideEl === 'string') {\n            tempDOM.innerHTML = slideEl;\n            slideEl = tempDOM.children[0];\n          }\n        } else if (swiper.isElement) {\n          slideEl = createElement('swiper-slide');\n        } else {\n          slideEl = createElement('div', swiper.params.slideClass);\n        }\n        slideEl.setAttribute('data-swiper-slide-index', index);\n        if (!params.renderSlide) {\n          slideEl.innerHTML = slide;\n        }\n        if (params.cache) swiper.virtual.cache[index] = slideEl;\n        return slideEl;\n      }\n      function update(force) {\n        const {\n          slidesPerView,\n          slidesPerGroup,\n          centeredSlides,\n          loop: isLoop\n        } = swiper.params;\n        const {\n          addSlidesBefore,\n          addSlidesAfter\n        } = swiper.params.virtual;\n        const {\n          from: previousFrom,\n          to: previousTo,\n          slides,\n          slidesGrid: previousSlidesGrid,\n          offset: previousOffset\n        } = swiper.virtual;\n        if (!swiper.params.cssMode) {\n          swiper.updateActiveIndex();\n        }\n        const activeIndex = swiper.activeIndex || 0;\n        let offsetProp;\n        if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n        let slidesAfter;\n        let slidesBefore;\n        if (centeredSlides) {\n          slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n          slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n        } else {\n          slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n          slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n        }\n        let from = activeIndex - slidesBefore;\n        let to = activeIndex + slidesAfter;\n        if (!isLoop) {\n          from = Math.max(from, 0);\n          to = Math.min(to, slides.length - 1);\n        }\n        let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n        if (isLoop && activeIndex >= slidesBefore) {\n          from -= slidesBefore;\n          if (!centeredSlides) offset += swiper.slidesGrid[0];\n        } else if (isLoop && activeIndex < slidesBefore) {\n          from = -slidesBefore;\n          if (centeredSlides) offset += swiper.slidesGrid[0];\n        }\n        Object.assign(swiper.virtual, {\n          from,\n          to,\n          offset,\n          slidesGrid: swiper.slidesGrid,\n          slidesBefore,\n          slidesAfter\n        });\n        function onRendered() {\n          swiper.updateSlides();\n          swiper.updateProgress();\n          swiper.updateSlidesClasses();\n          emit('virtualUpdate');\n        }\n        if (previousFrom === from && previousTo === to && !force) {\n          if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n            swiper.slides.forEach(slideEl => {\n              slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n            });\n          }\n          swiper.updateProgress();\n          emit('virtualUpdate');\n          return;\n        }\n        if (swiper.params.virtual.renderExternal) {\n          swiper.params.virtual.renderExternal.call(swiper, {\n            offset,\n            from,\n            to,\n            slides: function getSlides() {\n              const slidesToRender = [];\n              for (let i = from; i <= to; i += 1) {\n                slidesToRender.push(slides[i]);\n              }\n              return slidesToRender;\n            }()\n          });\n          if (swiper.params.virtual.renderExternalUpdate) {\n            onRendered();\n          } else {\n            emit('virtualUpdate');\n          }\n          return;\n        }\n        const prependIndexes = [];\n        const appendIndexes = [];\n        const getSlideIndex = index => {\n          let slideIndex = index;\n          if (index < 0) {\n            slideIndex = slides.length + index;\n          } else if (slideIndex >= slides.length) {\n            // eslint-disable-next-line\n            slideIndex = slideIndex - slides.length;\n          }\n          return slideIndex;\n        };\n        if (force) {\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        } else {\n          for (let i = previousFrom; i <= previousTo; i += 1) {\n            if (i < from || i > to) {\n              const slideIndex = getSlideIndex(i);\n              swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n                slideEl.remove();\n              });\n            }\n          }\n        }\n        const loopFrom = isLoop ? -slides.length : 0;\n        const loopTo = isLoop ? slides.length * 2 : slides.length;\n        for (let i = loopFrom; i < loopTo; i += 1) {\n          if (i >= from && i <= to) {\n            const slideIndex = getSlideIndex(i);\n            if (typeof previousTo === 'undefined' || force) {\n              appendIndexes.push(slideIndex);\n            } else {\n              if (i > previousTo) appendIndexes.push(slideIndex);\n              if (i < previousFrom) prependIndexes.push(slideIndex);\n            }\n          }\n        }\n        appendIndexes.forEach(index => {\n          swiper.slidesEl.append(renderSlide(slides[index], index));\n        });\n        if (isLoop) {\n          for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n            const index = prependIndexes[i];\n            swiper.slidesEl.prepend(renderSlide(slides[index], index));\n          }\n        } else {\n          prependIndexes.sort((a, b) => b - a);\n          prependIndexes.forEach(index => {\n            swiper.slidesEl.prepend(renderSlide(slides[index], index));\n          });\n        }\n        elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n        onRendered();\n      }\n      function appendSlide(slides) {\n        if (typeof slides === 'object' && 'length' in slides) {\n          for (let i = 0; i < slides.length; i += 1) {\n            if (slides[i]) swiper.virtual.slides.push(slides[i]);\n          }\n        } else {\n          swiper.virtual.slides.push(slides);\n        }\n        update(true);\n      }\n      function prependSlide(slides) {\n        const activeIndex = swiper.activeIndex;\n        let newActiveIndex = activeIndex + 1;\n        let numberOfNewSlides = 1;\n        if (Array.isArray(slides)) {\n          for (let i = 0; i < slides.length; i += 1) {\n            if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n          }\n          newActiveIndex = activeIndex + slides.length;\n          numberOfNewSlides = slides.length;\n        } else {\n          swiper.virtual.slides.unshift(slides);\n        }\n        if (swiper.params.virtual.cache) {\n          const cache = swiper.virtual.cache;\n          const newCache = {};\n          Object.keys(cache).forEach(cachedIndex => {\n            const cachedEl = cache[cachedIndex];\n            const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n            if (cachedElIndex) {\n              cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n            }\n            newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n          });\n          swiper.virtual.cache = newCache;\n        }\n        update(true);\n        swiper.slideTo(newActiveIndex, 0);\n      }\n      function removeSlide(slidesIndexes) {\n        if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n        let activeIndex = swiper.activeIndex;\n        if (Array.isArray(slidesIndexes)) {\n          for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n            swiper.virtual.slides.splice(slidesIndexes[i], 1);\n            if (swiper.params.virtual.cache) {\n              delete swiper.virtual.cache[slidesIndexes[i]];\n            }\n            if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n            activeIndex = Math.max(activeIndex, 0);\n          }\n        } else {\n          swiper.virtual.slides.splice(slidesIndexes, 1);\n          if (swiper.params.virtual.cache) {\n            delete swiper.virtual.cache[slidesIndexes];\n          }\n          if (slidesIndexes < activeIndex) activeIndex -= 1;\n          activeIndex = Math.max(activeIndex, 0);\n        }\n        update(true);\n        swiper.slideTo(activeIndex, 0);\n      }\n      function removeAllSlides() {\n        swiper.virtual.slides = [];\n        if (swiper.params.virtual.cache) {\n          swiper.virtual.cache = {};\n        }\n        update(true);\n        swiper.slideTo(0, 0);\n      }\n      on('beforeInit', () => {\n        if (!swiper.params.virtual.enabled) return;\n        let domSlidesAssigned;\n        if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n          const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n          if (slides && slides.length) {\n            swiper.virtual.slides = [...slides];\n            domSlidesAssigned = true;\n            slides.forEach((slideEl, slideIndex) => {\n              slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n              swiper.virtual.cache[slideIndex] = slideEl;\n              slideEl.remove();\n            });\n          }\n        }\n        if (!domSlidesAssigned) {\n          swiper.virtual.slides = swiper.params.virtual.slides;\n        }\n        swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n        if (!swiper.params.initialSlide) {\n          update();\n        }\n      });\n      on('setTranslate', () => {\n        if (!swiper.params.virtual.enabled) return;\n        if (swiper.params.cssMode && !swiper._immediateVirtual) {\n          clearTimeout(cssModeTimeout);\n          cssModeTimeout = setTimeout(() => {\n            update();\n          }, 100);\n        } else {\n          update();\n        }\n      });\n      on('init update resize', () => {\n        if (!swiper.params.virtual.enabled) return;\n        if (swiper.params.cssMode) {\n          setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n        }\n      });\n      Object.assign(swiper.virtual, {\n        appendSlide,\n        prependSlide,\n        removeSlide,\n        removeAllSlides,\n        update\n      });\n    }\n\n    /* eslint-disable consistent-return */\n    function Keyboard(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit\n      } = _ref;\n      const document = getDocument();\n      const window = getWindow();\n      swiper.keyboard = {\n        enabled: false\n      };\n      extendParams({\n        keyboard: {\n          enabled: false,\n          onlyInViewport: true,\n          pageUpDown: true\n        }\n      });\n      function handle(event) {\n        if (!swiper.enabled) return;\n        const {\n          rtlTranslate: rtl\n        } = swiper;\n        let e = event;\n        if (e.originalEvent) e = e.originalEvent; // jquery fix\n        const kc = e.keyCode || e.charCode;\n        const pageUpDown = swiper.params.keyboard.pageUpDown;\n        const isPageUp = pageUpDown && kc === 33;\n        const isPageDown = pageUpDown && kc === 34;\n        const isArrowLeft = kc === 37;\n        const isArrowRight = kc === 39;\n        const isArrowUp = kc === 38;\n        const isArrowDown = kc === 40;\n        // Directions locks\n        if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n          return false;\n        }\n        if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n          return false;\n        }\n        if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n          return undefined;\n        }\n        if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n          return undefined;\n        }\n        if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n          let inView = false;\n          // Check that swiper should be inside of visible area of window\n          if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n            return undefined;\n          }\n          const el = swiper.el;\n          const swiperWidth = el.clientWidth;\n          const swiperHeight = el.clientHeight;\n          const windowWidth = window.innerWidth;\n          const windowHeight = window.innerHeight;\n          const swiperOffset = elementOffset(el);\n          if (rtl) swiperOffset.left -= el.scrollLeft;\n          const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n          for (let i = 0; i < swiperCoord.length; i += 1) {\n            const point = swiperCoord[i];\n            if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n              if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n              inView = true;\n            }\n          }\n          if (!inView) return undefined;\n        }\n        if (swiper.isHorizontal()) {\n          if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n            if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n          }\n          if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n          if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n        } else {\n          if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n            if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n          }\n          if (isPageDown || isArrowDown) swiper.slideNext();\n          if (isPageUp || isArrowUp) swiper.slidePrev();\n        }\n        emit('keyPress', kc);\n        return undefined;\n      }\n      function enable() {\n        if (swiper.keyboard.enabled) return;\n        document.addEventListener('keydown', handle);\n        swiper.keyboard.enabled = true;\n      }\n      function disable() {\n        if (!swiper.keyboard.enabled) return;\n        document.removeEventListener('keydown', handle);\n        swiper.keyboard.enabled = false;\n      }\n      on('init', () => {\n        if (swiper.params.keyboard.enabled) {\n          enable();\n        }\n      });\n      on('destroy', () => {\n        if (swiper.keyboard.enabled) {\n          disable();\n        }\n      });\n      Object.assign(swiper.keyboard, {\n        enable,\n        disable\n      });\n    }\n\n    /* eslint-disable consistent-return */\n    function Mousewheel(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit\n      } = _ref;\n      const window = getWindow();\n      extendParams({\n        mousewheel: {\n          enabled: false,\n          releaseOnEdges: false,\n          invert: false,\n          forceToAxis: false,\n          sensitivity: 1,\n          eventsTarget: 'container',\n          thresholdDelta: null,\n          thresholdTime: null,\n          noMousewheelClass: 'swiper-no-mousewheel'\n        }\n      });\n      swiper.mousewheel = {\n        enabled: false\n      };\n      let timeout;\n      let lastScrollTime = now();\n      let lastEventBeforeSnap;\n      const recentWheelEvents = [];\n      function normalize(e) {\n        // Reasonable defaults\n        const PIXEL_STEP = 10;\n        const LINE_HEIGHT = 40;\n        const PAGE_HEIGHT = 800;\n        let sX = 0;\n        let sY = 0; // spinX, spinY\n        let pX = 0;\n        let pY = 0; // pixelX, pixelY\n\n        // Legacy\n        if ('detail' in e) {\n          sY = e.detail;\n        }\n        if ('wheelDelta' in e) {\n          sY = -e.wheelDelta / 120;\n        }\n        if ('wheelDeltaY' in e) {\n          sY = -e.wheelDeltaY / 120;\n        }\n        if ('wheelDeltaX' in e) {\n          sX = -e.wheelDeltaX / 120;\n        }\n\n        // side scrolling on FF with DOMMouseScroll\n        if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n          sX = sY;\n          sY = 0;\n        }\n        pX = sX * PIXEL_STEP;\n        pY = sY * PIXEL_STEP;\n        if ('deltaY' in e) {\n          pY = e.deltaY;\n        }\n        if ('deltaX' in e) {\n          pX = e.deltaX;\n        }\n        if (e.shiftKey && !pX) {\n          // if user scrolls with shift he wants horizontal scroll\n          pX = pY;\n          pY = 0;\n        }\n        if ((pX || pY) && e.deltaMode) {\n          if (e.deltaMode === 1) {\n            // delta in LINE units\n            pX *= LINE_HEIGHT;\n            pY *= LINE_HEIGHT;\n          } else {\n            // delta in PAGE units\n            pX *= PAGE_HEIGHT;\n            pY *= PAGE_HEIGHT;\n          }\n        }\n\n        // Fall-back if spin cannot be determined\n        if (pX && !sX) {\n          sX = pX < 1 ? -1 : 1;\n        }\n        if (pY && !sY) {\n          sY = pY < 1 ? -1 : 1;\n        }\n        return {\n          spinX: sX,\n          spinY: sY,\n          pixelX: pX,\n          pixelY: pY\n        };\n      }\n      function handleMouseEnter() {\n        if (!swiper.enabled) return;\n        swiper.mouseEntered = true;\n      }\n      function handleMouseLeave() {\n        if (!swiper.enabled) return;\n        swiper.mouseEntered = false;\n      }\n      function animateSlider(newEvent) {\n        if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n          // Prevent if delta of wheel scroll delta is below configured threshold\n          return false;\n        }\n        if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n          // Prevent if time between scrolls is below configured threshold\n          return false;\n        }\n\n        // If the movement is NOT big enough and\n        // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n        //   Don't go any further (avoid insignificant scroll movement).\n        if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n          // Return false as a default\n          return true;\n        }\n        // If user is scrolling towards the end:\n        //   If the slider hasn't hit the latest slide or\n        //   if the slider is a loop and\n        //   if the slider isn't moving right now:\n        //     Go to next slide and\n        //     emit a scroll event.\n        // Else (the user is scrolling towards the beginning) and\n        // if the slider hasn't hit the first slide or\n        // if the slider is a loop and\n        // if the slider isn't moving right now:\n        //   Go to prev slide and\n        //   emit a scroll event.\n        if (newEvent.direction < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            emit('scroll', newEvent.raw);\n          }\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          emit('scroll', newEvent.raw);\n        }\n        // If you got here is because an animation has been triggered so store the current time\n        lastScrollTime = new window.Date().getTime();\n        // Return false as a default\n        return false;\n      }\n      function releaseScroll(newEvent) {\n        const params = swiper.params.mousewheel;\n        if (newEvent.direction < 0) {\n          if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n            // Return true to animate scroll on edges\n            return true;\n          }\n        } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n          // Return true to animate scroll on edges\n          return true;\n        }\n        return false;\n      }\n      function handle(event) {\n        let e = event;\n        let disableParentSwiper = true;\n        if (!swiper.enabled) return;\n\n        // Ignore event if the target or its parents have the swiper-no-mousewheel class\n        if (event.target.closest(`.${swiper.params.mousewheel.noMousewheelClass}`)) return;\n        const params = swiper.params.mousewheel;\n        if (swiper.params.cssMode) {\n          e.preventDefault();\n        }\n        let targetEl = swiper.el;\n        if (swiper.params.mousewheel.eventsTarget !== 'container') {\n          targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n        }\n        const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n        if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n        if (e.originalEvent) e = e.originalEvent; // jquery fix\n        let delta = 0;\n        const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n        const data = normalize(e);\n        if (params.forceToAxis) {\n          if (swiper.isHorizontal()) {\n            if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n          } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n        } else {\n          delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n        }\n        if (delta === 0) return true;\n        if (params.invert) delta = -delta;\n\n        // Get the scroll positions\n        let positions = swiper.getTranslate() + delta * params.sensitivity;\n        if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n        if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n        // When loop is true:\n        //     the disableParentSwiper will be true.\n        // When loop is false:\n        //     if the scroll positions is not on edge,\n        //     then the disableParentSwiper will be true.\n        //     if the scroll on edge positions,\n        //     then the disableParentSwiper will be false.\n        disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n        if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n        if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n          // Register the new event in a variable which stores the relevant data\n          const newEvent = {\n            time: now(),\n            delta: Math.abs(delta),\n            direction: Math.sign(delta),\n            raw: event\n          };\n\n          // Keep the most recent events\n          if (recentWheelEvents.length >= 2) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          recentWheelEvents.push(newEvent);\n\n          // If there is at least one previous recorded event:\n          //   If direction has changed or\n          //   if the scroll is quicker than the previous one:\n          //     Animate the slider.\n          // Else (this is the first time the wheel is moved):\n          //     Animate the slider.\n          if (prevEvent) {\n            if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n              animateSlider(newEvent);\n            }\n          } else {\n            animateSlider(newEvent);\n          }\n\n          // If it's time to release the scroll:\n          //   Return now so you don't hit the preventDefault.\n          if (releaseScroll(newEvent)) {\n            return true;\n          }\n        } else {\n          // Freemode or scrollContainer:\n\n          // If we recently snapped after a momentum scroll, then ignore wheel events\n          // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n          // or if it's a new scroll (larger delta or inverse sign as last event before\n          // an end-of-momentum snap).\n          const newEvent = {\n            time: now(),\n            delta: Math.abs(delta),\n            direction: Math.sign(delta)\n          };\n          const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n          if (!ignoreWheelEvents) {\n            lastEventBeforeSnap = undefined;\n            let position = swiper.getTranslate() + delta * params.sensitivity;\n            const wasBeginning = swiper.isBeginning;\n            const wasEnd = swiper.isEnd;\n            if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n            if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n            swiper.setTransition(0);\n            swiper.setTranslate(position);\n            swiper.updateProgress();\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n            if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n              swiper.updateSlidesClasses();\n            }\n            if (swiper.params.loop) {\n              swiper.loopFix({\n                direction: newEvent.direction < 0 ? 'next' : 'prev',\n                byMousewheel: true\n              });\n            }\n            if (swiper.params.freeMode.sticky) {\n              // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n              // the end of a momentum scroll by storing recent (N=15?) wheel events.\n              // 1. do all N events have decreasing or same (absolute value) delta?\n              // 2. did all N events arrive in the last M (M=500?) msecs?\n              // 3. does the earliest event have an (absolute value) delta that's\n              //    at least P (P=1?) larger than the most recent event's delta?\n              // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n              // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n              // Snap immediately and ignore remaining wheel events in this scroll.\n              // See comment above for \"remaining wheel events in this scroll\" determination.\n              // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n              clearTimeout(timeout);\n              timeout = undefined;\n              if (recentWheelEvents.length >= 15) {\n                recentWheelEvents.shift(); // only store the last N events\n              }\n\n              const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n              const firstEvent = recentWheelEvents[0];\n              recentWheelEvents.push(newEvent);\n              if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n                // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n                recentWheelEvents.splice(0);\n              } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n                // We're at the end of the deceleration of a momentum scroll, so there's no need\n                // to wait for more events. Snap ASAP on the next tick.\n                // Also, because there's some remaining momentum we'll bias the snap in the\n                // direction of the ongoing scroll because it's better UX for the scroll to snap\n                // in the same direction as the scroll instead of reversing to snap.  Therefore,\n                // if it's already scrolled more than 20% in the current direction, keep going.\n                const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n                lastEventBeforeSnap = newEvent;\n                recentWheelEvents.splice(0);\n                timeout = nextTick(() => {\n                  swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n                }, 0); // no delay; move on next tick\n              }\n\n              if (!timeout) {\n                // if we get here, then we haven't detected the end of a momentum scroll, so\n                // we'll consider a scroll \"complete\" when there haven't been any wheel events\n                // for 500ms.\n                timeout = nextTick(() => {\n                  const snapToThreshold = 0.5;\n                  lastEventBeforeSnap = newEvent;\n                  recentWheelEvents.splice(0);\n                  swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n                }, 500);\n              }\n            }\n\n            // Emit event\n            if (!ignoreWheelEvents) emit('scroll', e);\n\n            // Stop autoplay\n            if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n            // Return page scroll on edge positions\n            if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n          }\n        }\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n        return false;\n      }\n      function events(method) {\n        let targetEl = swiper.el;\n        if (swiper.params.mousewheel.eventsTarget !== 'container') {\n          targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n        }\n        targetEl[method]('mouseenter', handleMouseEnter);\n        targetEl[method]('mouseleave', handleMouseLeave);\n        targetEl[method]('wheel', handle);\n      }\n      function enable() {\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.removeEventListener('wheel', handle);\n          return true;\n        }\n        if (swiper.mousewheel.enabled) return false;\n        events('addEventListener');\n        swiper.mousewheel.enabled = true;\n        return true;\n      }\n      function disable() {\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.addEventListener(event, handle);\n          return true;\n        }\n        if (!swiper.mousewheel.enabled) return false;\n        events('removeEventListener');\n        swiper.mousewheel.enabled = false;\n        return true;\n      }\n      on('init', () => {\n        if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n          disable();\n        }\n        if (swiper.params.mousewheel.enabled) enable();\n      });\n      on('destroy', () => {\n        if (swiper.params.cssMode) {\n          enable();\n        }\n        if (swiper.mousewheel.enabled) disable();\n      });\n      Object.assign(swiper.mousewheel, {\n        enable,\n        disable\n      });\n    }\n\n    function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n      if (swiper.params.createElements) {\n        Object.keys(checkProps).forEach(key => {\n          if (!params[key] && params.auto === true) {\n            let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n            if (!element) {\n              element = createElement('div', checkProps[key]);\n              element.className = checkProps[key];\n              swiper.el.append(element);\n            }\n            params[key] = element;\n            originalParams[key] = element;\n          }\n        });\n      }\n      return params;\n    }\n\n    function Navigation(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit\n      } = _ref;\n      extendParams({\n        navigation: {\n          nextEl: null,\n          prevEl: null,\n          hideOnClick: false,\n          disabledClass: 'swiper-button-disabled',\n          hiddenClass: 'swiper-button-hidden',\n          lockClass: 'swiper-button-lock',\n          navigationDisabledClass: 'swiper-navigation-disabled'\n        }\n      });\n      swiper.navigation = {\n        nextEl: null,\n        prevEl: null\n      };\n      const makeElementsArray = el => {\n        if (!Array.isArray(el)) el = [el].filter(e => !!e);\n        return el;\n      };\n      function getEl(el) {\n        let res;\n        if (el && typeof el === 'string' && swiper.isElement) {\n          res = swiper.el.shadowRoot.querySelector(el);\n          if (res) return res;\n        }\n        if (el) {\n          if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n          if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n            res = swiper.el.querySelector(el);\n          }\n        }\n        if (el && !res) return el;\n        // if (Array.isArray(res) && res.length === 1) res = res[0];\n        return res;\n      }\n      function toggleEl(el, disabled) {\n        const params = swiper.params.navigation;\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          if (subEl) {\n            subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n            if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n            if (swiper.params.watchOverflow && swiper.enabled) {\n              subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n            }\n          }\n        });\n      }\n      function update() {\n        // Update Navigation Buttons\n        const {\n          nextEl,\n          prevEl\n        } = swiper.navigation;\n        if (swiper.params.loop) {\n          toggleEl(prevEl, false);\n          toggleEl(nextEl, false);\n          return;\n        }\n        toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n        toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n      }\n      function onPrevClick(e) {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n        swiper.slidePrev();\n        emit('navigationPrev');\n      }\n      function onNextClick(e) {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n        swiper.slideNext();\n        emit('navigationNext');\n      }\n      function init() {\n        const params = swiper.params.navigation;\n        swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n          nextEl: 'swiper-button-next',\n          prevEl: 'swiper-button-prev'\n        });\n        if (!(params.nextEl || params.prevEl)) return;\n        let nextEl = getEl(params.nextEl);\n        let prevEl = getEl(params.prevEl);\n        Object.assign(swiper.navigation, {\n          nextEl,\n          prevEl\n        });\n        nextEl = makeElementsArray(nextEl);\n        prevEl = makeElementsArray(prevEl);\n        const initButton = (el, dir) => {\n          if (el) {\n            el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n          }\n          if (!swiper.enabled && el) {\n            el.classList.add(...params.lockClass.split(' '));\n          }\n        };\n        nextEl.forEach(el => initButton(el, 'next'));\n        prevEl.forEach(el => initButton(el, 'prev'));\n      }\n      function destroy() {\n        let {\n          nextEl,\n          prevEl\n        } = swiper.navigation;\n        nextEl = makeElementsArray(nextEl);\n        prevEl = makeElementsArray(prevEl);\n        const destroyButton = (el, dir) => {\n          el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n          el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n        };\n        nextEl.forEach(el => destroyButton(el, 'next'));\n        prevEl.forEach(el => destroyButton(el, 'prev'));\n      }\n      on('init', () => {\n        if (swiper.params.navigation.enabled === false) {\n          // eslint-disable-next-line\n          disable();\n        } else {\n          init();\n          update();\n        }\n      });\n      on('toEdge fromEdge lock unlock', () => {\n        update();\n      });\n      on('destroy', () => {\n        destroy();\n      });\n      on('enable disable', () => {\n        let {\n          nextEl,\n          prevEl\n        } = swiper.navigation;\n        nextEl = makeElementsArray(nextEl);\n        prevEl = makeElementsArray(prevEl);\n        [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n      });\n      on('click', (_s, e) => {\n        let {\n          nextEl,\n          prevEl\n        } = swiper.navigation;\n        nextEl = makeElementsArray(nextEl);\n        prevEl = makeElementsArray(prevEl);\n        const targetEl = e.target;\n        if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n          if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n          let isHidden;\n          if (nextEl.length) {\n            isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n          } else if (prevEl.length) {\n            isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n          }\n          if (isHidden === true) {\n            emit('navigationShow');\n          } else {\n            emit('navigationHide');\n          }\n          [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n        }\n      });\n      const enable = () => {\n        swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n        init();\n        update();\n      };\n      const disable = () => {\n        swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n        destroy();\n      };\n      Object.assign(swiper.navigation, {\n        enable,\n        disable,\n        update,\n        init,\n        destroy\n      });\n    }\n\n    function classesToSelector(classes) {\n      if (classes === void 0) {\n        classes = '';\n      }\n      return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n    }\n\n    function Pagination(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit\n      } = _ref;\n      const pfx = 'swiper-pagination';\n      extendParams({\n        pagination: {\n          el: null,\n          bulletElement: 'span',\n          clickable: false,\n          hideOnClick: false,\n          renderBullet: null,\n          renderProgressbar: null,\n          renderFraction: null,\n          renderCustom: null,\n          progressbarOpposite: false,\n          type: 'bullets',\n          // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n          dynamicBullets: false,\n          dynamicMainBullets: 1,\n          formatFractionCurrent: number => number,\n          formatFractionTotal: number => number,\n          bulletClass: `${pfx}-bullet`,\n          bulletActiveClass: `${pfx}-bullet-active`,\n          modifierClass: `${pfx}-`,\n          currentClass: `${pfx}-current`,\n          totalClass: `${pfx}-total`,\n          hiddenClass: `${pfx}-hidden`,\n          progressbarFillClass: `${pfx}-progressbar-fill`,\n          progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n          clickableClass: `${pfx}-clickable`,\n          lockClass: `${pfx}-lock`,\n          horizontalClass: `${pfx}-horizontal`,\n          verticalClass: `${pfx}-vertical`,\n          paginationDisabledClass: `${pfx}-disabled`\n        }\n      });\n      swiper.pagination = {\n        el: null,\n        bullets: []\n      };\n      let bulletSize;\n      let dynamicBulletIndex = 0;\n      const makeElementsArray = el => {\n        if (!Array.isArray(el)) el = [el].filter(e => !!e);\n        return el;\n      };\n      function isPaginationDisabled() {\n        return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n      }\n      function setSideBullets(bulletEl, position) {\n        const {\n          bulletActiveClass\n        } = swiper.params.pagination;\n        if (!bulletEl) return;\n        bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n        if (bulletEl) {\n          bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n          bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n          if (bulletEl) {\n            bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n          }\n        }\n      }\n      function onBulletClick(e) {\n        const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n        if (!bulletEl) {\n          return;\n        }\n        e.preventDefault();\n        const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) {\n          if (swiper.realIndex === index) return;\n          const newSlideIndex = swiper.getSlideIndexByData(index);\n          const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n          if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n            swiper.loopFix({\n              direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n              activeSlideIndex: newSlideIndex,\n              slideTo: false\n            });\n          }\n          swiper.slideToLoop(index);\n        } else {\n          swiper.slideTo(index);\n        }\n      }\n      function update() {\n        // Render || Update Pagination bullets/items\n        const rtl = swiper.rtl;\n        const params = swiper.params.pagination;\n        if (isPaginationDisabled()) return;\n        let el = swiper.pagination.el;\n        el = makeElementsArray(el);\n        // Current/Total\n        let current;\n        let previousIndex;\n        const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        if (swiper.params.loop) {\n          previousIndex = swiper.previousRealIndex || 0;\n          current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n        } else if (typeof swiper.snapIndex !== 'undefined') {\n          current = swiper.snapIndex;\n          previousIndex = swiper.previousSnapIndex;\n        } else {\n          previousIndex = swiper.previousIndex || 0;\n          current = swiper.activeIndex || 0;\n        }\n        // Types\n        if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n          const bullets = swiper.pagination.bullets;\n          let firstIndex;\n          let lastIndex;\n          let midIndex;\n          if (params.dynamicBullets) {\n            bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n            el.forEach(subEl => {\n              subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n            });\n            if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n              dynamicBulletIndex += current - (previousIndex || 0);\n              if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n                dynamicBulletIndex = params.dynamicMainBullets - 1;\n              } else if (dynamicBulletIndex < 0) {\n                dynamicBulletIndex = 0;\n              }\n            }\n            firstIndex = Math.max(current - dynamicBulletIndex, 0);\n            lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n            midIndex = (lastIndex + firstIndex) / 2;\n          }\n          bullets.forEach(bulletEl => {\n            const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n            bulletEl.classList.remove(...classesToRemove);\n          });\n          if (el.length > 1) {\n            bullets.forEach(bullet => {\n              const bulletIndex = elementIndex(bullet);\n              if (bulletIndex === current) {\n                bullet.classList.add(...params.bulletActiveClass.split(' '));\n              } else if (swiper.isElement) {\n                bullet.setAttribute('part', 'bullet');\n              }\n              if (params.dynamicBullets) {\n                if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n                  bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n                }\n                if (bulletIndex === firstIndex) {\n                  setSideBullets(bullet, 'prev');\n                }\n                if (bulletIndex === lastIndex) {\n                  setSideBullets(bullet, 'next');\n                }\n              }\n            });\n          } else {\n            const bullet = bullets[current];\n            if (bullet) {\n              bullet.classList.add(...params.bulletActiveClass.split(' '));\n            }\n            if (swiper.isElement) {\n              bullets.forEach((bulletEl, bulletIndex) => {\n                bulletEl.setAttribute('part', bulletIndex === current ? 'bullet-active' : 'bullet');\n              });\n            }\n            if (params.dynamicBullets) {\n              const firstDisplayedBullet = bullets[firstIndex];\n              const lastDisplayedBullet = bullets[lastIndex];\n              for (let i = firstIndex; i <= lastIndex; i += 1) {\n                if (bullets[i]) {\n                  bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n                }\n              }\n              setSideBullets(firstDisplayedBullet, 'prev');\n              setSideBullets(lastDisplayedBullet, 'next');\n            }\n          }\n          if (params.dynamicBullets) {\n            const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n            const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n            const offsetProp = rtl ? 'right' : 'left';\n            bullets.forEach(bullet => {\n              bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n            });\n          }\n        }\n        el.forEach((subEl, subElIndex) => {\n          if (params.type === 'fraction') {\n            subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n              fractionEl.textContent = params.formatFractionCurrent(current + 1);\n            });\n            subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n              totalEl.textContent = params.formatFractionTotal(total);\n            });\n          }\n          if (params.type === 'progressbar') {\n            let progressbarDirection;\n            if (params.progressbarOpposite) {\n              progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n            } else {\n              progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n            }\n            const scale = (current + 1) / total;\n            let scaleX = 1;\n            let scaleY = 1;\n            if (progressbarDirection === 'horizontal') {\n              scaleX = scale;\n            } else {\n              scaleY = scale;\n            }\n            subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n              progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n              progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n            });\n          }\n          if (params.type === 'custom' && params.renderCustom) {\n            subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n            if (subElIndex === 0) emit('paginationRender', subEl);\n          } else {\n            if (subElIndex === 0) emit('paginationRender', subEl);\n            emit('paginationUpdate', subEl);\n          }\n          if (swiper.params.watchOverflow && swiper.enabled) {\n            subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n          }\n        });\n      }\n      function render() {\n        // Render Container\n        const params = swiper.params.pagination;\n        if (isPaginationDisabled()) return;\n        const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        let el = swiper.pagination.el;\n        el = makeElementsArray(el);\n        let paginationHTML = '';\n        if (params.type === 'bullets') {\n          let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n          if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n            numberOfBullets = slidesLength;\n          }\n          for (let i = 0; i < numberOfBullets; i += 1) {\n            if (params.renderBullet) {\n              paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n            } else {\n              // prettier-ignore\n              paginationHTML += `<${params.bulletElement} ${swiper.isElement ? 'part=\"bullet\"' : ''} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n            }\n          }\n        }\n        if (params.type === 'fraction') {\n          if (params.renderFraction) {\n            paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n          } else {\n            paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n          }\n        }\n        if (params.type === 'progressbar') {\n          if (params.renderProgressbar) {\n            paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n          } else {\n            paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n          }\n        }\n        swiper.pagination.bullets = [];\n        el.forEach(subEl => {\n          if (params.type !== 'custom') {\n            subEl.innerHTML = paginationHTML || '';\n          }\n          if (params.type === 'bullets') {\n            swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n          }\n        });\n        if (params.type !== 'custom') {\n          emit('paginationRender', el[0]);\n        }\n      }\n      function init() {\n        swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n          el: 'swiper-pagination'\n        });\n        const params = swiper.params.pagination;\n        if (!params.el) return;\n        let el;\n        if (typeof params.el === 'string' && swiper.isElement) {\n          el = swiper.el.shadowRoot.querySelector(params.el);\n        }\n        if (!el && typeof params.el === 'string') {\n          el = [...document.querySelectorAll(params.el)];\n        }\n        if (!el) {\n          el = params.el;\n        }\n        if (!el || el.length === 0) return;\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n          el = [...swiper.el.querySelectorAll(params.el)];\n          // check if it belongs to another nested Swiper\n          if (el.length > 1) {\n            el = el.filter(subEl => {\n              if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n              return true;\n            })[0];\n          }\n        }\n        if (Array.isArray(el) && el.length === 1) el = el[0];\n        Object.assign(swiper.pagination, {\n          el\n        });\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          if (params.type === 'bullets' && params.clickable) {\n            subEl.classList.add(params.clickableClass);\n          }\n          subEl.classList.add(params.modifierClass + params.type);\n          subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n          if (params.type === 'bullets' && params.dynamicBullets) {\n            subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n            dynamicBulletIndex = 0;\n            if (params.dynamicMainBullets < 1) {\n              params.dynamicMainBullets = 1;\n            }\n          }\n          if (params.type === 'progressbar' && params.progressbarOpposite) {\n            subEl.classList.add(params.progressbarOppositeClass);\n          }\n          if (params.clickable) {\n            subEl.addEventListener('click', onBulletClick);\n          }\n          if (!swiper.enabled) {\n            subEl.classList.add(params.lockClass);\n          }\n        });\n      }\n      function destroy() {\n        const params = swiper.params.pagination;\n        if (isPaginationDisabled()) return;\n        let el = swiper.pagination.el;\n        if (el) {\n          el = makeElementsArray(el);\n          el.forEach(subEl => {\n            subEl.classList.remove(params.hiddenClass);\n            subEl.classList.remove(params.modifierClass + params.type);\n            subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n            if (params.clickable) {\n              subEl.removeEventListener('click', onBulletClick);\n            }\n          });\n        }\n        if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n      }\n      on('changeDirection', () => {\n        if (!swiper.pagination || !swiper.pagination.el) return;\n        const params = swiper.params.pagination;\n        let {\n          el\n        } = swiper.pagination;\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.classList.remove(params.horizontalClass, params.verticalClass);\n          subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        });\n      });\n      on('init', () => {\n        if (swiper.params.pagination.enabled === false) {\n          // eslint-disable-next-line\n          disable();\n        } else {\n          init();\n          render();\n          update();\n        }\n      });\n      on('activeIndexChange', () => {\n        if (typeof swiper.snapIndex === 'undefined') {\n          update();\n        }\n      });\n      on('snapIndexChange', () => {\n        update();\n      });\n      on('snapGridLengthChange', () => {\n        render();\n        update();\n      });\n      on('destroy', () => {\n        destroy();\n      });\n      on('enable disable', () => {\n        let {\n          el\n        } = swiper.pagination;\n        if (el) {\n          el = makeElementsArray(el);\n          el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n        }\n      });\n      on('lock unlock', () => {\n        update();\n      });\n      on('click', (_s, e) => {\n        const targetEl = e.target;\n        let {\n          el\n        } = swiper.pagination;\n        if (!Array.isArray(el)) el = [el].filter(element => !!element);\n        if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n          if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n          const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n          if (isHidden === true) {\n            emit('paginationShow');\n          } else {\n            emit('paginationHide');\n          }\n          el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n        }\n      });\n      const enable = () => {\n        swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n        let {\n          el\n        } = swiper.pagination;\n        if (el) {\n          el = makeElementsArray(el);\n          el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n        }\n        init();\n        render();\n        update();\n      };\n      const disable = () => {\n        swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n        let {\n          el\n        } = swiper.pagination;\n        if (el) {\n          el = makeElementsArray(el);\n          el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n        }\n        destroy();\n      };\n      Object.assign(swiper.pagination, {\n        enable,\n        disable,\n        render,\n        update,\n        init,\n        destroy\n      });\n    }\n\n    function Scrollbar(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit\n      } = _ref;\n      const document = getDocument();\n      let isTouched = false;\n      let timeout = null;\n      let dragTimeout = null;\n      let dragStartPos;\n      let dragSize;\n      let trackSize;\n      let divider;\n      extendParams({\n        scrollbar: {\n          el: null,\n          dragSize: 'auto',\n          hide: false,\n          draggable: false,\n          snapOnRelease: true,\n          lockClass: 'swiper-scrollbar-lock',\n          dragClass: 'swiper-scrollbar-drag',\n          scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n          horizontalClass: `swiper-scrollbar-horizontal`,\n          verticalClass: `swiper-scrollbar-vertical`\n        }\n      });\n      swiper.scrollbar = {\n        el: null,\n        dragEl: null\n      };\n      function setTranslate() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        const {\n          scrollbar,\n          rtlTranslate: rtl\n        } = swiper;\n        const {\n          dragEl,\n          el\n        } = scrollbar;\n        const params = swiper.params.scrollbar;\n        const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n        let newSize = dragSize;\n        let newPos = (trackSize - dragSize) * progress;\n        if (rtl) {\n          newPos = -newPos;\n          if (newPos > 0) {\n            newSize = dragSize - newPos;\n            newPos = 0;\n          } else if (-newPos + dragSize > trackSize) {\n            newSize = trackSize + newPos;\n          }\n        } else if (newPos < 0) {\n          newSize = dragSize + newPos;\n          newPos = 0;\n        } else if (newPos + dragSize > trackSize) {\n          newSize = trackSize - newPos;\n        }\n        if (swiper.isHorizontal()) {\n          dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n          dragEl.style.width = `${newSize}px`;\n        } else {\n          dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n          dragEl.style.height = `${newSize}px`;\n        }\n        if (params.hide) {\n          clearTimeout(timeout);\n          el.style.opacity = 1;\n          timeout = setTimeout(() => {\n            el.style.opacity = 0;\n            el.style.transitionDuration = '400ms';\n          }, 1000);\n        }\n      }\n      function setTransition(duration) {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n      }\n      function updateSize() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        const {\n          scrollbar\n        } = swiper;\n        const {\n          dragEl,\n          el\n        } = scrollbar;\n        dragEl.style.width = '';\n        dragEl.style.height = '';\n        trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n        divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n        if (swiper.params.scrollbar.dragSize === 'auto') {\n          dragSize = trackSize * divider;\n        } else {\n          dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n        }\n        if (swiper.isHorizontal()) {\n          dragEl.style.width = `${dragSize}px`;\n        } else {\n          dragEl.style.height = `${dragSize}px`;\n        }\n        if (divider >= 1) {\n          el.style.display = 'none';\n        } else {\n          el.style.display = '';\n        }\n        if (swiper.params.scrollbar.hide) {\n          el.style.opacity = 0;\n        }\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n        }\n      }\n      function getPointerPosition(e) {\n        return swiper.isHorizontal() ? e.clientX : e.clientY;\n      }\n      function setDragPosition(e) {\n        const {\n          scrollbar,\n          rtlTranslate: rtl\n        } = swiper;\n        const {\n          el\n        } = scrollbar;\n        let positionRatio;\n        positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n        positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n        if (rtl) {\n          positionRatio = 1 - positionRatio;\n        }\n        const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n        swiper.updateProgress(position);\n        swiper.setTranslate(position);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n      }\n      function onDragStart(e) {\n        const params = swiper.params.scrollbar;\n        const {\n          scrollbar,\n          wrapperEl\n        } = swiper;\n        const {\n          el,\n          dragEl\n        } = scrollbar;\n        isTouched = true;\n        dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n        e.preventDefault();\n        e.stopPropagation();\n        wrapperEl.style.transitionDuration = '100ms';\n        dragEl.style.transitionDuration = '100ms';\n        setDragPosition(e);\n        clearTimeout(dragTimeout);\n        el.style.transitionDuration = '0ms';\n        if (params.hide) {\n          el.style.opacity = 1;\n        }\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n        }\n        emit('scrollbarDragStart', e);\n      }\n      function onDragMove(e) {\n        const {\n          scrollbar,\n          wrapperEl\n        } = swiper;\n        const {\n          el,\n          dragEl\n        } = scrollbar;\n        if (!isTouched) return;\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n        setDragPosition(e);\n        wrapperEl.style.transitionDuration = '0ms';\n        el.style.transitionDuration = '0ms';\n        dragEl.style.transitionDuration = '0ms';\n        emit('scrollbarDragMove', e);\n      }\n      function onDragEnd(e) {\n        const params = swiper.params.scrollbar;\n        const {\n          scrollbar,\n          wrapperEl\n        } = swiper;\n        const {\n          el\n        } = scrollbar;\n        if (!isTouched) return;\n        isTouched = false;\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.style['scroll-snap-type'] = '';\n          wrapperEl.style.transitionDuration = '';\n        }\n        if (params.hide) {\n          clearTimeout(dragTimeout);\n          dragTimeout = nextTick(() => {\n            el.style.opacity = 0;\n            el.style.transitionDuration = '400ms';\n          }, 1000);\n        }\n        emit('scrollbarDragEnd', e);\n        if (params.snapOnRelease) {\n          swiper.slideToClosest();\n        }\n      }\n      function events(method) {\n        const {\n          scrollbar,\n          params\n        } = swiper;\n        const el = scrollbar.el;\n        if (!el) return;\n        const target = el;\n        const activeListener = params.passiveListeners ? {\n          passive: false,\n          capture: false\n        } : false;\n        const passiveListener = params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        if (!target) return;\n        const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n        target[eventMethod]('pointerdown', onDragStart, activeListener);\n        document[eventMethod]('pointermove', onDragMove, activeListener);\n        document[eventMethod]('pointerup', onDragEnd, passiveListener);\n      }\n      function enableDraggable() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        events('on');\n      }\n      function disableDraggable() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        events('off');\n      }\n      function init() {\n        const {\n          scrollbar,\n          el: swiperEl\n        } = swiper;\n        swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n          el: 'swiper-scrollbar'\n        });\n        const params = swiper.params.scrollbar;\n        if (!params.el) return;\n        let el;\n        if (typeof params.el === 'string' && swiper.isElement) {\n          el = swiper.el.shadowRoot.querySelector(params.el);\n        }\n        if (!el && typeof params.el === 'string') {\n          el = document.querySelectorAll(params.el);\n        } else if (!el) {\n          el = params.el;\n        }\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n          el = swiperEl.querySelector(params.el);\n        }\n        if (el.length > 0) el = el[0];\n        el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        let dragEl;\n        if (el) {\n          dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n          if (!dragEl) {\n            dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n            el.append(dragEl);\n          }\n        }\n        Object.assign(scrollbar, {\n          el,\n          dragEl\n        });\n        if (params.draggable) {\n          enableDraggable();\n        }\n        if (el) {\n          el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n        }\n      }\n      function destroy() {\n        const params = swiper.params.scrollbar;\n        const el = swiper.scrollbar.el;\n        if (el) {\n          el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        }\n        disableDraggable();\n      }\n      on('init', () => {\n        if (swiper.params.scrollbar.enabled === false) {\n          // eslint-disable-next-line\n          disable();\n        } else {\n          init();\n          updateSize();\n          setTranslate();\n        }\n      });\n      on('update resize observerUpdate lock unlock', () => {\n        updateSize();\n      });\n      on('setTranslate', () => {\n        setTranslate();\n      });\n      on('setTransition', (_s, duration) => {\n        setTransition(duration);\n      });\n      on('enable disable', () => {\n        const {\n          el\n        } = swiper.scrollbar;\n        if (el) {\n          el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n        }\n      });\n      on('destroy', () => {\n        destroy();\n      });\n      const enable = () => {\n        swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n        if (swiper.scrollbar.el) {\n          swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n        }\n        init();\n        updateSize();\n        setTranslate();\n      };\n      const disable = () => {\n        swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n        if (swiper.scrollbar.el) {\n          swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n        }\n        destroy();\n      };\n      Object.assign(swiper.scrollbar, {\n        enable,\n        disable,\n        updateSize,\n        setTranslate,\n        init,\n        destroy\n      });\n    }\n\n    function Parallax(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        parallax: {\n          enabled: false\n        }\n      });\n      const setTransform = (el, progress) => {\n        const {\n          rtl\n        } = swiper;\n        const rtlFactor = rtl ? -1 : 1;\n        const p = el.getAttribute('data-swiper-parallax') || '0';\n        let x = el.getAttribute('data-swiper-parallax-x');\n        let y = el.getAttribute('data-swiper-parallax-y');\n        const scale = el.getAttribute('data-swiper-parallax-scale');\n        const opacity = el.getAttribute('data-swiper-parallax-opacity');\n        const rotate = el.getAttribute('data-swiper-parallax-rotate');\n        if (x || y) {\n          x = x || '0';\n          y = y || '0';\n        } else if (swiper.isHorizontal()) {\n          x = p;\n          y = '0';\n        } else {\n          y = p;\n          x = '0';\n        }\n        if (x.indexOf('%') >= 0) {\n          x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n        } else {\n          x = `${x * progress * rtlFactor}px`;\n        }\n        if (y.indexOf('%') >= 0) {\n          y = `${parseInt(y, 10) * progress}%`;\n        } else {\n          y = `${y * progress}px`;\n        }\n        if (typeof opacity !== 'undefined' && opacity !== null) {\n          const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n          el.style.opacity = currentOpacity;\n        }\n        let transform = `translate3d(${x}, ${y}, 0px)`;\n        if (typeof scale !== 'undefined' && scale !== null) {\n          const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n          transform += ` scale(${currentScale})`;\n        }\n        if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n          const currentRotate = rotate * progress * -1;\n          transform += ` rotate(${currentRotate}deg)`;\n        }\n        el.style.transform = transform;\n      };\n      const setTranslate = () => {\n        const {\n          el,\n          slides,\n          progress,\n          snapGrid\n        } = swiper;\n        elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n          setTransform(subEl, progress);\n        });\n        slides.forEach((slideEl, slideIndex) => {\n          let slideProgress = slideEl.progress;\n          if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n            slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n          }\n          slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n          slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n            setTransform(subEl, slideProgress);\n          });\n        });\n      };\n      const setTransition = function (duration) {\n        if (duration === void 0) {\n          duration = swiper.params.speed;\n        }\n        const {\n          el\n        } = swiper;\n        el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n          let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n          if (duration === 0) parallaxDuration = 0;\n          parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n        });\n      };\n      on('beforeInit', () => {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n      });\n      on('init', () => {\n        if (!swiper.params.parallax.enabled) return;\n        setTranslate();\n      });\n      on('setTranslate', () => {\n        if (!swiper.params.parallax.enabled) return;\n        setTranslate();\n      });\n      on('setTransition', (_swiper, duration) => {\n        if (!swiper.params.parallax.enabled) return;\n        setTransition(duration);\n      });\n    }\n\n    function Zoom(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit\n      } = _ref;\n      const window = getWindow();\n      extendParams({\n        zoom: {\n          enabled: false,\n          maxRatio: 3,\n          minRatio: 1,\n          toggle: true,\n          containerClass: 'swiper-zoom-container',\n          zoomedSlideClass: 'swiper-slide-zoomed'\n        }\n      });\n      swiper.zoom = {\n        enabled: false\n      };\n      let currentScale = 1;\n      let isScaling = false;\n      let fakeGestureTouched;\n      let fakeGestureMoved;\n      const evCache = [];\n      const gesture = {\n        originX: 0,\n        originY: 0,\n        slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        imageEl: undefined,\n        imageWrapEl: undefined,\n        maxRatio: 3\n      };\n      const image = {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {}\n      };\n      const velocity = {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined\n      };\n      let scale = 1;\n      Object.defineProperty(swiper.zoom, 'scale', {\n        get() {\n          return scale;\n        },\n        set(value) {\n          if (scale !== value) {\n            const imageEl = gesture.imageEl;\n            const slideEl = gesture.slideEl;\n            emit('zoomChange', value, imageEl, slideEl);\n          }\n          scale = value;\n        }\n      });\n      function getDistanceBetweenTouches() {\n        if (evCache.length < 2) return 1;\n        const x1 = evCache[0].pageX;\n        const y1 = evCache[0].pageY;\n        const x2 = evCache[1].pageX;\n        const y2 = evCache[1].pageY;\n        const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n        return distance;\n      }\n      function getScaleOrigin() {\n        if (evCache.length < 2) return {\n          x: null,\n          y: null\n        };\n        const box = gesture.imageEl.getBoundingClientRect();\n        return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n      }\n      function getSlideSelector() {\n        return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n      }\n      function eventWithinSlide(e) {\n        const slideSelector = getSlideSelector();\n        if (e.target.matches(slideSelector)) return true;\n        if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n        return false;\n      }\n      function eventWithinZoomContainer(e) {\n        const selector = `.${swiper.params.zoom.containerClass}`;\n        if (e.target.matches(selector)) return true;\n        if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n        return false;\n      }\n\n      // Events\n      function onGestureStart(e) {\n        if (e.pointerType === 'mouse') {\n          evCache.splice(0, evCache.length);\n        }\n        if (!eventWithinSlide(e)) return;\n        const params = swiper.params.zoom;\n        fakeGestureTouched = false;\n        fakeGestureMoved = false;\n        evCache.push(e);\n        if (evCache.length < 2) {\n          return;\n        }\n        fakeGestureTouched = true;\n        gesture.scaleStart = getDistanceBetweenTouches();\n        if (!gesture.slideEl) {\n          gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n          if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n          let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n          if (imageEl) {\n            imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n          }\n          gesture.imageEl = imageEl;\n          if (imageEl) {\n            gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n          } else {\n            gesture.imageWrapEl = undefined;\n          }\n          if (!gesture.imageWrapEl) {\n            gesture.imageEl = undefined;\n            return;\n          }\n          gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n        }\n        if (gesture.imageEl) {\n          const [originX, originY] = getScaleOrigin();\n          gesture.originX = originX;\n          gesture.originY = originY;\n          gesture.imageEl.style.transitionDuration = '0ms';\n        }\n        isScaling = true;\n      }\n      function onGestureChange(e) {\n        if (!eventWithinSlide(e)) return;\n        const params = swiper.params.zoom;\n        const zoom = swiper.zoom;\n        const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n        if (pointerIndex >= 0) evCache[pointerIndex] = e;\n        if (evCache.length < 2) {\n          return;\n        }\n        fakeGestureMoved = true;\n        gesture.scaleMove = getDistanceBetweenTouches();\n        if (!gesture.imageEl) {\n          return;\n        }\n        zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n        if (zoom.scale > gesture.maxRatio) {\n          zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n        }\n        if (zoom.scale < params.minRatio) {\n          zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n        }\n        gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n      }\n      function onGestureEnd(e) {\n        if (!eventWithinSlide(e)) return;\n        if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n        const params = swiper.params.zoom;\n        const zoom = swiper.zoom;\n        const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n        if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n        if (!fakeGestureTouched || !fakeGestureMoved) {\n          return;\n        }\n        fakeGestureTouched = false;\n        fakeGestureMoved = false;\n        if (!gesture.imageEl) return;\n        zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n        gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n        currentScale = zoom.scale;\n        isScaling = false;\n        if (zoom.scale > 1 && gesture.slideEl) {\n          gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n        } else if (zoom.scale <= 1 && gesture.slideEl) {\n          gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n        }\n        if (zoom.scale === 1) {\n          gesture.originX = 0;\n          gesture.originY = 0;\n          gesture.slideEl = undefined;\n        }\n      }\n      function onTouchStart(e) {\n        const device = swiper.device;\n        if (!gesture.imageEl) return;\n        if (image.isTouched) return;\n        if (device.android && e.cancelable) e.preventDefault();\n        image.isTouched = true;\n        const event = evCache.length > 0 ? evCache[0] : e;\n        image.touchesStart.x = event.pageX;\n        image.touchesStart.y = event.pageY;\n      }\n      function onTouchMove(e) {\n        if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n        const zoom = swiper.zoom;\n        if (!gesture.imageEl) return;\n        if (!image.isTouched || !gesture.slideEl) return;\n        if (!image.isMoved) {\n          image.width = gesture.imageEl.offsetWidth;\n          image.height = gesture.imageEl.offsetHeight;\n          image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n          image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n          gesture.slideWidth = gesture.slideEl.offsetWidth;\n          gesture.slideHeight = gesture.slideEl.offsetHeight;\n          gesture.imageWrapEl.style.transitionDuration = '0ms';\n        }\n        // Define if we need image drag\n        const scaledWidth = image.width * zoom.scale;\n        const scaledHeight = image.height * zoom.scale;\n        if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n        image.maxY = -image.minY;\n        image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n        image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n        const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n        if (touchesDiff > 5) {\n          swiper.allowClick = false;\n        }\n        if (!image.isMoved && !isScaling) {\n          if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n            image.isTouched = false;\n            return;\n          }\n          if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n            image.isTouched = false;\n            return;\n          }\n        }\n        if (e.cancelable) {\n          e.preventDefault();\n        }\n        e.stopPropagation();\n        image.isMoved = true;\n        const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n        const {\n          originX,\n          originY\n        } = gesture;\n        image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n        image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n        if (image.currentX < image.minX) {\n          image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n        }\n        if (image.currentX > image.maxX) {\n          image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n        }\n        if (image.currentY < image.minY) {\n          image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n        }\n        if (image.currentY > image.maxY) {\n          image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n        }\n\n        // Velocity\n        if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n        if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n        if (!velocity.prevTime) velocity.prevTime = Date.now();\n        velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n        velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n        if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n        if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n        velocity.prevPositionX = image.touchesCurrent.x;\n        velocity.prevPositionY = image.touchesCurrent.y;\n        velocity.prevTime = Date.now();\n        gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n      }\n      function onTouchEnd() {\n        const zoom = swiper.zoom;\n        if (!gesture.imageEl) return;\n        if (!image.isTouched || !image.isMoved) {\n          image.isTouched = false;\n          image.isMoved = false;\n          return;\n        }\n        image.isTouched = false;\n        image.isMoved = false;\n        let momentumDurationX = 300;\n        let momentumDurationY = 300;\n        const momentumDistanceX = velocity.x * momentumDurationX;\n        const newPositionX = image.currentX + momentumDistanceX;\n        const momentumDistanceY = velocity.y * momentumDurationY;\n        const newPositionY = image.currentY + momentumDistanceY;\n\n        // Fix duration\n        if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n        if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n        const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n        image.currentX = newPositionX;\n        image.currentY = newPositionY;\n        // Define if we need image drag\n        const scaledWidth = image.width * zoom.scale;\n        const scaledHeight = image.height * zoom.scale;\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n        image.maxY = -image.minY;\n        image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n        image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n        gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n        gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n      }\n      function onTransitionEnd() {\n        const zoom = swiper.zoom;\n        if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n          if (gesture.imageEl) {\n            gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n          }\n          if (gesture.imageWrapEl) {\n            gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n          }\n          gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n          zoom.scale = 1;\n          currentScale = 1;\n          gesture.slideEl = undefined;\n          gesture.imageEl = undefined;\n          gesture.imageWrapEl = undefined;\n          gesture.originX = 0;\n          gesture.originY = 0;\n        }\n      }\n      function zoomIn(e) {\n        const zoom = swiper.zoom;\n        const params = swiper.params.zoom;\n        if (!gesture.slideEl) {\n          if (e && e.target) {\n            gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n          }\n          if (!gesture.slideEl) {\n            if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n              gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n            } else {\n              gesture.slideEl = swiper.slides[swiper.activeIndex];\n            }\n          }\n          let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n          if (imageEl) {\n            imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n          }\n          gesture.imageEl = imageEl;\n          if (imageEl) {\n            gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n          } else {\n            gesture.imageWrapEl = undefined;\n          }\n        }\n        if (!gesture.imageEl || !gesture.imageWrapEl) return;\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.style.overflow = 'hidden';\n          swiper.wrapperEl.style.touchAction = 'none';\n        }\n        gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n        let touchX;\n        let touchY;\n        let offsetX;\n        let offsetY;\n        let diffX;\n        let diffY;\n        let translateX;\n        let translateY;\n        let imageWidth;\n        let imageHeight;\n        let scaledWidth;\n        let scaledHeight;\n        let translateMinX;\n        let translateMinY;\n        let translateMaxX;\n        let translateMaxY;\n        let slideWidth;\n        let slideHeight;\n        if (typeof image.touchesStart.x === 'undefined' && e) {\n          touchX = e.pageX;\n          touchY = e.pageY;\n        } else {\n          touchX = image.touchesStart.x;\n          touchY = image.touchesStart.y;\n        }\n        const forceZoomRatio = typeof e === 'number' ? e : null;\n        if (currentScale === 1 && forceZoomRatio) {\n          touchX = undefined;\n          touchY = undefined;\n        }\n        zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n        currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n        if (e && !(currentScale === 1 && forceZoomRatio)) {\n          slideWidth = gesture.slideEl.offsetWidth;\n          slideHeight = gesture.slideEl.offsetHeight;\n          offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n          offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n          diffX = offsetX + slideWidth / 2 - touchX;\n          diffY = offsetY + slideHeight / 2 - touchY;\n          imageWidth = gesture.imageEl.offsetWidth;\n          imageHeight = gesture.imageEl.offsetHeight;\n          scaledWidth = imageWidth * zoom.scale;\n          scaledHeight = imageHeight * zoom.scale;\n          translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n          translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n          translateMaxX = -translateMinX;\n          translateMaxY = -translateMinY;\n          translateX = diffX * zoom.scale;\n          translateY = diffY * zoom.scale;\n          if (translateX < translateMinX) {\n            translateX = translateMinX;\n          }\n          if (translateX > translateMaxX) {\n            translateX = translateMaxX;\n          }\n          if (translateY < translateMinY) {\n            translateY = translateMinY;\n          }\n          if (translateY > translateMaxY) {\n            translateY = translateMaxY;\n          }\n        } else {\n          translateX = 0;\n          translateY = 0;\n        }\n        if (forceZoomRatio && zoom.scale === 1) {\n          gesture.originX = 0;\n          gesture.originY = 0;\n        }\n        gesture.imageWrapEl.style.transitionDuration = '300ms';\n        gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n        gesture.imageEl.style.transitionDuration = '300ms';\n        gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n      }\n      function zoomOut() {\n        const zoom = swiper.zoom;\n        const params = swiper.params.zoom;\n        if (!gesture.slideEl) {\n          if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n            gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n          } else {\n            gesture.slideEl = swiper.slides[swiper.activeIndex];\n          }\n          let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n          if (imageEl) {\n            imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n          }\n          gesture.imageEl = imageEl;\n          if (imageEl) {\n            gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n          } else {\n            gesture.imageWrapEl = undefined;\n          }\n        }\n        if (!gesture.imageEl || !gesture.imageWrapEl) return;\n        if (swiper.params.cssMode) {\n          swiper.wrapperEl.style.overflow = '';\n          swiper.wrapperEl.style.touchAction = '';\n        }\n        zoom.scale = 1;\n        currentScale = 1;\n        gesture.imageWrapEl.style.transitionDuration = '300ms';\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n        gesture.imageEl.style.transitionDuration = '300ms';\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n        gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n        gesture.slideEl = undefined;\n        gesture.originX = 0;\n        gesture.originY = 0;\n      }\n\n      // Toggle Zoom\n      function zoomToggle(e) {\n        const zoom = swiper.zoom;\n        if (zoom.scale && zoom.scale !== 1) {\n          // Zoom Out\n          zoomOut();\n        } else {\n          // Zoom In\n          zoomIn(e);\n        }\n      }\n      function getListeners() {\n        const passiveListener = swiper.params.passiveListeners ? {\n          passive: true,\n          capture: false\n        } : false;\n        const activeListenerWithCapture = swiper.params.passiveListeners ? {\n          passive: false,\n          capture: true\n        } : true;\n        return {\n          passiveListener,\n          activeListenerWithCapture\n        };\n      }\n\n      // Attach/Detach Events\n      function enable() {\n        const zoom = swiper.zoom;\n        if (zoom.enabled) return;\n        zoom.enabled = true;\n        const {\n          passiveListener,\n          activeListenerWithCapture\n        } = getListeners();\n\n        // Scale image\n        swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n        swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n        ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n          swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n        });\n\n        // Move image\n        swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n      }\n      function disable() {\n        const zoom = swiper.zoom;\n        if (!zoom.enabled) return;\n        zoom.enabled = false;\n        const {\n          passiveListener,\n          activeListenerWithCapture\n        } = getListeners();\n\n        // Scale image\n        swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n        swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n        ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n          swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n        });\n\n        // Move image\n        swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n      }\n      on('init', () => {\n        if (swiper.params.zoom.enabled) {\n          enable();\n        }\n      });\n      on('destroy', () => {\n        disable();\n      });\n      on('touchStart', (_s, e) => {\n        if (!swiper.zoom.enabled) return;\n        onTouchStart(e);\n      });\n      on('touchEnd', (_s, e) => {\n        if (!swiper.zoom.enabled) return;\n        onTouchEnd();\n      });\n      on('doubleTap', (_s, e) => {\n        if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n          zoomToggle(e);\n        }\n      });\n      on('transitionEnd', () => {\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n          onTransitionEnd();\n        }\n      });\n      on('slideChange', () => {\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n          onTransitionEnd();\n        }\n      });\n      Object.assign(swiper.zoom, {\n        enable,\n        disable,\n        in: zoomIn,\n        out: zoomOut,\n        toggle: zoomToggle\n      });\n    }\n\n    /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n    function Controller(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        controller: {\n          control: undefined,\n          inverse: false,\n          by: 'slide' // or 'container'\n        }\n      });\n\n      swiper.controller = {\n        control: undefined\n      };\n      function LinearSpline(x, y) {\n        const binarySearch = function search() {\n          let maxIndex;\n          let minIndex;\n          let guess;\n          return (array, val) => {\n            minIndex = -1;\n            maxIndex = array.length;\n            while (maxIndex - minIndex > 1) {\n              guess = maxIndex + minIndex >> 1;\n              if (array[guess] <= val) {\n                minIndex = guess;\n              } else {\n                maxIndex = guess;\n              }\n            }\n            return maxIndex;\n          };\n        }();\n        this.x = x;\n        this.y = y;\n        this.lastIndex = x.length - 1;\n        // Given an x value (x2), return the expected y2 value:\n        // (x1,y1) is the known point before given value,\n        // (x3,y3) is the known point after given value.\n        let i1;\n        let i3;\n        this.interpolate = function interpolate(x2) {\n          if (!x2) return 0;\n\n          // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n          i3 = binarySearch(this.x, x2);\n          i1 = i3 - 1;\n\n          // We have our indexes i1 & i3, so we can calculate already:\n          // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n          return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n        };\n        return this;\n      }\n      function getInterpolateFunction(c) {\n        swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n      }\n      function setTranslate(_t, byController) {\n        const controlled = swiper.controller.control;\n        let multiplier;\n        let controlledTranslate;\n        const Swiper = swiper.constructor;\n        function setControlledTranslate(c) {\n          if (c.destroyed) return;\n\n          // this will create an Interpolate function based on the snapGrids\n          // x is the Grid of the scrolled scroller and y will be the controlled scroller\n          // it makes sense to create this only once and recall it for the interpolation\n          // the function does a lot of value caching for performance\n          const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n          if (swiper.params.controller.by === 'slide') {\n            getInterpolateFunction(c);\n            // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n            // but it did not work out\n            controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n          }\n          if (!controlledTranslate || swiper.params.controller.by === 'container') {\n            multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n            if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n              multiplier = 1;\n            }\n            controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n          }\n          if (swiper.params.controller.inverse) {\n            controlledTranslate = c.maxTranslate() - controlledTranslate;\n          }\n          c.updateProgress(controlledTranslate);\n          c.setTranslate(controlledTranslate, swiper);\n          c.updateActiveIndex();\n          c.updateSlidesClasses();\n        }\n        if (Array.isArray(controlled)) {\n          for (let i = 0; i < controlled.length; i += 1) {\n            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n              setControlledTranslate(controlled[i]);\n            }\n          }\n        } else if (controlled instanceof Swiper && byController !== controlled) {\n          setControlledTranslate(controlled);\n        }\n      }\n      function setTransition(duration, byController) {\n        const Swiper = swiper.constructor;\n        const controlled = swiper.controller.control;\n        let i;\n        function setControlledTransition(c) {\n          if (c.destroyed) return;\n          c.setTransition(duration, swiper);\n          if (duration !== 0) {\n            c.transitionStart();\n            if (c.params.autoHeight) {\n              nextTick(() => {\n                c.updateAutoHeight();\n              });\n            }\n            elementTransitionEnd(c.wrapperEl, () => {\n              if (!controlled) return;\n              c.transitionEnd();\n            });\n          }\n        }\n        if (Array.isArray(controlled)) {\n          for (i = 0; i < controlled.length; i += 1) {\n            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n              setControlledTransition(controlled[i]);\n            }\n          }\n        } else if (controlled instanceof Swiper && byController !== controlled) {\n          setControlledTransition(controlled);\n        }\n      }\n      function removeSpline() {\n        if (!swiper.controller.control) return;\n        if (swiper.controller.spline) {\n          swiper.controller.spline = undefined;\n          delete swiper.controller.spline;\n        }\n      }\n      on('beforeInit', () => {\n        if (typeof window !== 'undefined' && (\n        // eslint-disable-line\n        typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n          const controlElement = document.querySelector(swiper.params.controller.control);\n          if (controlElement && controlElement.swiper) {\n            swiper.controller.control = controlElement.swiper;\n          } else if (controlElement) {\n            const onControllerSwiper = e => {\n              swiper.controller.control = e.detail[0];\n              swiper.update();\n              controlElement.removeEventListener('init', onControllerSwiper);\n            };\n            controlElement.addEventListener('init', onControllerSwiper);\n          }\n          return;\n        }\n        swiper.controller.control = swiper.params.controller.control;\n      });\n      on('update', () => {\n        removeSpline();\n      });\n      on('resize', () => {\n        removeSpline();\n      });\n      on('observerUpdate', () => {\n        removeSpline();\n      });\n      on('setTranslate', (_s, translate, byController) => {\n        if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n        swiper.controller.setTranslate(translate, byController);\n      });\n      on('setTransition', (_s, duration, byController) => {\n        if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n        swiper.controller.setTransition(duration, byController);\n      });\n      Object.assign(swiper.controller, {\n        setTranslate,\n        setTransition\n      });\n    }\n\n    function A11y(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        a11y: {\n          enabled: true,\n          notificationClass: 'swiper-notification',\n          prevSlideMessage: 'Previous slide',\n          nextSlideMessage: 'Next slide',\n          firstSlideMessage: 'This is the first slide',\n          lastSlideMessage: 'This is the last slide',\n          paginationBulletMessage: 'Go to slide {{index}}',\n          slideLabelMessage: '{{index}} / {{slidesLength}}',\n          containerMessage: null,\n          containerRoleDescriptionMessage: null,\n          itemRoleDescriptionMessage: null,\n          slideRole: 'group',\n          id: null\n        }\n      });\n      swiper.a11y = {\n        clicked: false\n      };\n      let liveRegion = null;\n      function notify(message) {\n        const notification = liveRegion;\n        if (notification.length === 0) return;\n        notification.innerHTML = '';\n        notification.innerHTML = message;\n      }\n      const makeElementsArray = el => {\n        if (!Array.isArray(el)) el = [el].filter(e => !!e);\n        return el;\n      };\n      function getRandomNumber(size) {\n        if (size === void 0) {\n          size = 16;\n        }\n        const randomChar = () => Math.round(16 * Math.random()).toString(16);\n        return 'x'.repeat(size).replace(/x/g, randomChar);\n      }\n      function makeElFocusable(el) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('tabIndex', '0');\n        });\n      }\n      function makeElNotFocusable(el) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('tabIndex', '-1');\n        });\n      }\n      function addElRole(el, role) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('role', role);\n        });\n      }\n      function addElRoleDescription(el, description) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('aria-roledescription', description);\n        });\n      }\n      function addElControls(el, controls) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('aria-controls', controls);\n        });\n      }\n      function addElLabel(el, label) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('aria-label', label);\n        });\n      }\n      function addElId(el, id) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('id', id);\n        });\n      }\n      function addElLive(el, live) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('aria-live', live);\n        });\n      }\n      function disableEl(el) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('aria-disabled', true);\n        });\n      }\n      function enableEl(el) {\n        el = makeElementsArray(el);\n        el.forEach(subEl => {\n          subEl.setAttribute('aria-disabled', false);\n        });\n      }\n      function onEnterOrSpaceKey(e) {\n        if (e.keyCode !== 13 && e.keyCode !== 32) return;\n        const params = swiper.params.a11y;\n        const targetEl = e.target;\n        if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n          if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n        }\n        if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n          if (!(swiper.isEnd && !swiper.params.loop)) {\n            swiper.slideNext();\n          }\n          if (swiper.isEnd) {\n            notify(params.lastSlideMessage);\n          } else {\n            notify(params.nextSlideMessage);\n          }\n        }\n        if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n          if (!(swiper.isBeginning && !swiper.params.loop)) {\n            swiper.slidePrev();\n          }\n          if (swiper.isBeginning) {\n            notify(params.firstSlideMessage);\n          } else {\n            notify(params.prevSlideMessage);\n          }\n        }\n        if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n          targetEl.click();\n        }\n      }\n      function updateNavigation() {\n        if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n        const {\n          nextEl,\n          prevEl\n        } = swiper.navigation;\n        if (prevEl) {\n          if (swiper.isBeginning) {\n            disableEl(prevEl);\n            makeElNotFocusable(prevEl);\n          } else {\n            enableEl(prevEl);\n            makeElFocusable(prevEl);\n          }\n        }\n        if (nextEl) {\n          if (swiper.isEnd) {\n            disableEl(nextEl);\n            makeElNotFocusable(nextEl);\n          } else {\n            enableEl(nextEl);\n            makeElFocusable(nextEl);\n          }\n        }\n      }\n      function hasPagination() {\n        return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n      }\n      function hasClickablePagination() {\n        return hasPagination() && swiper.params.pagination.clickable;\n      }\n      function updatePagination() {\n        const params = swiper.params.a11y;\n        if (!hasPagination()) return;\n        swiper.pagination.bullets.forEach(bulletEl => {\n          if (swiper.params.pagination.clickable) {\n            makeElFocusable(bulletEl);\n            if (!swiper.params.pagination.renderBullet) {\n              addElRole(bulletEl, 'button');\n              addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n            }\n          }\n          if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n            bulletEl.setAttribute('aria-current', 'true');\n          } else {\n            bulletEl.removeAttribute('aria-current');\n          }\n        });\n      }\n      const initNavEl = (el, wrapperId, message) => {\n        makeElFocusable(el);\n        if (el.tagName !== 'BUTTON') {\n          addElRole(el, 'button');\n          el.addEventListener('keydown', onEnterOrSpaceKey);\n        }\n        addElLabel(el, message);\n        addElControls(el, wrapperId);\n      };\n      const handlePointerDown = () => {\n        swiper.a11y.clicked = true;\n      };\n      const handlePointerUp = () => {\n        requestAnimationFrame(() => {\n          requestAnimationFrame(() => {\n            if (!swiper.destroyed) {\n              swiper.a11y.clicked = false;\n            }\n          });\n        });\n      };\n      const handleFocus = e => {\n        if (swiper.a11y.clicked) return;\n        const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n        if (!slideEl || !swiper.slides.includes(slideEl)) return;\n        const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n        const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n        if (isActive || isVisible) return;\n        if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n        if (swiper.isHorizontal()) {\n          swiper.el.scrollLeft = 0;\n        } else {\n          swiper.el.scrollTop = 0;\n        }\n        swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n      };\n      const initSlides = () => {\n        const params = swiper.params.a11y;\n        if (params.itemRoleDescriptionMessage) {\n          addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n        }\n        if (params.slideRole) {\n          addElRole(swiper.slides, params.slideRole);\n        }\n        const slidesLength = swiper.slides.length;\n        if (params.slideLabelMessage) {\n          swiper.slides.forEach((slideEl, index) => {\n            const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n            const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n            addElLabel(slideEl, ariaLabelMessage);\n          });\n        }\n      };\n      const init = () => {\n        const params = swiper.params.a11y;\n        if (swiper.isElement) {\n          swiper.el.shadowEl.append(liveRegion);\n        } else {\n          swiper.el.append(liveRegion);\n        }\n\n        // Container\n        const containerEl = swiper.el;\n        if (params.containerRoleDescriptionMessage) {\n          addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n        }\n        if (params.containerMessage) {\n          addElLabel(containerEl, params.containerMessage);\n        }\n\n        // Wrapper\n        const wrapperEl = swiper.wrapperEl;\n        const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n        const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n        addElId(wrapperEl, wrapperId);\n        addElLive(wrapperEl, live);\n\n        // Slide\n        initSlides();\n\n        // Navigation\n        let {\n          nextEl,\n          prevEl\n        } = swiper.navigation ? swiper.navigation : {};\n        nextEl = makeElementsArray(nextEl);\n        prevEl = makeElementsArray(prevEl);\n        if (nextEl) {\n          nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n        }\n        if (prevEl) {\n          prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n        }\n\n        // Pagination\n        if (hasClickablePagination()) {\n          const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n          paginationEl.forEach(el => {\n            el.addEventListener('keydown', onEnterOrSpaceKey);\n          });\n        }\n\n        // Tab focus\n        swiper.el.addEventListener('focus', handleFocus, true);\n        swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n        swiper.el.addEventListener('pointerup', handlePointerUp, true);\n      };\n      function destroy() {\n        if (liveRegion) liveRegion.remove();\n        let {\n          nextEl,\n          prevEl\n        } = swiper.navigation ? swiper.navigation : {};\n        nextEl = makeElementsArray(nextEl);\n        prevEl = makeElementsArray(prevEl);\n        if (nextEl) {\n          nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n        }\n        if (prevEl) {\n          prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n        }\n\n        // Pagination\n        if (hasClickablePagination()) {\n          const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n          paginationEl.forEach(el => {\n            el.removeEventListener('keydown', onEnterOrSpaceKey);\n          });\n        }\n\n        // Tab focus\n        swiper.el.removeEventListener('focus', handleFocus, true);\n        swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n        swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n      }\n      on('beforeInit', () => {\n        liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n        liveRegion.setAttribute('aria-live', 'assertive');\n        liveRegion.setAttribute('aria-atomic', 'true');\n      });\n      on('afterInit', () => {\n        if (!swiper.params.a11y.enabled) return;\n        init();\n      });\n      on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n        if (!swiper.params.a11y.enabled) return;\n        initSlides();\n      });\n      on('fromEdge toEdge afterInit lock unlock', () => {\n        if (!swiper.params.a11y.enabled) return;\n        updateNavigation();\n      });\n      on('paginationUpdate', () => {\n        if (!swiper.params.a11y.enabled) return;\n        updatePagination();\n      });\n      on('destroy', () => {\n        if (!swiper.params.a11y.enabled) return;\n        destroy();\n      });\n    }\n\n    function History(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        history: {\n          enabled: false,\n          root: '',\n          replaceState: false,\n          key: 'slides',\n          keepQuery: false\n        }\n      });\n      let initialized = false;\n      let paths = {};\n      const slugify = text => {\n        return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n      };\n      const getPathValues = urlOverride => {\n        const window = getWindow();\n        let location;\n        if (urlOverride) {\n          location = new URL(urlOverride);\n        } else {\n          location = window.location;\n        }\n        const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n        const total = pathArray.length;\n        const key = pathArray[total - 2];\n        const value = pathArray[total - 1];\n        return {\n          key,\n          value\n        };\n      };\n      const setHistory = (key, index) => {\n        const window = getWindow();\n        if (!initialized || !swiper.params.history.enabled) return;\n        let location;\n        if (swiper.params.url) {\n          location = new URL(swiper.params.url);\n        } else {\n          location = window.location;\n        }\n        const slide = swiper.slides[index];\n        let value = slugify(slide.getAttribute('data-history'));\n        if (swiper.params.history.root.length > 0) {\n          let root = swiper.params.history.root;\n          if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n          value = `${root}/${key ? `${key}/` : ''}${value}`;\n        } else if (!location.pathname.includes(key)) {\n          value = `${key ? `${key}/` : ''}${value}`;\n        }\n        if (swiper.params.history.keepQuery) {\n          value += location.search;\n        }\n        const currentState = window.history.state;\n        if (currentState && currentState.value === value) {\n          return;\n        }\n        if (swiper.params.history.replaceState) {\n          window.history.replaceState({\n            value\n          }, null, value);\n        } else {\n          window.history.pushState({\n            value\n          }, null, value);\n        }\n      };\n      const scrollToSlide = (speed, value, runCallbacks) => {\n        if (value) {\n          for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n            const slide = swiper.slides[i];\n            const slideHistory = slugify(slide.getAttribute('data-history'));\n            if (slideHistory === value) {\n              const index = swiper.getSlideIndex(slide);\n              swiper.slideTo(index, speed, runCallbacks);\n            }\n          }\n        } else {\n          swiper.slideTo(0, speed, runCallbacks);\n        }\n      };\n      const setHistoryPopState = () => {\n        paths = getPathValues(swiper.params.url);\n        scrollToSlide(swiper.params.speed, paths.value, false);\n      };\n      const init = () => {\n        const window = getWindow();\n        if (!swiper.params.history) return;\n        if (!window.history || !window.history.pushState) {\n          swiper.params.history.enabled = false;\n          swiper.params.hashNavigation.enabled = true;\n          return;\n        }\n        initialized = true;\n        paths = getPathValues(swiper.params.url);\n        if (!paths.key && !paths.value) {\n          if (!swiper.params.history.replaceState) {\n            window.addEventListener('popstate', setHistoryPopState);\n          }\n          return;\n        }\n        scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n        if (!swiper.params.history.replaceState) {\n          window.addEventListener('popstate', setHistoryPopState);\n        }\n      };\n      const destroy = () => {\n        const window = getWindow();\n        if (!swiper.params.history.replaceState) {\n          window.removeEventListener('popstate', setHistoryPopState);\n        }\n      };\n      on('init', () => {\n        if (swiper.params.history.enabled) {\n          init();\n        }\n      });\n      on('destroy', () => {\n        if (swiper.params.history.enabled) {\n          destroy();\n        }\n      });\n      on('transitionEnd _freeModeNoMomentumRelease', () => {\n        if (initialized) {\n          setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      });\n      on('slideChange', () => {\n        if (initialized && swiper.params.cssMode) {\n          setHistory(swiper.params.history.key, swiper.activeIndex);\n        }\n      });\n    }\n\n    function HashNavigation(_ref) {\n      let {\n        swiper,\n        extendParams,\n        emit,\n        on\n      } = _ref;\n      let initialized = false;\n      const document = getDocument();\n      const window = getWindow();\n      extendParams({\n        hashNavigation: {\n          enabled: false,\n          replaceState: false,\n          watchState: false,\n          getSlideIndex(_s, hash) {\n            if (swiper.virtual && swiper.params.virtual.enabled) {\n              const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n              if (!slideWithHash) return 0;\n              const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n              return index;\n            }\n            return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n          }\n        }\n      });\n      const onHashChange = () => {\n        emit('hashChange');\n        const newHash = document.location.hash.replace('#', '');\n        const activeSlideEl = swiper.virtual && swiper.params.virtual.enabled ? swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`) : swiper.slides[swiper.activeIndex];\n        const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n        if (newHash !== activeSlideHash) {\n          const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n          if (typeof newIndex === 'undefined' || Number.isNaN(newIndex)) return;\n          swiper.slideTo(newIndex);\n        }\n      };\n      const setHash = () => {\n        if (!initialized || !swiper.params.hashNavigation.enabled) return;\n        const activeSlideEl = swiper.virtual && swiper.params.virtual.enabled ? swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`) : swiper.slides[swiper.activeIndex];\n        const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n        if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n          window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n          emit('hashSet');\n        } else {\n          document.location.hash = activeSlideHash || '';\n          emit('hashSet');\n        }\n      };\n      const init = () => {\n        if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n        initialized = true;\n        const hash = document.location.hash.replace('#', '');\n        if (hash) {\n          const speed = 0;\n          const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n          swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n        }\n        if (swiper.params.hashNavigation.watchState) {\n          window.addEventListener('hashchange', onHashChange);\n        }\n      };\n      const destroy = () => {\n        if (swiper.params.hashNavigation.watchState) {\n          window.removeEventListener('hashchange', onHashChange);\n        }\n      };\n      on('init', () => {\n        if (swiper.params.hashNavigation.enabled) {\n          init();\n        }\n      });\n      on('destroy', () => {\n        if (swiper.params.hashNavigation.enabled) {\n          destroy();\n        }\n      });\n      on('transitionEnd _freeModeNoMomentumRelease', () => {\n        if (initialized) {\n          setHash();\n        }\n      });\n      on('slideChange', () => {\n        if (initialized && swiper.params.cssMode) {\n          setHash();\n        }\n      });\n    }\n\n    /* eslint no-underscore-dangle: \"off\" */\n    function Autoplay(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on,\n        emit,\n        params\n      } = _ref;\n      swiper.autoplay = {\n        running: false,\n        paused: false,\n        timeLeft: 0\n      };\n      extendParams({\n        autoplay: {\n          enabled: false,\n          delay: 3000,\n          waitForTransition: true,\n          disableOnInteraction: true,\n          stopOnLastSlide: false,\n          reverseDirection: false,\n          pauseOnMouseEnter: false\n        }\n      });\n      let timeout;\n      let raf;\n      let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n      let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n      let autoplayTimeLeft;\n      let autoplayStartTime = new Date().getTime;\n      let wasPaused;\n      let isTouched;\n      let pausedByTouch;\n      let touchStartTimeout;\n      let slideChanged;\n      let pausedByInteraction;\n      function onTransitionEnd(e) {\n        if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n        if (e.target !== swiper.wrapperEl) return;\n        swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n        resume();\n      }\n      const calcTimeLeft = () => {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        if (swiper.autoplay.paused) {\n          wasPaused = true;\n        } else if (wasPaused) {\n          autoplayDelayCurrent = autoplayTimeLeft;\n          wasPaused = false;\n        }\n        const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n        swiper.autoplay.timeLeft = timeLeft;\n        emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n        raf = requestAnimationFrame(() => {\n          calcTimeLeft();\n        });\n      };\n      const getSlideDelay = () => {\n        let activeSlideEl;\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n        } else {\n          activeSlideEl = swiper.slides[swiper.activeIndex];\n        }\n        if (!activeSlideEl) return undefined;\n        const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n        return currentSlideDelay;\n      };\n      const run = delayForce => {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        cancelAnimationFrame(raf);\n        calcTimeLeft();\n        let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n        autoplayDelayTotal = swiper.params.autoplay.delay;\n        autoplayDelayCurrent = swiper.params.autoplay.delay;\n        const currentSlideDelay = getSlideDelay();\n        if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n          delay = currentSlideDelay;\n          autoplayDelayTotal = currentSlideDelay;\n          autoplayDelayCurrent = currentSlideDelay;\n        }\n        autoplayTimeLeft = delay;\n        const speed = swiper.params.speed;\n        const proceed = () => {\n          if (!swiper || swiper.destroyed) return;\n          if (swiper.params.autoplay.reverseDirection) {\n            if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n              swiper.slidePrev(speed, true, true);\n              emit('autoplay');\n            } else if (!swiper.params.autoplay.stopOnLastSlide) {\n              swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n              emit('autoplay');\n            }\n          } else {\n            if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n              swiper.slideNext(speed, true, true);\n              emit('autoplay');\n            } else if (!swiper.params.autoplay.stopOnLastSlide) {\n              swiper.slideTo(0, speed, true, true);\n              emit('autoplay');\n            }\n          }\n          if (swiper.params.cssMode) {\n            autoplayStartTime = new Date().getTime();\n            requestAnimationFrame(() => {\n              run();\n            });\n          }\n        };\n        if (delay > 0) {\n          clearTimeout(timeout);\n          timeout = setTimeout(() => {\n            proceed();\n          }, delay);\n        } else {\n          requestAnimationFrame(() => {\n            proceed();\n          });\n        }\n\n        // eslint-disable-next-line\n        return delay;\n      };\n      const start = () => {\n        swiper.autoplay.running = true;\n        run();\n        emit('autoplayStart');\n      };\n      const stop = () => {\n        swiper.autoplay.running = false;\n        clearTimeout(timeout);\n        cancelAnimationFrame(raf);\n        emit('autoplayStop');\n      };\n      const pause = (internal, reset) => {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        clearTimeout(timeout);\n        if (!internal) {\n          pausedByInteraction = true;\n        }\n        const proceed = () => {\n          emit('autoplayPause');\n          if (swiper.params.autoplay.waitForTransition) {\n            swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n          } else {\n            resume();\n          }\n        };\n        swiper.autoplay.paused = true;\n        if (reset) {\n          if (slideChanged) {\n            autoplayTimeLeft = swiper.params.autoplay.delay;\n          }\n          slideChanged = false;\n          proceed();\n          return;\n        }\n        const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n        autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n        if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n        if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n        proceed();\n      };\n      const resume = () => {\n        if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n        autoplayStartTime = new Date().getTime();\n        if (pausedByInteraction) {\n          pausedByInteraction = false;\n          run(autoplayTimeLeft);\n        } else {\n          run();\n        }\n        swiper.autoplay.paused = false;\n        emit('autoplayResume');\n      };\n      const onVisibilityChange = () => {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        const document = getDocument();\n        if (document.visibilityState === 'hidden') {\n          pausedByInteraction = true;\n          pause(true);\n        }\n        if (document.visibilityState === 'visible') {\n          resume();\n        }\n      };\n      const onPointerEnter = e => {\n        if (e.pointerType !== 'mouse') return;\n        pausedByInteraction = true;\n        pause(true);\n      };\n      const onPointerLeave = e => {\n        if (e.pointerType !== 'mouse') return;\n        if (swiper.autoplay.paused) {\n          resume();\n        }\n      };\n      const attachMouseEvents = () => {\n        if (swiper.params.autoplay.pauseOnMouseEnter) {\n          swiper.el.addEventListener('pointerenter', onPointerEnter);\n          swiper.el.addEventListener('pointerleave', onPointerLeave);\n        }\n      };\n      const detachMouseEvents = () => {\n        swiper.el.removeEventListener('pointerenter', onPointerEnter);\n        swiper.el.removeEventListener('pointerleave', onPointerLeave);\n      };\n      const attachDocumentEvents = () => {\n        const document = getDocument();\n        document.addEventListener('visibilitychange', onVisibilityChange);\n      };\n      const detachDocumentEvents = () => {\n        const document = getDocument();\n        document.removeEventListener('visibilitychange', onVisibilityChange);\n      };\n      on('init', () => {\n        if (swiper.params.autoplay.enabled) {\n          attachMouseEvents();\n          attachDocumentEvents();\n          autoplayStartTime = new Date().getTime();\n          start();\n        }\n      });\n      on('destroy', () => {\n        detachMouseEvents();\n        detachDocumentEvents();\n        if (swiper.autoplay.running) {\n          stop();\n        }\n      });\n      on('beforeTransitionStart', (_s, speed, internal) => {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          pause(true, true);\n        } else {\n          stop();\n        }\n      });\n      on('sliderFirstMove', () => {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        if (swiper.params.autoplay.disableOnInteraction) {\n          stop();\n          return;\n        }\n        isTouched = true;\n        pausedByTouch = false;\n        pausedByInteraction = false;\n        touchStartTimeout = setTimeout(() => {\n          pausedByInteraction = true;\n          pausedByTouch = true;\n          pause(true);\n        }, 200);\n      });\n      on('touchEnd', () => {\n        if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n        clearTimeout(touchStartTimeout);\n        clearTimeout(timeout);\n        if (swiper.params.autoplay.disableOnInteraction) {\n          pausedByTouch = false;\n          isTouched = false;\n          return;\n        }\n        if (pausedByTouch && swiper.params.cssMode) resume();\n        pausedByTouch = false;\n        isTouched = false;\n      });\n      on('slideChange', () => {\n        if (swiper.destroyed || !swiper.autoplay.running) return;\n        slideChanged = true;\n      });\n      Object.assign(swiper.autoplay, {\n        start,\n        stop,\n        pause,\n        resume\n      });\n    }\n\n    function Thumb(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        thumbs: {\n          swiper: null,\n          multipleActiveThumbs: true,\n          autoScrollOffset: 0,\n          slideThumbActiveClass: 'swiper-slide-thumb-active',\n          thumbsContainerClass: 'swiper-thumbs'\n        }\n      });\n      let initialized = false;\n      let swiperCreated = false;\n      swiper.thumbs = {\n        swiper: null\n      };\n      function onThumbClick() {\n        const thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n        const clickedIndex = thumbsSwiper.clickedIndex;\n        const clickedSlide = thumbsSwiper.clickedSlide;\n        if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n        if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n        let slideToIndex;\n        if (thumbsSwiper.params.loop) {\n          slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n        } else {\n          slideToIndex = clickedIndex;\n        }\n        if (swiper.params.loop) {\n          swiper.slideToLoop(slideToIndex);\n        } else {\n          swiper.slideTo(slideToIndex);\n        }\n      }\n      function init() {\n        const {\n          thumbs: thumbsParams\n        } = swiper.params;\n        if (initialized) return false;\n        initialized = true;\n        const SwiperClass = swiper.constructor;\n        if (thumbsParams.swiper instanceof SwiperClass) {\n          swiper.thumbs.swiper = thumbsParams.swiper;\n          Object.assign(swiper.thumbs.swiper.originalParams, {\n            watchSlidesProgress: true,\n            slideToClickedSlide: false\n          });\n          Object.assign(swiper.thumbs.swiper.params, {\n            watchSlidesProgress: true,\n            slideToClickedSlide: false\n          });\n          swiper.thumbs.swiper.update();\n        } else if (isObject(thumbsParams.swiper)) {\n          const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n          Object.assign(thumbsSwiperParams, {\n            watchSlidesProgress: true,\n            slideToClickedSlide: false\n          });\n          swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n          swiperCreated = true;\n        }\n        swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n        swiper.thumbs.swiper.on('tap', onThumbClick);\n        return true;\n      }\n      function update(initial) {\n        const thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n        const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n        // Activate thumbs\n        let thumbsToActivate = 1;\n        const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n        if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n          thumbsToActivate = swiper.params.slidesPerView;\n        }\n        if (!swiper.params.thumbs.multipleActiveThumbs) {\n          thumbsToActivate = 1;\n        }\n        thumbsToActivate = Math.floor(thumbsToActivate);\n        thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n        if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n          for (let i = 0; i < thumbsToActivate; i += 1) {\n            elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n              slideEl.classList.add(thumbActiveClass);\n            });\n          }\n        } else {\n          for (let i = 0; i < thumbsToActivate; i += 1) {\n            if (thumbsSwiper.slides[swiper.realIndex + i]) {\n              thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n            }\n          }\n        }\n        const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n        const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n        if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n          const currentThumbsIndex = thumbsSwiper.activeIndex;\n          let newThumbsIndex;\n          let direction;\n          if (thumbsSwiper.params.loop) {\n            const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n            newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n            direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n          } else {\n            newThumbsIndex = swiper.realIndex;\n            direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n          }\n          if (useOffset) {\n            newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n          }\n          if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n            if (thumbsSwiper.params.centeredSlides) {\n              if (newThumbsIndex > currentThumbsIndex) {\n                newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n              } else {\n                newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n              }\n            } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) ;\n            thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n          }\n        }\n      }\n      on('beforeInit', () => {\n        const {\n          thumbs\n        } = swiper.params;\n        if (!thumbs || !thumbs.swiper) return;\n        if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n          const document = getDocument();\n          const getThumbsElementAndInit = () => {\n            const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n            if (thumbsElement && thumbsElement.swiper) {\n              thumbs.swiper = thumbsElement.swiper;\n              init();\n              update(true);\n            } else if (thumbsElement) {\n              const onThumbsSwiper = e => {\n                thumbs.swiper = e.detail[0];\n                thumbsElement.removeEventListener('init', onThumbsSwiper);\n                init();\n                update(true);\n                thumbs.swiper.update();\n                swiper.update();\n              };\n              thumbsElement.addEventListener('init', onThumbsSwiper);\n            }\n            return thumbsElement;\n          };\n          const watchForThumbsToAppear = () => {\n            if (swiper.destroyed) return;\n            const thumbsElement = getThumbsElementAndInit();\n            if (!thumbsElement) {\n              requestAnimationFrame(watchForThumbsToAppear);\n            }\n          };\n          requestAnimationFrame(watchForThumbsToAppear);\n        } else {\n          init();\n          update(true);\n        }\n      });\n      on('slideChange update resize observerUpdate', () => {\n        update();\n      });\n      on('setTransition', (_s, duration) => {\n        const thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n        thumbsSwiper.setTransition(duration);\n      });\n      on('beforeDestroy', () => {\n        const thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n        if (swiperCreated) {\n          thumbsSwiper.destroy();\n        }\n      });\n      Object.assign(swiper.thumbs, {\n        init,\n        update\n      });\n    }\n\n    function freeMode(_ref) {\n      let {\n        swiper,\n        extendParams,\n        emit,\n        once\n      } = _ref;\n      extendParams({\n        freeMode: {\n          enabled: false,\n          momentum: true,\n          momentumRatio: 1,\n          momentumBounce: true,\n          momentumBounceRatio: 1,\n          momentumVelocityRatio: 1,\n          sticky: false,\n          minimumVelocity: 0.02\n        }\n      });\n      function onTouchStart() {\n        if (swiper.params.cssMode) return;\n        const translate = swiper.getTranslate();\n        swiper.setTranslate(translate);\n        swiper.setTransition(0);\n        swiper.touchEventsData.velocities.length = 0;\n        swiper.freeMode.onTouchEnd({\n          currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n        });\n      }\n      function onTouchMove() {\n        if (swiper.params.cssMode) return;\n        const {\n          touchEventsData: data,\n          touches\n        } = swiper;\n        // Velocity\n        if (data.velocities.length === 0) {\n          data.velocities.push({\n            position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n            time: data.touchStartTime\n          });\n        }\n        data.velocities.push({\n          position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n          time: now()\n        });\n      }\n      function onTouchEnd(_ref2) {\n        let {\n          currentPos\n        } = _ref2;\n        if (swiper.params.cssMode) return;\n        const {\n          params,\n          wrapperEl,\n          rtlTranslate: rtl,\n          snapGrid,\n          touchEventsData: data\n        } = swiper;\n        // Time diff\n        const touchEndTime = now();\n        const timeDiff = touchEndTime - data.touchStartTime;\n        if (currentPos < -swiper.minTranslate()) {\n          swiper.slideTo(swiper.activeIndex);\n          return;\n        }\n        if (currentPos > -swiper.maxTranslate()) {\n          if (swiper.slides.length < snapGrid.length) {\n            swiper.slideTo(snapGrid.length - 1);\n          } else {\n            swiper.slideTo(swiper.slides.length - 1);\n          }\n          return;\n        }\n        if (params.freeMode.momentum) {\n          if (data.velocities.length > 1) {\n            const lastMoveEvent = data.velocities.pop();\n            const velocityEvent = data.velocities.pop();\n            const distance = lastMoveEvent.position - velocityEvent.position;\n            const time = lastMoveEvent.time - velocityEvent.time;\n            swiper.velocity = distance / time;\n            swiper.velocity /= 2;\n            if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n              swiper.velocity = 0;\n            }\n            // this implies that the user stopped moving a finger then released.\n            // There would be no events with distance zero, so the last event is stale.\n            if (time > 150 || now() - lastMoveEvent.time > 300) {\n              swiper.velocity = 0;\n            }\n          } else {\n            swiper.velocity = 0;\n          }\n          swiper.velocity *= params.freeMode.momentumVelocityRatio;\n          data.velocities.length = 0;\n          let momentumDuration = 1000 * params.freeMode.momentumRatio;\n          const momentumDistance = swiper.velocity * momentumDuration;\n          let newPosition = swiper.translate + momentumDistance;\n          if (rtl) newPosition = -newPosition;\n          let doBounce = false;\n          let afterBouncePosition;\n          const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n          let needsLoopFix;\n          if (newPosition < swiper.maxTranslate()) {\n            if (params.freeMode.momentumBounce) {\n              if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n                newPosition = swiper.maxTranslate() - bounceAmount;\n              }\n              afterBouncePosition = swiper.maxTranslate();\n              doBounce = true;\n              data.allowMomentumBounce = true;\n            } else {\n              newPosition = swiper.maxTranslate();\n            }\n            if (params.loop && params.centeredSlides) needsLoopFix = true;\n          } else if (newPosition > swiper.minTranslate()) {\n            if (params.freeMode.momentumBounce) {\n              if (newPosition - swiper.minTranslate() > bounceAmount) {\n                newPosition = swiper.minTranslate() + bounceAmount;\n              }\n              afterBouncePosition = swiper.minTranslate();\n              doBounce = true;\n              data.allowMomentumBounce = true;\n            } else {\n              newPosition = swiper.minTranslate();\n            }\n            if (params.loop && params.centeredSlides) needsLoopFix = true;\n          } else if (params.freeMode.sticky) {\n            let nextSlide;\n            for (let j = 0; j < snapGrid.length; j += 1) {\n              if (snapGrid[j] > -newPosition) {\n                nextSlide = j;\n                break;\n              }\n            }\n            if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n              newPosition = snapGrid[nextSlide];\n            } else {\n              newPosition = snapGrid[nextSlide - 1];\n            }\n            newPosition = -newPosition;\n          }\n          if (needsLoopFix) {\n            once('transitionEnd', () => {\n              swiper.loopFix();\n            });\n          }\n          // Fix duration\n          if (swiper.velocity !== 0) {\n            if (rtl) {\n              momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n            } else {\n              momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n            }\n            if (params.freeMode.sticky) {\n              // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n              // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n              // It's easy to see this when simulating touch with mouse events. To fix this,\n              // limit single-slide swipes to the default slide duration. This also has the\n              // nice side effect of matching slide speed if the user stopped moving before\n              // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n              // For faster swipes, also apply limits (albeit higher ones).\n              const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n              const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n              if (moveDistance < currentSlideSize) {\n                momentumDuration = params.speed;\n              } else if (moveDistance < 2 * currentSlideSize) {\n                momentumDuration = params.speed * 1.5;\n              } else {\n                momentumDuration = params.speed * 2.5;\n              }\n            }\n          } else if (params.freeMode.sticky) {\n            swiper.slideToClosest();\n            return;\n          }\n          if (params.freeMode.momentumBounce && doBounce) {\n            swiper.updateProgress(afterBouncePosition);\n            swiper.setTransition(momentumDuration);\n            swiper.setTranslate(newPosition);\n            swiper.transitionStart(true, swiper.swipeDirection);\n            swiper.animating = true;\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n              emit('momentumBounce');\n              swiper.setTransition(params.speed);\n              setTimeout(() => {\n                swiper.setTranslate(afterBouncePosition);\n                elementTransitionEnd(wrapperEl, () => {\n                  if (!swiper || swiper.destroyed) return;\n                  swiper.transitionEnd();\n                });\n              }, 0);\n            });\n          } else if (swiper.velocity) {\n            emit('_freeModeNoMomentumRelease');\n            swiper.updateProgress(newPosition);\n            swiper.setTransition(momentumDuration);\n            swiper.setTranslate(newPosition);\n            swiper.transitionStart(true, swiper.swipeDirection);\n            if (!swiper.animating) {\n              swiper.animating = true;\n              elementTransitionEnd(wrapperEl, () => {\n                if (!swiper || swiper.destroyed) return;\n                swiper.transitionEnd();\n              });\n            }\n          } else {\n            swiper.updateProgress(newPosition);\n          }\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n        } else if (params.freeMode.sticky) {\n          swiper.slideToClosest();\n          return;\n        } else if (params.freeMode) {\n          emit('_freeModeNoMomentumRelease');\n        }\n        if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n          swiper.updateProgress();\n          swiper.updateActiveIndex();\n          swiper.updateSlidesClasses();\n        }\n      }\n      Object.assign(swiper, {\n        freeMode: {\n          onTouchStart,\n          onTouchMove,\n          onTouchEnd\n        }\n      });\n    }\n\n    function Grid(_ref) {\n      let {\n        swiper,\n        extendParams\n      } = _ref;\n      extendParams({\n        grid: {\n          rows: 1,\n          fill: 'column'\n        }\n      });\n      let slidesNumberEvenToRows;\n      let slidesPerRow;\n      let numFullColumns;\n      const getSpaceBetween = () => {\n        let spaceBetween = swiper.params.spaceBetween;\n        if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n          spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n        } else if (typeof spaceBetween === 'string') {\n          spaceBetween = parseFloat(spaceBetween);\n        }\n        return spaceBetween;\n      };\n      const initSlides = slidesLength => {\n        const {\n          slidesPerView\n        } = swiper.params;\n        const {\n          rows,\n          fill\n        } = swiper.params.grid;\n        numFullColumns = Math.floor(slidesLength / rows);\n        if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n          slidesNumberEvenToRows = slidesLength;\n        } else {\n          slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n        }\n        if (slidesPerView !== 'auto' && fill === 'row') {\n          slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n        }\n        slidesPerRow = slidesNumberEvenToRows / rows;\n      };\n      const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n        const {\n          slidesPerGroup\n        } = swiper.params;\n        const spaceBetween = getSpaceBetween();\n        const {\n          rows,\n          fill\n        } = swiper.params.grid;\n        // Set slides order\n        let newSlideOrderIndex;\n        let column;\n        let row;\n        if (fill === 'row' && slidesPerGroup > 1) {\n          const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n          const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n          const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n          row = Math.floor(slideIndexInGroup / columnsInGroup);\n          column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n          newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n          slide.style.order = newSlideOrderIndex;\n        } else if (fill === 'column') {\n          column = Math.floor(i / rows);\n          row = i - column * rows;\n          if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n            row += 1;\n            if (row >= rows) {\n              row = 0;\n              column += 1;\n            }\n          }\n        } else {\n          row = Math.floor(i / slidesPerRow);\n          column = i - row * slidesPerRow;\n        }\n        slide.row = row;\n        slide.column = column;\n        slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\n      };\n      const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n        const {\n          centeredSlides,\n          roundLengths\n        } = swiper.params;\n        const spaceBetween = getSpaceBetween();\n        const {\n          rows\n        } = swiper.params.grid;\n        swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n        swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n        swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n        if (centeredSlides) {\n          const newSlidesGrid = [];\n          for (let i = 0; i < snapGrid.length; i += 1) {\n            let slidesGridItem = snapGrid[i];\n            if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n            if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n          }\n          snapGrid.splice(0, snapGrid.length);\n          snapGrid.push(...newSlidesGrid);\n        }\n      };\n      swiper.grid = {\n        initSlides,\n        updateSlide,\n        updateWrapperSize\n      };\n    }\n\n    function appendSlide(slides) {\n      const swiper = this;\n      const {\n        params,\n        slidesEl\n      } = swiper;\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n      const appendElement = slideEl => {\n        if (typeof slideEl === 'string') {\n          const tempDOM = document.createElement('div');\n          tempDOM.innerHTML = slideEl;\n          slidesEl.append(tempDOM.children[0]);\n          tempDOM.innerHTML = '';\n        } else {\n          slidesEl.append(slideEl);\n        }\n      };\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (let i = 0; i < slides.length; i += 1) {\n          if (slides[i]) appendElement(slides[i]);\n        }\n      } else {\n        appendElement(slides);\n      }\n      swiper.recalcSlides();\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n      if (!params.observer || swiper.isElement) {\n        swiper.update();\n      }\n    }\n\n    function prependSlide(slides) {\n      const swiper = this;\n      const {\n        params,\n        activeIndex,\n        slidesEl\n      } = swiper;\n      if (params.loop) {\n        swiper.loopDestroy();\n      }\n      let newActiveIndex = activeIndex + 1;\n      const prependElement = slideEl => {\n        if (typeof slideEl === 'string') {\n          const tempDOM = document.createElement('div');\n          tempDOM.innerHTML = slideEl;\n          slidesEl.prepend(tempDOM.children[0]);\n          tempDOM.innerHTML = '';\n        } else {\n          slidesEl.prepend(slideEl);\n        }\n      };\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (let i = 0; i < slides.length; i += 1) {\n          if (slides[i]) prependElement(slides[i]);\n        }\n        newActiveIndex = activeIndex + slides.length;\n      } else {\n        prependElement(slides);\n      }\n      swiper.recalcSlides();\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n      if (!params.observer || swiper.isElement) {\n        swiper.update();\n      }\n      swiper.slideTo(newActiveIndex, 0, false);\n    }\n\n    function addSlide(index, slides) {\n      const swiper = this;\n      const {\n        params,\n        activeIndex,\n        slidesEl\n      } = swiper;\n      let activeIndexBuffer = activeIndex;\n      if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n        swiper.recalcSlides();\n      }\n      const baseLength = swiper.slides.length;\n      if (index <= 0) {\n        swiper.prependSlide(slides);\n        return;\n      }\n      if (index >= baseLength) {\n        swiper.appendSlide(slides);\n        return;\n      }\n      let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n      const slidesBuffer = [];\n      for (let i = baseLength - 1; i >= index; i -= 1) {\n        const currentSlide = swiper.slides[i];\n        currentSlide.remove();\n        slidesBuffer.unshift(currentSlide);\n      }\n      if (typeof slides === 'object' && 'length' in slides) {\n        for (let i = 0; i < slides.length; i += 1) {\n          if (slides[i]) slidesEl.append(slides[i]);\n        }\n        newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n      } else {\n        slidesEl.append(slides);\n      }\n      for (let i = 0; i < slidesBuffer.length; i += 1) {\n        slidesEl.append(slidesBuffer[i]);\n      }\n      swiper.recalcSlides();\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n      if (!params.observer || swiper.isElement) {\n        swiper.update();\n      }\n      if (params.loop) {\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n      } else {\n        swiper.slideTo(newActiveIndex, 0, false);\n      }\n    }\n\n    function removeSlide(slidesIndexes) {\n      const swiper = this;\n      const {\n        params,\n        activeIndex\n      } = swiper;\n      let activeIndexBuffer = activeIndex;\n      if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n      }\n      let newActiveIndex = activeIndexBuffer;\n      let indexToRemove;\n      if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n        for (let i = 0; i < slidesIndexes.length; i += 1) {\n          indexToRemove = slidesIndexes[i];\n          if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n          if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n        }\n        newActiveIndex = Math.max(newActiveIndex, 0);\n      } else {\n        indexToRemove = slidesIndexes;\n        if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n        newActiveIndex = Math.max(newActiveIndex, 0);\n      }\n      swiper.recalcSlides();\n      if (params.loop) {\n        swiper.loopCreate();\n      }\n      if (!params.observer || swiper.isElement) {\n        swiper.update();\n      }\n      if (params.loop) {\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n      } else {\n        swiper.slideTo(newActiveIndex, 0, false);\n      }\n    }\n\n    function removeAllSlides() {\n      const swiper = this;\n      const slidesIndexes = [];\n      for (let i = 0; i < swiper.slides.length; i += 1) {\n        slidesIndexes.push(i);\n      }\n      swiper.removeSlide(slidesIndexes);\n    }\n\n    function Manipulation(_ref) {\n      let {\n        swiper\n      } = _ref;\n      Object.assign(swiper, {\n        appendSlide: appendSlide.bind(swiper),\n        prependSlide: prependSlide.bind(swiper),\n        addSlide: addSlide.bind(swiper),\n        removeSlide: removeSlide.bind(swiper),\n        removeAllSlides: removeAllSlides.bind(swiper)\n      });\n    }\n\n    function effectInit(params) {\n      const {\n        effect,\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        overwriteParams,\n        perspective,\n        recreateShadows,\n        getEffectParams\n      } = params;\n      on('beforeInit', () => {\n        if (swiper.params.effect !== effect) return;\n        swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n        if (perspective && perspective()) {\n          swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n        }\n        const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n        Object.assign(swiper.params, overwriteParamsResult);\n        Object.assign(swiper.originalParams, overwriteParamsResult);\n      });\n      on('setTranslate', () => {\n        if (swiper.params.effect !== effect) return;\n        setTranslate();\n      });\n      on('setTransition', (_s, duration) => {\n        if (swiper.params.effect !== effect) return;\n        setTransition(duration);\n      });\n      on('transitionEnd', () => {\n        if (swiper.params.effect !== effect) return;\n        if (recreateShadows) {\n          if (!getEffectParams || !getEffectParams().slideShadows) return;\n          // remove shadows\n          swiper.slides.forEach(slideEl => {\n            slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n          });\n          // create new one\n          recreateShadows();\n        }\n      });\n      let requireUpdateOnVirtual;\n      on('virtualUpdate', () => {\n        if (swiper.params.effect !== effect) return;\n        if (!swiper.slides.length) {\n          requireUpdateOnVirtual = true;\n        }\n        requestAnimationFrame(() => {\n          if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n            setTranslate();\n            requireUpdateOnVirtual = false;\n          }\n        });\n      });\n    }\n\n    function effectTarget(effectParams, slideEl) {\n      const transformEl = getSlideTransformEl(slideEl);\n      if (transformEl !== slideEl) {\n        transformEl.style.backfaceVisibility = 'hidden';\n        transformEl.style['-webkit-backface-visibility'] = 'hidden';\n      }\n      return transformEl;\n    }\n\n    function effectVirtualTransitionEnd(_ref) {\n      let {\n        swiper,\n        duration,\n        transformElements,\n        allSlides\n      } = _ref;\n      const {\n        activeIndex\n      } = swiper;\n      const getSlide = el => {\n        if (!el.parentElement) {\n          // assume shadow root\n          const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n          return slide;\n        }\n        return el.parentElement;\n      };\n      if (swiper.params.virtualTranslate && duration !== 0) {\n        let eventTriggered = false;\n        let transitionEndTarget;\n        if (allSlides) {\n          transitionEndTarget = transformElements;\n        } else {\n          transitionEndTarget = transformElements.filter(transformEl => {\n            const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n            return swiper.getSlideIndex(el) === activeIndex;\n          });\n        }\n        transitionEndTarget.forEach(el => {\n          elementTransitionEnd(el, () => {\n            if (eventTriggered) return;\n            if (!swiper || swiper.destroyed) return;\n            eventTriggered = true;\n            swiper.animating = false;\n            const evt = new window.CustomEvent('transitionend', {\n              bubbles: true,\n              cancelable: true\n            });\n            swiper.wrapperEl.dispatchEvent(evt);\n          });\n        });\n      }\n    }\n\n    function EffectFade(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        fadeEffect: {\n          crossFade: false\n        }\n      });\n      const setTranslate = () => {\n        const {\n          slides\n        } = swiper;\n        const params = swiper.params.fadeEffect;\n        for (let i = 0; i < slides.length; i += 1) {\n          const slideEl = swiper.slides[i];\n          const offset = slideEl.swiperSlideOffset;\n          let tx = -offset;\n          if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n          let ty = 0;\n          if (!swiper.isHorizontal()) {\n            ty = tx;\n            tx = 0;\n          }\n          const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n          const targetEl = effectTarget(params, slideEl);\n          targetEl.style.opacity = slideOpacity;\n          targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n        }\n      };\n      const setTransition = duration => {\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n        transformElements.forEach(el => {\n          el.style.transitionDuration = `${duration}ms`;\n        });\n        effectVirtualTransitionEnd({\n          swiper,\n          duration,\n          transformElements,\n          allSlides: true\n        });\n      };\n      effectInit({\n        effect: 'fade',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        overwriteParams: () => ({\n          slidesPerView: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: !swiper.params.cssMode\n        })\n      });\n    }\n\n    function EffectCube(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        cubeEffect: {\n          slideShadows: true,\n          shadow: true,\n          shadowOffset: 20,\n          shadowScale: 0.94\n        }\n      });\n      const createSlideShadows = (slideEl, progress, isHorizontal) => {\n        let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBefore) {\n          shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n          slideEl.append(shadowBefore);\n        }\n        if (!shadowAfter) {\n          shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n          slideEl.append(shadowAfter);\n        }\n        if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n        if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n      };\n      const recreateShadows = () => {\n        // create new ones\n        const isHorizontal = swiper.isHorizontal();\n        swiper.slides.forEach(slideEl => {\n          const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n          createSlideShadows(slideEl, progress, isHorizontal);\n        });\n      };\n      const setTranslate = () => {\n        const {\n          el,\n          wrapperEl,\n          slides,\n          width: swiperWidth,\n          height: swiperHeight,\n          rtlTranslate: rtl,\n          size: swiperSize,\n          browser\n        } = swiper;\n        const params = swiper.params.cubeEffect;\n        const isHorizontal = swiper.isHorizontal();\n        const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n        let wrapperRotate = 0;\n        let cubeShadowEl;\n        if (params.shadow) {\n          if (isHorizontal) {\n            cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n            if (!cubeShadowEl) {\n              cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n              swiper.slidesEl.append(cubeShadowEl);\n            }\n            cubeShadowEl.style.height = `${swiperWidth}px`;\n          } else {\n            cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n            if (!cubeShadowEl) {\n              cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n              el.append(cubeShadowEl);\n            }\n          }\n        }\n        for (let i = 0; i < slides.length; i += 1) {\n          const slideEl = slides[i];\n          let slideIndex = i;\n          if (isVirtual) {\n            slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n          }\n          let slideAngle = slideIndex * 90;\n          let round = Math.floor(slideAngle / 360);\n          if (rtl) {\n            slideAngle = -slideAngle;\n            round = Math.floor(-slideAngle / 360);\n          }\n          const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n          let tx = 0;\n          let ty = 0;\n          let tz = 0;\n          if (slideIndex % 4 === 0) {\n            tx = -round * 4 * swiperSize;\n            tz = 0;\n          } else if ((slideIndex - 1) % 4 === 0) {\n            tx = 0;\n            tz = -round * 4 * swiperSize;\n          } else if ((slideIndex - 2) % 4 === 0) {\n            tx = swiperSize + round * 4 * swiperSize;\n            tz = swiperSize;\n          } else if ((slideIndex - 3) % 4 === 0) {\n            tx = -swiperSize;\n            tz = 3 * swiperSize + swiperSize * 4 * round;\n          }\n          if (rtl) {\n            tx = -tx;\n          }\n          if (!isHorizontal) {\n            ty = tx;\n            tx = 0;\n          }\n          const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n          if (progress <= 1 && progress > -1) {\n            wrapperRotate = slideIndex * 90 + progress * 90;\n            if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n          }\n          slideEl.style.transform = transform;\n          if (params.slideShadows) {\n            createSlideShadows(slideEl, progress, isHorizontal);\n          }\n        }\n        wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n        wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n        if (params.shadow) {\n          if (isHorizontal) {\n            cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n          } else {\n            const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n            const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n            const scale1 = params.shadowScale;\n            const scale2 = params.shadowScale / multiplier;\n            const offset = params.shadowOffset;\n            cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n          }\n        }\n        const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n        wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n        wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n      };\n      const setTransition = duration => {\n        const {\n          el,\n          slides\n        } = swiper;\n        slides.forEach(slideEl => {\n          slideEl.style.transitionDuration = `${duration}ms`;\n          slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n            subEl.style.transitionDuration = `${duration}ms`;\n          });\n        });\n        if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n          const shadowEl = el.querySelector('.swiper-cube-shadow');\n          if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n        }\n      };\n      effectInit({\n        effect: 'cube',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        recreateShadows,\n        getEffectParams: () => swiper.params.cubeEffect,\n        perspective: () => true,\n        overwriteParams: () => ({\n          slidesPerView: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          resistanceRatio: 0,\n          spaceBetween: 0,\n          centeredSlides: false,\n          virtualTranslate: true\n        })\n      });\n    }\n\n    function createShadow(params, slideEl, side) {\n      const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n      const shadowContainer = getSlideTransformEl(slideEl);\n      let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n      if (!shadowEl) {\n        shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n        shadowContainer.append(shadowEl);\n      }\n      return shadowEl;\n    }\n\n    function EffectFlip(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        flipEffect: {\n          slideShadows: true,\n          limitRotation: true\n        }\n      });\n      const createSlideShadows = (slideEl, progress, params) => {\n        let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBefore) {\n          shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n        }\n        if (!shadowAfter) {\n          shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n        }\n        if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n        if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n      };\n      const recreateShadows = () => {\n        // Set shadows\n        const params = swiper.params.flipEffect;\n        swiper.slides.forEach(slideEl => {\n          let progress = slideEl.progress;\n          if (swiper.params.flipEffect.limitRotation) {\n            progress = Math.max(Math.min(slideEl.progress, 1), -1);\n          }\n          createSlideShadows(slideEl, progress, params);\n        });\n      };\n      const setTranslate = () => {\n        const {\n          slides,\n          rtlTranslate: rtl\n        } = swiper;\n        const params = swiper.params.flipEffect;\n        for (let i = 0; i < slides.length; i += 1) {\n          const slideEl = slides[i];\n          let progress = slideEl.progress;\n          if (swiper.params.flipEffect.limitRotation) {\n            progress = Math.max(Math.min(slideEl.progress, 1), -1);\n          }\n          const offset = slideEl.swiperSlideOffset;\n          const rotate = -180 * progress;\n          let rotateY = rotate;\n          let rotateX = 0;\n          let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n          let ty = 0;\n          if (!swiper.isHorizontal()) {\n            ty = tx;\n            tx = 0;\n            rotateX = -rotateY;\n            rotateY = 0;\n          } else if (rtl) {\n            rotateY = -rotateY;\n          }\n          slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n          if (params.slideShadows) {\n            createSlideShadows(slideEl, progress, params);\n          }\n          const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n          const targetEl = effectTarget(params, slideEl);\n          targetEl.style.transform = transform;\n        }\n      };\n      const setTransition = duration => {\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n        transformElements.forEach(el => {\n          el.style.transitionDuration = `${duration}ms`;\n          el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n            shadowEl.style.transitionDuration = `${duration}ms`;\n          });\n        });\n        effectVirtualTransitionEnd({\n          swiper,\n          duration,\n          transformElements\n        });\n      };\n      effectInit({\n        effect: 'flip',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        recreateShadows,\n        getEffectParams: () => swiper.params.flipEffect,\n        perspective: () => true,\n        overwriteParams: () => ({\n          slidesPerView: 1,\n          slidesPerGroup: 1,\n          watchSlidesProgress: true,\n          spaceBetween: 0,\n          virtualTranslate: !swiper.params.cssMode\n        })\n      });\n    }\n\n    function EffectCoverflow(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        coverflowEffect: {\n          rotate: 50,\n          stretch: 0,\n          depth: 100,\n          scale: 1,\n          modifier: 1,\n          slideShadows: true\n        }\n      });\n      const setTranslate = () => {\n        const {\n          width: swiperWidth,\n          height: swiperHeight,\n          slides,\n          slidesSizesGrid\n        } = swiper;\n        const params = swiper.params.coverflowEffect;\n        const isHorizontal = swiper.isHorizontal();\n        const transform = swiper.translate;\n        const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n        const rotate = isHorizontal ? params.rotate : -params.rotate;\n        const translate = params.depth;\n        // Each slide offset from center\n        for (let i = 0, length = slides.length; i < length; i += 1) {\n          const slideEl = slides[i];\n          const slideSize = slidesSizesGrid[i];\n          const slideOffset = slideEl.swiperSlideOffset;\n          const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n          const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n          let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n          let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n          // var rotateZ = 0\n          let translateZ = -translate * Math.abs(offsetMultiplier);\n          let stretch = params.stretch;\n          // Allow percentage to make a relative stretch for responsive sliders\n          if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n            stretch = parseFloat(params.stretch) / 100 * slideSize;\n          }\n          let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n          let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n          let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n          // Fix for ultra small values\n          if (Math.abs(translateX) < 0.001) translateX = 0;\n          if (Math.abs(translateY) < 0.001) translateY = 0;\n          if (Math.abs(translateZ) < 0.001) translateZ = 0;\n          if (Math.abs(rotateY) < 0.001) rotateY = 0;\n          if (Math.abs(rotateX) < 0.001) rotateX = 0;\n          if (Math.abs(scale) < 0.001) scale = 0;\n          const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n          const targetEl = effectTarget(params, slideEl);\n          targetEl.style.transform = slideTransform;\n          slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n          if (params.slideShadows) {\n            // Set shadows\n            let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n            let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n            if (!shadowBeforeEl) {\n              shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n            }\n            if (!shadowAfterEl) {\n              shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n            }\n            if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n            if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n          }\n        }\n      };\n      const setTransition = duration => {\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n        transformElements.forEach(el => {\n          el.style.transitionDuration = `${duration}ms`;\n          el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n            shadowEl.style.transitionDuration = `${duration}ms`;\n          });\n        });\n      };\n      effectInit({\n        effect: 'coverflow',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        perspective: () => true,\n        overwriteParams: () => ({\n          watchSlidesProgress: true\n        })\n      });\n    }\n\n    function EffectCreative(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        creativeEffect: {\n          limitProgress: 1,\n          shadowPerProgress: false,\n          progressMultiplier: 1,\n          perspective: true,\n          prev: {\n            translate: [0, 0, 0],\n            rotate: [0, 0, 0],\n            opacity: 1,\n            scale: 1\n          },\n          next: {\n            translate: [0, 0, 0],\n            rotate: [0, 0, 0],\n            opacity: 1,\n            scale: 1\n          }\n        }\n      });\n      const getTranslateValue = value => {\n        if (typeof value === 'string') return value;\n        return `${value}px`;\n      };\n      const setTranslate = () => {\n        const {\n          slides,\n          wrapperEl,\n          slidesSizesGrid\n        } = swiper;\n        const params = swiper.params.creativeEffect;\n        const {\n          progressMultiplier: multiplier\n        } = params;\n        const isCenteredSlides = swiper.params.centeredSlides;\n        if (isCenteredSlides) {\n          const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n          wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n        }\n        for (let i = 0; i < slides.length; i += 1) {\n          const slideEl = slides[i];\n          const slideProgress = slideEl.progress;\n          const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n          let originalProgress = progress;\n          if (!isCenteredSlides) {\n            originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n          }\n          const offset = slideEl.swiperSlideOffset;\n          const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n          const r = [0, 0, 0];\n          let custom = false;\n          if (!swiper.isHorizontal()) {\n            t[1] = t[0];\n            t[0] = 0;\n          }\n          let data = {\n            translate: [0, 0, 0],\n            rotate: [0, 0, 0],\n            scale: 1,\n            opacity: 1\n          };\n          if (progress < 0) {\n            data = params.next;\n            custom = true;\n          } else if (progress > 0) {\n            data = params.prev;\n            custom = true;\n          }\n          // set translate\n          t.forEach((value, index) => {\n            t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n          });\n          // set rotates\n          r.forEach((value, index) => {\n            r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n          });\n          slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n          const translateString = t.join(', ');\n          const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n          const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n          const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n          const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n          // Set shadows\n          if (custom && data.shadow || !custom) {\n            let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n            if (!shadowEl && data.shadow) {\n              shadowEl = createShadow(params, slideEl);\n            }\n            if (shadowEl) {\n              const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n              shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n            }\n          }\n          const targetEl = effectTarget(params, slideEl);\n          targetEl.style.transform = transform;\n          targetEl.style.opacity = opacityString;\n          if (data.origin) {\n            targetEl.style.transformOrigin = data.origin;\n          }\n        }\n      };\n      const setTransition = duration => {\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n        transformElements.forEach(el => {\n          el.style.transitionDuration = `${duration}ms`;\n          el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n            shadowEl.style.transitionDuration = `${duration}ms`;\n          });\n        });\n        effectVirtualTransitionEnd({\n          swiper,\n          duration,\n          transformElements,\n          allSlides: true\n        });\n      };\n      effectInit({\n        effect: 'creative',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        perspective: () => swiper.params.creativeEffect.perspective,\n        overwriteParams: () => ({\n          watchSlidesProgress: true,\n          virtualTranslate: !swiper.params.cssMode\n        })\n      });\n    }\n\n    function EffectCards(_ref) {\n      let {\n        swiper,\n        extendParams,\n        on\n      } = _ref;\n      extendParams({\n        cardsEffect: {\n          slideShadows: true,\n          rotate: true,\n          perSlideRotate: 2,\n          perSlideOffset: 8\n        }\n      });\n      const setTranslate = () => {\n        const {\n          slides,\n          activeIndex,\n          rtlTranslate: rtl\n        } = swiper;\n        const params = swiper.params.cardsEffect;\n        const {\n          startTranslate,\n          isTouched\n        } = swiper.touchEventsData;\n        const currentTranslate = rtl ? -swiper.translate : swiper.translate;\n        for (let i = 0; i < slides.length; i += 1) {\n          const slideEl = slides[i];\n          const slideProgress = slideEl.progress;\n          const progress = Math.min(Math.max(slideProgress, -4), 4);\n          let offset = slideEl.swiperSlideOffset;\n          if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n            swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n          }\n          if (swiper.params.centeredSlides && swiper.params.cssMode) {\n            offset -= slides[0].swiperSlideOffset;\n          }\n          let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n          let tY = 0;\n          const tZ = -100 * Math.abs(progress);\n          let scale = 1;\n          let rotate = -params.perSlideRotate * progress;\n          let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n          const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n          const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n          const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n          if (isSwipeToNext || isSwipeToPrev) {\n            const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n            rotate += -28 * progress * subProgress;\n            scale += -0.5 * subProgress;\n            tXAdd += 96 * subProgress;\n            tY = `${-25 * subProgress * Math.abs(progress)}%`;\n          }\n          if (progress < 0) {\n            // next\n            tX = `calc(${tX}px ${rtl ? '-' : '+'} (${tXAdd * Math.abs(progress)}%))`;\n          } else if (progress > 0) {\n            // prev\n            tX = `calc(${tX}px ${rtl ? '-' : '+'} (-${tXAdd * Math.abs(progress)}%))`;\n          } else {\n            tX = `${tX}px`;\n          }\n          if (!swiper.isHorizontal()) {\n            const prevY = tY;\n            tY = tX;\n            tX = prevY;\n          }\n          const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n\n          /* eslint-disable */\n          const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rtl ? -rotate : rotate : 0}deg)\n        scale(${scaleString})\n      `;\n          /* eslint-enable */\n\n          if (params.slideShadows) {\n            // Set shadows\n            let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n            if (!shadowEl) {\n              shadowEl = createShadow(params, slideEl);\n            }\n            if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n          }\n          slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n          const targetEl = effectTarget(params, slideEl);\n          targetEl.style.transform = transform;\n        }\n      };\n      const setTransition = duration => {\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n        transformElements.forEach(el => {\n          el.style.transitionDuration = `${duration}ms`;\n          el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n            shadowEl.style.transitionDuration = `${duration}ms`;\n          });\n        });\n        effectVirtualTransitionEnd({\n          swiper,\n          duration,\n          transformElements\n        });\n      };\n      effectInit({\n        effect: 'cards',\n        swiper,\n        on,\n        setTranslate,\n        setTransition,\n        perspective: () => true,\n        overwriteParams: () => ({\n          watchSlidesProgress: true,\n          virtualTranslate: !swiper.params.cssMode\n        })\n      });\n    }\n\n    // Swiper Class\n    const modules = [Virtual, Keyboard, Mousewheel, Navigation, Pagination, Scrollbar, Parallax, Zoom, Controller, A11y, History, HashNavigation, Autoplay, Thumb, freeMode, Grid, Manipulation, EffectFade, EffectCube, EffectFlip, EffectCoverflow, EffectCreative, EffectCards];\n    Swiper.use(modules);\n\n    return Swiper;\n\n}));\n//# sourceMappingURL=swiper-bundle.js.map\n"]}